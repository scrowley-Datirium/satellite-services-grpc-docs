var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/APISyncComplete.html",[0,0.239,1,0.992]],["body/interfaces/APISyncComplete.html",[0,0.48,1,1.251,2,0.204,3,0.092,4,0.146,5,0.092,6,0.926,7,2.298,8,1.644,9,0.533,10,1.374,11,3.293,12,0.241,13,0.019,14,1.523,15,1.137,16,1.959,17,1.312,18,1.376,19,0.883,20,1.304,21,1.312,22,0.971,23,0.328,24,0.883,25,0.971,26,0.971,27,0.971,28,0.883,29,0.682,30,0.926,31,0.971,32,1.137,33,0.926,34,1.385,35,0.926,36,1.192,37,1.251,38,0.778,39,1.251,40,1.086,41,1.385,42,1.083,43,1.251,44,1.083,45,1.258,46,1.258,47,1.258,48,1.083,49,1.083,50,1.198,51,1.368,52,1.312,53,1.523,54,1.137,55,0.721,56,1.192,57,1.083,58,0.926,59,0.926,60,0.971,61,1.58,62,0.926,63,0.682,64,0.971,65,0.971,66,1.376,67,1.598,68,1.58,69,1.137,70,1.452,71,1.376,72,1.523,73,1.376,74,0.503,75,1.376,76,1.376,77,1.385,78,0.926,79,1.376,80,1.523,81,0.926,82,0.841,83,0.971,84,0.802,85,0.841,86,0.841,87,0.627,88,0.926,89,0.971,90,0.926,91,0.971,92,0.971,93,0.693,94,0.971,95,1.251,96,1.192,97,0.971,98,0.971,99,0.971,100,1.523,101,0.971,102,0.971,103,0.429,104,0.971,105,0.234,106,0.802,107,0.841,108,0.971,109,0.971,110,0.926,111,0.926,112,0.971,113,0.971,114,0.926,115,0.883,116,1.523,117,1.657,118,0.926,119,0.287,120,0.883,121,0.883,122,1.436,123,1.137,124,1.312,125,0.971,126,0.764,127,0.802,128,0.481,129,0.971,130,0.66,131,0.883,132,0.011,133,0.011]],["title/interfaces/APISyncMessage.html",[0,0.239,28,0.992]],["body/interfaces/APISyncMessage.html",[0,0.477,1,0.843,2,0.195,3,0.088,4,0.14,5,0.088,6,0.884,8,1.609,9,0.533,12,0.234,13,0.019,14,1.485,15,1.1,16,1.933,17,1.269,18,1.331,19,0.843,20,1.276,21,1.269,22,0.927,23,0.326,24,0.843,25,0.927,26,0.927,27,0.927,28,1.21,29,0.893,30,1.623,31,1.702,32,1.406,33,1.623,34,1.562,35,1.623,36,1.475,37,1.639,38,0.783,39,1.21,40,1.058,41,1.35,42,1.048,43,1.21,44,1.048,45,1.226,46,1.226,47,1.226,48,1.048,49,1.048,50,1.168,51,1.34,52,1.269,53,1.485,54,1.1,55,0.697,56,1.154,57,1.048,58,0.884,59,0.884,60,0.927,61,1.547,62,0.884,63,0.66,64,0.927,65,0.927,66,1.331,67,1.557,68,1.547,69,1.1,70,1.416,71,1.331,72,1.485,73,1.331,74,0.487,75,1.331,76,1.331,77,1.35,78,0.884,79,1.331,80,1.485,81,0.884,82,0.803,83,0.927,84,0.766,85,0.803,86,0.803,87,0.616,88,0.884,89,0.927,90,0.884,91,0.927,92,0.927,93,0.662,94,0.927,95,1.21,96,1.154,97,0.927,98,0.927,99,0.927,100,1.485,101,0.927,102,0.927,103,0.409,104,0.927,105,0.336,106,0.766,107,0.803,108,0.927,109,0.927,110,0.884,111,0.884,112,0.927,113,0.927,114,0.884,115,0.843,116,1.485,117,1.623,118,0.884,119,0.274,120,0.843,121,0.843,122,1.406,123,1.1,124,1.269,125,0.927,126,0.73,127,0.766,128,0.459,129,0.927,130,0.63,131,0.843,132,0.011,133,0.011,134,0.214,135,0.52,136,1.215]],["title/interfaces/APISyncService.html",[0,0.239,24,0.992]],["body/interfaces/APISyncService.html",[0,0.477,1,0.838,2,0.194,3,0.087,4,0.139,5,0.087,6,0.878,8,1.607,9,0.532,10,2.196,12,0.234,13,0.019,14,1.84,15,1.095,16,2.15,17,1.264,18,1.325,19,0.838,20,1.273,21,1.264,22,0.921,23,0.325,24,1.205,25,1.325,26,1.325,27,1.325,28,0.838,29,0.657,30,0.878,31,0.921,32,1.095,33,0.878,34,1.345,35,0.878,36,1.149,37,1.205,38,0.771,39,1.205,40,1.055,41,1.345,42,1.043,43,1.205,44,1.043,45,1.222,46,1.222,47,1.222,48,1.043,49,1.043,50,1.164,51,1.336,52,1.264,53,1.48,54,1.095,55,0.942,56,1.149,57,1.043,58,0.878,59,0.878,60,0.921,61,1.543,62,0.878,63,0.657,64,0.921,65,0.921,66,1.325,67,1.552,68,1.543,69,1.095,70,1.411,71,1.325,72,1.48,73,1.325,74,0.485,75,1.325,76,1.325,77,1.345,78,0.878,79,1.325,80,1.48,81,0.878,82,0.798,83,0.921,84,0.761,85,0.798,86,0.798,87,0.615,88,0.878,89,0.921,90,0.878,91,0.921,92,0.921,93,0.658,94,0.921,95,1.205,96,1.149,97,0.921,98,0.921,99,0.921,100,1.48,101,0.921,102,0.921,103,0.407,104,0.921,105,0.306,106,0.761,107,0.798,108,0.921,109,0.921,110,0.878,111,0.878,112,0.921,113,0.921,114,0.878,115,0.838,116,1.48,117,1.618,118,0.878,119,0.273,120,0.838,121,0.838,122,1.402,123,1.095,124,1.264,125,0.921,126,0.725,127,0.761,128,0.457,129,0.921,130,0.626,131,0.838,132,0.011,133,0.011,134,0.213,136,1.108,137,2.351,138,4.494,139,4.494,140,4.494,141,3.125,142,2.754,143,5.264,144,2.754,145,3.125,146,3.125]],["title/interfaces/AirflowReportToAPI.html",[0,0.239,147,1.262]],["body/interfaces/AirflowReportToAPI.html",[0,0.48,2,0.241,3,0.146,4,0.173,5,0.109,9,0.536,12,0.173,13,0.019,23,0.33,29,0.925,38,0.565,63,0.569,74,0.781,87,0.528,103,0.682,105,0.349,119,0.576,128,0.569,132,0.014,133,0.013,134,0.265,135,0.603,147,1.785,148,1.393,149,2.561,150,2.436,151,2.486,152,1.867,153,1.971,154,1.971,155,1.326,156,1.465,157,1.465,158,1.465,159,1.326,160,1.465,161,1.971,162,1.971,163,1.465,164,2.227,165,2.383,166,1.785,167,1.465,168,1.465,169,1.465,170,1.465,171,1.465,172,1.465,173,1.465,174,1.875,175,1.326,176,1.465,177,1.465,178,1.465,179,1.465,180,1.971,181,1.785,182,1.971,183,1.745,184,1.465,185,1.971,186,1.465,187,1.465,188,1.393,189,1.971,190,1.785,191,1.326,192,1.971,193,1.465,194,1.785,195,1.465,196,1.465,197,1.465,198,1.785,199,1.326,200,1.465,201,1.263,202,1.465,203,1.326,204,1.263,205,1.465,206,1.971,207,1.465,208,1.465,209,1.043,210,1.326]],["title/interfaces/AirflowSuccessToAPI.html",[0,0.239,203,1.262]],["body/interfaces/AirflowSuccessToAPI.html",[0,0.481,2,0.244,3,0.147,4,0.175,5,0.11,9,0.536,12,0.175,13,0.019,23,0.331,29,0.929,38,0.569,63,0.575,74,0.782,87,0.532,103,0.687,105,0.342,119,0.46,128,0.575,132,0.017,133,0.013,134,0.268,135,0.608,147,1.342,148,1.409,149,2.569,150,2.444,151,2.496,152,1.161,153,1.986,154,1.986,155,1.342,156,1.482,157,1.482,158,1.482,159,1.342,160,1.482,161,1.986,162,1.986,163,1.482,164,2.24,165,2.394,166,1.799,167,1.482,168,1.482,169,1.482,170,1.482,171,1.482,172,1.482,173,1.482,174,1.889,175,1.342,176,1.482,177,1.482,178,1.482,179,1.482,180,1.986,181,1.799,182,1.986,183,1.756,184,1.482,185,1.986,186,1.482,187,1.482,188,1.409,189,1.986,190,1.799,191,1.342,192,1.986,193,1.482,194,1.799,195,1.482,196,1.482,197,1.482,198,1.799,199,1.342,200,1.482,201,1.278,202,1.482,203,1.799,204,1.278,205,1.482,206,1.986,207,1.482,208,1.482,209,1.055,210,1.342]],["title/modules/AppModule.html",[211,1.937,212,2.21]],["body/modules/AppModule.html",[3,0.116,4,0.184,5,0.116,12,0.335,13,0.019,15,1.011,23,0.184,40,0.832,82,1.061,114,1.167,126,0.964,132,0.013,133,0.013,183,1.224,211,2.86,212,4.498,213,2.314,214,3.048,215,3.568,216,3.568,217,3.568,218,3.568,219,4.455,220,4.775,221,4.455,222,4.455,223,4.455,224,3.514,225,2.668,226,4.151,227,3.815,228,3.815,229,3.815,230,3.929,231,5.466,232,1.827,233,4.151,234,3.568,235,4.151,236,4.151,237,5.466,238,3.568,239,3.568,240,2.897,241,5.466,242,3.184,243,4.151,244,3.184,245,4.151,246,4.711,247,2.668,248,3.514,249,4.151,250,6.496,251,4.151,252,4.151,253,3.514,254,4.151,255,4.151,256,3.568,257,4.151,258,4.151,259,4.151,260,4.266,261,4.151,262,4.151,263,4.151,264,4.151,265,4.151,266,4.151,267,4.151,268,4.151,269,4.151,270,2.172,271,5.466,272,4.151,273,2.897,274,2.172,275,4.151,276,4.151,277,4.151,278,4.151,279,4.151,280,4.151,281,5.466,282,6.496,283,4.151,284,3.184,285,1.93]],["title/interfaces/Aria2cProgressReport.html",[0,0.239,194,1.262]],["body/interfaces/Aria2cProgressReport.html",[0,0.481,2,0.243,3,0.147,4,0.174,5,0.11,9,0.536,12,0.174,13,0.019,23,0.331,29,0.928,38,0.568,63,0.574,74,0.795,87,0.531,103,0.686,105,0.342,119,0.46,128,0.574,132,0.014,133,0.013,134,0.267,135,0.606,147,1.338,148,1.406,149,2.238,150,2.129,151,1.983,152,1.158,153,1.983,154,1.983,155,1.338,156,1.478,157,1.478,158,1.478,159,1.338,160,1.478,161,1.983,162,1.983,163,1.478,164,2.238,165,2.391,166,1.796,167,1.478,168,1.478,169,1.478,170,1.478,171,1.478,172,1.478,173,1.478,174,1.886,175,1.338,176,1.478,177,1.478,178,1.478,179,1.478,180,1.983,181,1.796,182,1.983,183,1.753,184,1.478,185,1.983,186,1.478,187,1.478,188,1.406,189,1.983,190,1.796,191,1.338,192,2.494,193,1.478,194,2.026,195,2.391,196,2.391,197,2.391,198,2.165,199,1.338,200,1.478,201,1.275,202,1.478,203,1.338,204,1.275,205,1.478,206,1.983,207,1.478,208,1.478,209,1.053,210,1.338]],["title/interfaces/AriaDownloadObject.html",[0,0.239,190,1.262]],["body/interfaces/AriaDownloadObject.html",[0,0.482,2,0.249,3,0.149,4,0.179,5,0.112,9,0.536,12,0.179,13,0.019,23,0.332,29,0.938,38,0.578,63,0.783,74,0.768,87,0.54,103,0.697,105,0.302,119,0.467,128,0.588,132,0.015,133,0.013,134,0.274,135,0.617,147,1.372,148,1.441,149,2.265,150,2.155,151,2.016,152,1.187,153,2.016,154,2.016,155,1.372,156,1.515,157,1.515,158,1.515,159,1.372,160,1.515,161,2.016,162,2.016,163,1.515,164,2.265,165,2.415,166,1.825,167,1.515,168,1.515,169,1.515,170,1.515,171,1.515,172,1.515,173,1.515,174,1.918,175,1.372,176,1.515,177,1.515,178,1.515,179,1.515,180,2.016,181,2.052,182,2.016,183,1.775,184,1.515,185,2.016,186,1.515,187,1.515,188,1.441,189,2.515,190,2.052,191,1.372,192,2.016,193,1.515,194,1.825,195,1.515,196,1.515,197,1.515,198,1.825,199,1.372,200,1.515,201,1.307,202,1.515,203,1.372,204,1.307,205,1.515,206,2.016,207,1.515,208,1.515,209,1.079,210,1.372]],["title/interfaces/AriaFileInfo.html",[0,0.239,198,1.262]],["body/interfaces/AriaFileInfo.html",[0,0.482,2,0.247,3,0.149,4,0.177,5,0.111,9,0.536,12,0.177,13,0.019,23,0.331,29,0.934,38,0.574,63,0.583,74,0.767,87,0.537,103,0.693,105,0.343,119,0.464,128,0.583,132,0.015,133,0.013,134,0.271,135,0.613,147,1.359,148,1.428,149,2.255,150,2.145,151,2.003,152,1.176,153,2.003,154,2.003,155,1.359,156,1.501,157,1.501,158,1.501,159,1.359,160,1.501,161,2.003,162,2.003,163,1.501,164,2.255,165,2.406,166,1.814,167,1.501,168,1.501,169,1.501,170,1.501,171,1.501,172,1.501,173,1.501,174,1.906,175,1.359,176,1.501,177,1.501,178,1.501,179,1.501,180,2.003,181,1.814,182,2.003,183,2.021,184,1.501,185,2.003,186,1.501,187,1.501,188,1.428,189,2.003,190,1.814,191,1.359,192,2.003,193,1.501,194,1.814,195,1.501,196,1.501,197,1.501,198,2.042,199,1.359,200,1.501,201,1.295,202,2.406,203,1.359,204,1.295,205,1.501,206,2.003,207,1.501,208,1.501,209,1.069,210,1.359,286,2.622]],["title/modules/AuthModule.html",[211,1.937,219,2.38]],["body/modules/AuthModule.html",[3,0.152,4,0.241,5,0.152,12,0.307,13,0.019,23,0.241,126,1.261,132,0.016,133,0.016,211,3.386,213,3.03,214,3.609,219,4.819,224,4.161,225,3.493,227,4.518,228,3.793,229,4.518,232,2.391,239,4.671,240,3.793,256,4.671,285,2.527,287,4.671,288,4.671,289,4.671,290,4.949,291,5.434,292,5.434]],["title/injectables/AuthService.html",[290,2.38,293,1.466]],["body/injectables/AuthService.html",[2,0.281,3,0.127,4,0.202,5,0.127,9,0.514,10,3.01,12,0.283,13,0.019,23,0.202,30,1.794,55,0.985,105,0.348,132,0.014,133,0.014,134,0.309,135,0.667,136,1.343,137,3.03,142,3.338,144,3.338,174,2.074,204,1.88,232,1.997,240,3.168,270,2.375,274,3.516,285,2.111,290,3.724,293,2.294,294,2.531,295,3.902,296,4.453,297,6.38,298,4.011,299,6.721,300,5.793,301,6.721,302,5.793,303,5.793,304,2.709,305,4.539,306,7.1,307,5.793,308,5.793,309,4.539,310,4.539,311,5.793,312,4.539,313,3.724,314,4.539,315,4.539,316,4.539,317,3.168,318,4.539,319,5.793,320,4.539,321,4.539,322,4.539,323,4.539,324,2.709,325,3.482,326,3.902,327,4.539,328,4.539,329,4.539,330,4.539,331,4.539,332,4.539,333,3.902,334,4.539]],["title/interfaces/BaseContext.html",[0,0.239,335,2.38]],["body/interfaces/BaseContext.html",[0,0.383,2,0.242,3,0.109,4,0.174,5,0.109,8,1.377,9,0.519,12,0.282,13,0.019,20,1.403,23,0.314,38,0.773,40,1.271,42,1.22,44,1.473,45,1.473,46,1.473,47,1.473,48,1.473,49,0.908,50,0.865,51,1.22,55,0.98,57,1.22,69,0.953,87,0.394,93,1.336,105,0.384,119,0.518,130,1.271,132,0.013,133,0.013,134,0.266,135,0.605,209,1.049,335,3.815,336,2.515,337,4.078,338,4.866,339,3.537,340,4.031,341,4.078,342,2.181,343,1.819,344,3.815,345,3.668,346,2.515,347,2.047,348,2.515,349,2.731,350,4.068,351,3.378,352,2.515,353,2.731,354,2.515,355,2.515,356,2.335,357,2.335,358,2.515,359,2.515,360,3.951,361,3.137,362,4.254,363,3.137,364,3.137,365,3.137,366,2.731,367,2.181,368,2.731]],["title/interfaces/BaseModuleInterface.html",[0,0.239,159,1.262]],["body/interfaces/BaseModuleInterface.html",[0,0.48,2,0.241,3,0.146,4,0.173,5,0.109,9,0.536,10,2.185,12,0.173,13,0.019,23,0.33,29,0.925,38,0.565,55,0.601,63,0.569,74,0.763,87,0.528,103,0.682,105,0.317,119,0.457,128,0.569,132,0.014,133,0.013,134,0.265,136,0.819,137,2.74,142,2.036,144,2.74,147,1.326,148,1.393,149,2.227,150,2.119,151,1.971,152,1.148,153,2.383,154,1.971,155,1.326,156,1.465,157,1.465,158,1.465,159,1.785,160,2.383,161,1.971,162,1.971,163,1.971,164,2.486,165,2.561,166,2.017,167,1.465,168,1.465,169,1.465,170,1.465,171,1.465,172,1.465,173,1.465,174,1.875,175,1.326,176,1.465,177,1.465,178,1.465,179,1.465,180,1.971,181,1.785,182,1.971,183,1.745,184,1.465,185,1.971,186,1.465,187,1.465,188,1.393,189,1.971,190,1.785,191,1.326,192,1.971,193,1.465,194,1.785,195,1.465,196,1.465,197,1.465,198,1.785,199,1.326,200,1.465,201,1.263,202,1.465,203,1.326,204,1.263,205,1.465,206,1.971,207,1.465,208,1.465,209,1.043,210,1.326,286,1.917,369,5.237,370,3.892,371,3.892,372,4.502,373,3.892]],["title/injectables/CommandService.html",[221,2.38,293,1.466]],["body/injectables/CommandService.html",[2,0.209,3,0.094,4,0.15,5,0.094,9,0.374,10,2.292,12,0.303,13,0.019,23,0.15,32,0.822,36,1.71,55,0.848,61,0.905,74,0.593,77,0.863,95,2.041,105,0.299,106,1.452,122,1.75,123,1.75,127,1.664,130,0.952,131,1.273,132,0.012,133,0.012,134,0.23,136,1.157,137,2.485,142,2.874,144,3.118,152,1.852,183,0.996,209,1.831,221,3.053,232,1.486,242,2.59,246,2.357,247,2.17,260,3.315,270,3.118,274,2.485,285,1.57,293,1.881,294,1.883,298,3.889,304,2.015,313,4.392,317,2.357,324,2.015,342,1.883,347,3.118,374,2.902,375,4.997,376,4.749,377,4.749,378,2.902,379,3.118,380,3.377,381,3.643,382,4.749,383,3.377,384,2.835,385,4.572,386,5.961,387,5.961,388,4.749,389,3.377,390,2.902,391,2.902,392,2.59,393,2.357,394,2.357,395,2.902,396,2.59,397,4.038,398,5.961,399,4.161,400,4.818,401,4.749,402,4.161,403,5.124,404,6.281,405,4.161,406,5.961,407,3.643,408,4.749,409,3.377,410,5.494,411,3.643,412,3.377,413,5.399,414,3.377,415,3.377,416,3.377,417,2.902,418,2.902,419,2.902,420,3.377,421,3.377,422,3.377,423,3.377,424,3.377,425,3.377,426,4.722,427,2.902,428,3.377,429,4.749,430,4.749,431,2.902,432,3.377,433,3.377,434,3.377,435,3.377,436,2.59,437,3.377,438,3.377,439,3.377,440,3.377,441,3.377,442,3.377,443,3.377,444,3.377,445,3.377,446,3.377,447,3.377]],["title/interfaces/ContextChildren.html",[0,0.239,351,2.38]],["body/interfaces/ContextChildren.html",[0,0.403,2,0.269,3,0.121,4,0.193,5,0.121,7,3.029,8,1.534,9,0.509,10,1.81,12,0.293,13,0.019,20,1.244,23,0.321,38,0.674,40,0.869,42,1.306,44,1.007,45,1.007,46,1.007,47,1.007,48,1.007,49,1.007,50,0.96,51,1.306,55,0.67,57,1.306,69,1.057,87,0.438,93,0.914,105,0.377,119,0.545,130,0.869,132,0.014,133,0.014,209,1.163,335,3.617,336,2.789,337,2.789,338,3.329,339,2.419,341,3.617,342,2.419,343,2.018,344,4.248,345,3.928,346,2.789,347,2.27,348,2.789,349,3.029,350,4.188,351,4.015,352,2.789,353,3.029,354,2.789,355,2.789,356,2.59,357,2.59,358,2.789,359,2.789,360,4.087,361,3.359,362,4.401,363,3.359,364,3.359,365,3.359,366,3.029,367,2.419,368,3.029,448,4.339]],["title/interfaces/CustomPm2StartOptions.html",[0,0.239,41,0.946]],["body/interfaces/CustomPm2StartOptions.html",[0,0.474,1,0.798,2,0.184,3,0.083,4,0.132,5,0.083,6,0.837,8,1.589,9,0.534,12,0.227,13,0.019,14,1.439,15,1.057,16,1.901,17,1.22,18,1.279,19,0.798,20,1.323,21,1.22,22,0.877,23,0.323,24,0.798,25,0.877,26,0.877,27,0.877,28,0.798,29,0.634,30,0.837,31,0.877,32,1.057,33,0.837,34,1.308,35,0.837,36,1.109,37,1.163,38,0.785,39,1.163,40,1.026,41,1.438,42,1.007,43,1.163,44,1.007,45,1.188,46,1.188,47,1.188,48,1.007,49,1.007,50,1.132,51,1.306,52,1.22,53,1.439,54,1.057,55,0.67,56,1.109,57,1.007,58,0.837,59,0.837,60,0.877,61,1.508,62,0.837,63,0.748,64,0.877,65,0.877,66,1.764,67,1.51,68,1.508,69,1.457,70,1.372,71,1.279,72,1.439,73,1.764,74,0.607,75,1.764,76,1.279,77,1.308,78,0.837,79,1.279,80,1.756,81,1.582,82,0.76,83,0.877,84,0.725,85,0.76,86,0.76,87,0.603,88,1.582,89,1.659,90,1.582,91,1.659,92,1.659,93,0.627,94,0.877,95,1.163,96,1.109,97,0.877,98,0.877,99,0.877,100,1.439,101,0.877,102,0.877,103,0.387,104,0.877,105,0.355,106,0.725,107,0.76,108,0.877,109,0.877,110,0.837,111,0.837,112,0.877,113,0.877,114,0.837,115,0.798,116,1.439,117,1.582,118,0.837,119,0.26,120,0.798,121,0.798,122,1.371,123,1.057,124,1.22,125,0.877,126,0.691,127,0.725,128,0.435,129,0.877,130,0.596,131,0.798,132,0.011,133,0.011,134,0.203,135,0.499,136,1.565]],["title/interfaces/DefaultMachineConfig.html",[0,0.239,367,2.064]],["body/interfaces/DefaultMachineConfig.html",[0,0.396,2,0.259,3,0.117,4,0.186,5,0.117,8,1.424,9,0.513,12,0.289,13,0.019,20,1.215,23,0.319,38,0.662,40,0.839,42,1.276,44,0.971,45,0.971,46,0.971,47,0.971,48,0.971,49,1.513,50,0.925,51,1.276,55,0.646,57,1.276,69,1.019,87,0.422,93,0.881,105,0.384,119,0.535,130,0.839,132,0.013,133,0.013,134,0.285,135,0.633,209,1.747,286,3.21,335,3.533,336,2.69,337,2.69,338,3.21,339,2.333,341,3.533,342,2.333,343,1.946,344,3.945,345,3.836,346,2.69,347,2.189,348,2.69,349,2.921,350,4.146,351,3.533,352,2.69,353,2.921,354,2.69,355,2.69,356,2.498,357,2.498,358,2.69,359,2.69,360,4.04,361,3.28,362,4.351,363,3.28,364,3.28,365,3.28,366,2.921,367,3.064,368,4.548]],["title/interfaces/DependencyTree.html",[0,0.239,34,0.946]],["body/interfaces/DependencyTree.html",[0,0.476,1,0.824,2,0.19,3,0.086,4,0.136,5,0.086,6,0.864,8,1.601,9,0.533,12,0.232,13,0.019,14,1.466,15,1.082,16,1.92,17,1.249,18,1.31,19,0.824,20,1.263,21,1.249,22,0.907,23,0.325,24,0.824,25,0.907,26,0.907,27,0.907,28,0.824,29,0.649,30,0.864,31,0.907,32,1.082,33,0.864,34,1.614,35,0.864,36,1.135,37,1.191,38,0.78,39,1.624,40,1.265,41,1.549,42,1.407,43,1.531,44,1.407,45,1.466,46,1.466,47,1.466,48,1.407,49,1.031,50,1.153,51,1.326,52,1.249,53,1.466,54,1.082,55,0.686,56,1.135,57,1.031,58,0.864,59,0.864,60,0.907,61,1.531,62,0.864,63,0.649,64,0.907,65,0.907,66,1.31,67,1.538,68,1.531,69,1.082,70,1.398,71,1.31,72,1.466,73,1.31,74,0.479,75,1.31,76,1.31,77,1.333,78,0.864,79,1.31,80,1.466,81,0.864,82,0.786,83,0.907,84,0.749,85,0.786,86,0.786,87,0.611,88,0.864,89,0.907,90,0.864,91,0.907,92,0.907,93,0.647,94,0.907,95,1.191,96,1.135,97,0.907,98,0.907,99,0.907,100,1.466,101,0.907,102,0.907,103,0.4,104,0.907,105,0.346,106,0.749,107,0.786,108,0.907,109,0.907,110,0.864,111,0.864,112,0.907,113,0.907,114,0.864,115,0.824,116,1.466,117,1.606,118,0.864,119,0.268,120,0.824,121,0.824,122,1.392,123,1.082,124,1.249,125,0.907,126,0.714,127,0.749,128,0.449,129,0.907,130,0.616,131,0.824,132,0.011,133,0.011,134,0.209,135,0.511,136,1.486]],["title/interfaces/DownloadFailed.html",[0,0.239,210,1.262]],["body/interfaces/DownloadFailed.html",[0,0.481,2,0.245,3,0.148,4,0.176,5,0.111,9,0.536,12,0.176,13,0.019,23,0.331,29,1.021,38,0.572,63,0.579,74,0.766,87,0.534,103,0.865,105,0.333,119,0.462,128,0.579,132,0.014,133,0.013,134,0.27,135,0.61,147,1.35,148,1.419,149,2.248,150,2.138,151,1.995,152,1.168,153,1.995,154,1.995,155,1.35,156,1.491,157,1.491,158,1.491,159,1.35,160,1.491,161,1.995,162,1.995,163,1.491,164,2.248,165,2.629,166,1.806,167,1.491,168,1.491,169,1.491,170,1.491,171,1.491,172,1.491,173,1.491,174,1.898,175,1.35,176,1.491,177,1.491,178,1.491,179,1.491,180,1.995,181,1.806,182,1.995,183,1.761,184,1.491,185,1.995,186,1.491,187,1.491,188,1.419,189,1.995,190,1.806,191,1.35,192,1.995,193,1.491,194,1.806,195,1.491,196,1.491,197,1.491,198,1.806,199,1.35,200,1.491,201,1.286,202,1.491,203,1.35,204,1.286,205,1.491,206,1.995,207,1.491,208,1.491,209,1.062,210,1.806]],["title/interfaces/DownloadObject.html",[0,0.239,181,1.262]],["body/interfaces/DownloadObject.html",[0,0.475,2,0.224,3,0.139,4,0.161,5,0.101,9,0.537,12,0.161,13,0.019,23,0.327,29,0.997,38,0.662,63,0.528,74,0.75,87,0.502,103,0.648,105,0.371,119,0.435,128,0.528,132,0.014,133,0.012,134,0.246,135,0.573,136,1.293,147,1.232,148,1.294,149,2.144,150,2.04,151,1.875,152,1.066,153,1.875,154,1.875,155,1.232,156,1.361,157,1.361,158,1.361,159,1.232,160,1.361,161,1.875,162,1.875,163,1.361,164,2.505,165,2.567,166,1.698,167,1.361,168,1.361,169,1.361,170,1.361,171,1.361,172,1.361,173,1.361,174,2.305,175,1.232,176,1.361,177,1.361,178,1.361,179,1.361,180,2.424,181,1.942,182,2.424,183,1.963,184,2.311,185,2.424,186,2.311,187,2.311,188,2.198,189,2.424,190,1.698,191,1.232,192,1.875,193,1.361,194,1.698,195,1.361,196,1.361,197,1.361,198,1.698,199,1.232,200,1.361,201,1.174,202,1.361,203,1.232,204,1.174,205,1.361,206,1.875,207,1.361,208,1.361,209,0.969,210,1.232]],["title/interfaces/DownloadResults.html",[0,0.239,191,1.262]],["body/interfaces/DownloadResults.html",[0,0.476,2,0.228,3,0.141,4,0.164,5,0.103,9,0.536,12,0.164,13,0.019,23,0.328,29,1.002,38,0.668,63,0.539,74,0.773,87,0.509,103,0.844,105,0.363,119,0.566,128,0.539,132,0.014,133,0.012,134,0.251,135,0.581,136,1.57,147,1.256,148,1.319,149,2.166,150,2.397,151,1.899,152,1.087,153,1.899,154,1.899,155,1.256,156,1.387,157,1.387,158,1.387,159,1.256,160,1.387,161,1.899,162,1.899,163,1.387,164,2.166,165,2.58,166,1.72,167,1.387,168,1.387,169,1.387,170,1.387,171,1.387,172,1.387,173,1.387,174,1.807,175,1.256,176,1.387,177,1.387,178,1.387,179,1.387,180,1.899,181,1.72,182,1.899,183,1.974,184,1.387,185,2.44,186,1.387,187,1.387,188,1.319,189,1.899,190,1.72,191,1.72,192,2.44,193,2.329,194,1.72,195,1.387,196,1.387,197,1.387,198,1.72,199,1.256,200,1.387,201,1.196,202,1.387,203,1.256,204,1.196,205,1.387,206,1.899,207,1.387,208,1.387,209,0.988,210,1.256]],["title/interfaces/FileData.html",[0,0.239,166,1.262]],["body/interfaces/FileData.html",[0,0.481,2,0.245,3,0.148,4,0.176,5,0.111,9,0.536,12,0.176,13,0.019,23,0.331,29,0.932,38,0.572,63,0.579,74,0.766,87,0.534,103,0.69,105,0.333,119,0.462,128,0.579,132,0.014,133,0.013,134,0.27,135,0.61,147,1.35,148,1.419,149,2.248,150,2.138,151,1.995,152,1.168,153,1.995,154,2.502,155,1.35,156,1.491,157,1.491,158,1.491,159,1.35,160,1.491,161,1.995,162,1.995,163,1.491,164,2.248,165,2.4,166,2.036,167,1.491,168,1.491,169,1.491,170,1.491,171,1.491,172,1.491,173,1.491,174,1.898,175,1.35,176,1.491,177,1.491,178,1.491,179,2.4,180,2.502,181,1.806,182,1.995,183,1.761,184,1.491,185,1.995,186,1.491,187,1.491,188,1.419,189,1.995,190,1.806,191,1.35,192,1.995,193,1.491,194,1.806,195,1.491,196,1.491,197,1.491,198,1.806,199,1.35,200,1.491,201,1.286,202,1.491,203,1.35,204,1.286,205,1.491,206,1.995,207,1.491,208,1.491,209,1.062,210,1.35]],["title/interfaces/FileFromClient.html",[0,0.239,120,0.992]],["body/interfaces/FileFromClient.html",[0,0.48,1,0.883,2,0.204,3,0.092,4,0.146,5,0.092,6,0.926,7,2.298,8,1.644,9,0.533,10,1.374,12,0.241,13,0.019,14,1.523,15,1.137,16,1.959,17,1.312,18,1.376,19,0.883,20,1.304,21,1.312,22,0.971,23,0.328,24,0.883,25,0.971,26,0.971,27,0.971,28,0.883,29,0.682,30,0.926,31,0.971,32,1.137,33,0.926,34,1.385,35,0.926,36,1.192,37,1.251,38,0.778,39,1.251,40,1.086,41,1.385,42,1.083,43,1.251,44,1.083,45,1.258,46,1.258,47,1.258,48,1.083,49,1.083,50,1.198,51,1.368,52,1.312,53,1.523,54,1.137,55,0.721,56,1.192,57,1.083,58,0.926,59,0.926,60,0.971,61,1.58,62,0.926,63,0.682,64,0.971,65,0.971,66,1.376,67,1.598,68,1.58,69,1.137,70,1.452,71,1.376,72,1.523,73,1.376,74,0.503,75,1.376,76,1.376,77,1.385,78,0.926,79,1.376,80,1.523,81,0.926,82,0.841,83,0.971,84,0.802,85,0.841,86,0.841,87,0.627,88,0.926,89,0.971,90,0.926,91,0.971,92,0.971,93,0.693,94,0.971,95,1.251,96,1.192,97,0.971,98,0.971,99,0.971,100,1.523,101,0.971,102,0.971,103,0.429,104,0.971,105,0.234,106,0.802,107,0.841,108,0.971,109,0.971,110,0.926,111,0.926,112,0.971,113,0.971,114,0.926,115,0.883,116,1.523,117,1.657,118,0.926,119,0.287,120,1.251,121,0.883,122,1.436,123,1.137,124,1.312,125,0.971,126,0.764,127,0.802,128,0.481,129,0.971,130,0.66,131,0.883,132,0.011,133,0.011,449,3.293]],["title/interfaces/Info.html",[0,0.239,3,0.103]],["body/interfaces/Info.html",[0,0.472,2,0.215,3,0.155,4,0.154,5,0.097,9,0.536,12,0.154,13,0.019,23,0.325,29,0.881,38,0.522,63,0.507,74,0.763,87,0.488,103,0.63,105,0.376,119,0.422,128,0.507,132,0.014,133,0.012,134,0.236,135,0.557,136,1.61,147,1.182,148,1.242,149,2.098,150,1.995,151,1.821,152,1.023,153,1.821,154,1.821,155,1.182,156,1.305,157,1.305,158,1.305,159,1.182,160,1.305,161,2.387,162,2.387,163,1.305,164,2.098,165,2.27,166,1.649,167,2.27,168,2.27,169,2.27,170,2.27,171,2.27,172,2.27,173,2.27,174,2.271,175,2.056,176,2.27,177,2.27,178,2.27,179,1.305,180,1.821,181,1.649,182,1.821,183,1.644,184,1.305,185,1.821,186,1.305,187,1.305,188,1.242,189,1.821,190,1.649,191,1.182,192,1.821,193,1.305,194,1.649,195,1.305,196,1.305,197,1.305,198,1.649,199,1.182,200,1.305,201,1.126,202,1.305,203,1.182,204,1.126,205,1.305,206,1.821,207,1.305,208,1.305,209,0.93,210,1.182]],["title/interfaces/MergedDownloadObject.html",[0,0.239,199,1.262]],["body/interfaces/MergedDownloadObject.html",[0,0.482,2,0.248,3,0.149,4,0.178,5,0.112,9,0.536,12,0.178,13,0.019,23,0.332,29,0.935,38,0.575,63,0.584,74,0.767,87,0.538,103,0.694,105,0.321,119,0.465,128,0.584,132,0.015,133,0.013,134,0.272,135,0.614,147,1.363,148,1.432,149,2.258,150,2.148,151,2.007,152,1.179,153,2.007,154,2.007,155,1.363,156,1.505,157,1.505,158,1.505,159,1.363,160,1.505,161,2.007,162,2.007,163,1.505,164,2.258,165,2.409,166,1.817,167,1.505,168,1.505,169,1.505,170,1.505,171,1.505,172,1.505,173,1.505,174,1.909,175,1.363,176,1.505,177,1.505,178,1.505,179,1.505,180,2.007,181,1.817,182,2.007,183,1.769,184,1.505,185,2.007,186,1.505,187,1.505,188,1.432,189,2.007,190,2.181,191,1.363,192,2.007,193,1.505,194,2.181,195,1.505,196,1.505,197,1.505,198,1.817,199,1.817,200,2.409,201,2.078,202,1.505,203,1.363,204,1.298,205,1.505,206,2.007,207,1.505,208,1.505,209,1.072,210,1.363]],["title/interfaces/OnOptions.html",[0,0.239,51,0.859]],["body/interfaces/OnOptions.html",[0,0.479,1,0.859,2,0.199,3,0.089,4,0.142,5,0.089,6,0.901,8,1.616,9,0.534,12,0.237,13,0.019,14,1.501,15,1.115,16,1.944,17,1.287,18,1.35,19,0.859,20,1.288,21,1.287,22,0.946,23,0.327,24,0.859,25,0.946,26,0.946,27,0.946,28,0.859,29,0.669,30,0.901,31,0.946,32,1.115,33,0.901,34,1.365,35,0.901,36,1.17,37,1.227,38,0.774,39,1.227,40,1.07,41,1.365,42,1.063,43,1.227,44,1.063,45,1.24,46,1.24,47,1.24,48,1.063,49,1.063,50,1.181,51,1.43,52,1.287,53,1.801,54,1.115,55,0.707,56,1.17,57,1.063,58,0.901,59,0.901,60,0.946,61,1.767,62,1.637,63,0.669,64,0.946,65,0.946,66,1.35,67,1.575,68,1.561,69,1.115,70,1.431,71,1.35,72,1.501,73,1.35,74,0.494,75,1.35,76,1.35,77,1.365,78,0.901,79,1.35,80,1.501,81,0.901,82,0.819,83,0.946,84,0.781,85,0.819,86,0.819,87,0.621,88,0.901,89,0.946,90,0.901,91,0.946,92,0.946,93,0.675,94,0.946,95,1.227,96,1.17,97,0.946,98,0.946,99,0.946,100,1.501,101,0.946,102,0.946,103,0.417,104,0.946,105,0.309,106,0.781,107,0.819,108,0.946,109,0.946,110,0.901,111,0.901,112,0.946,113,0.946,114,0.901,115,0.859,116,1.501,117,1.637,118,0.901,119,0.28,120,0.859,121,0.859,122,1.419,123,1.115,124,1.287,125,0.946,126,0.744,127,0.781,128,0.469,129,0.946,130,0.643,131,0.859,132,0.011,133,0.011,134,0.218,135,0.527,136,1.349]],["title/interfaces/OptionTypes.html",[0,0.239,50,0.819]],["body/interfaces/OptionTypes.html",[0,0.48,1,0.882,2,0.204,3,0.092,4,0.146,5,0.092,6,0.925,7,2.296,8,1.644,9,0.533,10,1.372,12,0.24,13,0.019,14,1.523,15,1.136,16,1.959,17,1.311,18,1.375,19,0.882,20,1.303,21,1.311,22,0.97,23,0.328,24,0.882,25,0.97,26,0.97,27,0.97,28,0.882,29,0.681,30,0.925,31,0.97,32,1.136,33,0.925,34,1.384,35,0.925,36,1.191,37,1.25,38,0.778,39,1.25,40,1.085,41,1.384,42,1.082,43,1.25,44,1.082,45,1.257,46,1.257,47,1.257,48,1.082,49,1.082,50,1.303,51,1.368,52,1.311,53,1.523,54,1.136,55,0.72,56,1.191,57,1.257,58,0.925,59,0.925,60,0.97,61,1.579,62,0.925,63,0.681,64,0.97,65,0.97,66,1.375,67,1.597,68,1.579,69,1.136,70,1.452,71,1.375,72,1.523,73,1.375,74,0.503,75,1.375,76,1.375,77,1.384,78,0.925,79,1.375,80,1.523,81,0.925,82,0.841,83,0.97,84,0.801,85,0.841,86,0.841,87,0.627,88,0.925,89,0.97,90,0.925,91,0.97,92,0.97,93,0.693,94,0.97,95,1.25,96,1.191,97,0.97,98,0.97,99,0.97,100,1.523,101,0.97,102,0.97,103,0.428,104,0.97,105,0.234,106,0.801,107,0.841,108,0.97,109,0.97,110,0.925,111,0.925,112,0.97,113,0.97,114,0.925,115,0.882,116,1.523,117,1.656,118,0.925,119,0.287,120,0.882,121,0.882,122,1.435,123,1.136,124,1.311,125,0.97,126,0.764,127,0.801,128,0.481,129,0.97,130,0.659,131,0.882,132,0.011,133,0.011,450,3.289]],["title/interfaces/PM2BusPacket.html",[0,0.239,451,2.38]],["body/interfaces/PM2BusPacket.html",[0,0.413,2,0.33,3,0.149,4,0.237,5,0.149,9,0.495,12,0.284,13,0.019,23,0.284,55,0.823,74,0.767,93,1.122,105,0.365,106,1.732,130,1.068,132,0.015,133,0.015,134,0.363,135,0.736,201,2.308,286,3.152,341,4.113,342,2.972,343,2.479,451,4.113,452,4.088,453,5.894,454,3.72,455,3.426,456,4.088,457,4.581,458,4.581,459,4.581,460,4.088]],["title/interfaces/PM2_Service.html",[0,0.239,455,2.38]],["body/interfaces/PM2_Service.html",[0,0.419,2,0.338,3,0.152,4,0.242,5,0.152,9,0.471,12,0.288,13,0.019,23,0.288,55,0.842,74,0.7,93,1.148,105,0.273,106,1.328,130,1.093,132,0.016,133,0.016,134,0.371,135,0.747,201,1.77,341,4.17,342,3.041,343,2.536,451,3.506,452,4.183,453,5.952,454,3.806,455,4.17,456,5.496,457,5.952,458,4.688,459,4.688,460,4.183]],["title/modules/Pm2Module.html",[211,1.937,253,2.38]],["body/modules/Pm2Module.html",[3,0.151,4,0.24,5,0.151,12,0.306,13,0.019,23,0.24,126,1.255,132,0.016,133,0.016,211,3.376,212,3.851,213,3.014,214,3.598,224,4.148,225,3.475,227,4.504,228,3.773,229,4.504,230,4.148,232,2.379,253,4.814,285,2.514,379,4.025,461,4.646,462,4.646,463,4.646,464,5.405,465,4.646,466,5.405]],["title/injectables/Pm2Service.html",[293,1.466,379,1.937]],["body/injectables/Pm2Service.html",[2,0.092,3,0.042,4,0.066,5,0.042,8,0.346,9,0.399,10,2.447,12,0.219,13,0.019,15,0.931,20,1.439,23,0.066,35,0.419,38,0.499,40,1.4,41,1.259,55,1.005,70,0.399,74,0.581,77,0.977,80,0.419,81,0.706,82,0.832,86,0.642,87,0.15,93,1.206,95,1.572,96,0.977,100,1.302,103,0.498,105,0.294,106,0.793,116,0.419,117,1.385,118,0.419,119,0.555,122,1.686,123,1.2,127,1.715,130,0.503,131,1.241,132,0.006,133,0.006,134,0.101,136,1.206,137,1.314,142,2.996,144,3.369,152,1.588,175,0.856,183,0.439,201,1.503,209,1.32,220,2.745,230,0.958,232,0.656,244,1.143,246,2.669,247,0.958,260,4.094,270,3.465,273,2.273,274,3.542,284,1.143,285,0.693,293,0.995,294,0.831,296,4.257,298,3.954,304,1.499,313,4.404,324,3.324,325,3.779,326,4.448,333,4.448,339,1.401,343,3.417,347,1.314,350,1.499,353,1.04,355,0.958,356,1.499,357,3.089,360,0.889,362,1.615,365,0.889,372,1.281,375,5.193,379,2.234,384,3.089,385,3.275,392,1.143,393,1.04,397,4.04,399,3.232,400,3.779,402,3.232,403,1.281,405,3.612,407,3.779,411,2.498,417,2.8,419,2.159,426,1.281,431,2.159,436,1.927,451,2.458,454,1.753,455,2.094,456,1.143,460,1.927,467,1.143,468,2.512,469,2.512,470,2.512,471,2.512,472,2.512,473,3.824,474,2.512,475,2.512,476,2.512,477,2.512,478,2.512,479,1.281,480,2.8,481,1.49,482,2.159,483,2.512,484,1.49,485,2.512,486,5.327,487,3.287,488,5.403,489,3.824,490,4.27,491,5.989,492,2.512,493,1.49,494,2.512,495,3.98,496,2.512,497,2.512,498,1.49,499,2.159,500,2.512,501,1.49,502,2.512,503,1.49,504,1.49,505,2.512,506,3.257,507,2.512,508,3.257,509,2.512,510,1.49,511,2.512,512,3.824,513,4.27,514,2.512,515,1.49,516,3.275,517,2.512,518,2.512,519,2.512,520,1.49,521,3.824,522,3.824,523,4.926,524,5.175,525,3.824,526,5.727,527,3.824,528,3.824,529,2.512,530,1.49,531,2.512,532,4.27,533,1.49,534,2.512,535,2.498,536,2.512,537,1.753,538,1.927,539,3.257,540,2.512,541,2.159,542,2.8,543,1.281,544,1.281,545,1.281,546,1.281,547,1.281,548,1.281,549,1.281,550,3.287,551,1.143,552,1.281,553,1.49,554,2.512,555,3.824,556,3.257,557,2.512,558,1.49,559,1.49,560,1.49,561,1.49,562,1.49,563,2.512,564,2.512,565,1.49,566,1.49,567,1.49,568,3.98,569,1.49,570,1.143,571,3.257,572,1.49,573,1.49,574,1.49,575,2.512,576,1.49,577,1.49,578,1.49,579,1.49,580,2.159,581,1.49,582,1.49,583,3.257,584,1.49,585,4.63,586,1.49,587,1.49,588,1.49,589,1.49,590,1.49,591,1.49,592,4.787,593,1.281,594,1.49,595,1.49,596,3.257,597,1.49,598,1.281,599,3.257,600,1.281,601,1.49,602,1.49,603,1.49,604,1.49,605,1.49,606,1.49,607,3.824,608,3.257,609,1.49,610,1.49,611,4.63,612,3.824,613,1.49,614,1.49,615,1.49,616,1.49,617,1.49,618,1.49,619,1.49,620,1.49,621,3.257,622,1.49,623,2.512,624,2.512,625,2.512,626,2.512,627,1.49,628,2.512,629,1.49,630,1.49,631,1.49,632,1.49,633,1.49,634,1.49,635,1.49,636,1.49,637,1.49,638,1.49,639,1.49,640,1.49,641,3.257,642,3.257,643,1.49,644,3.257,645,2.512,646,2.512,647,1.49,648,1.49,649,1.49,650,1.49,651,2.512,652,1.49,653,1.49,654,1.49,655,1.49,656,1.49,657,2.512,658,1.49,659,1.49,660,1.49,661,1.49,662,1.49,663,1.49,664,1.49,665,1.49,666,1.49,667,2.512,668,1.49,669,1.49,670,1.49,671,1.49,672,1.49,673,1.49,674,2.512,675,2.512,676,1.49,677,1.49,678,1.49,679,1.49,680,1.49,681,1.49,682,1.49,683,2.512,684,2.512,685,1.49]],["title/interfaces/ProcessedData.html",[0,0.239,155,1.262]],["body/interfaces/ProcessedData.html",[0,0.48,2,0.24,3,0.146,4,0.172,5,0.108,9,0.536,12,0.172,13,0.019,23,0.33,29,1.015,38,0.563,63,0.566,74,0.762,87,0.526,103,0.679,105,0.348,119,0.455,128,0.566,132,0.014,133,0.013,134,0.264,135,0.601,136,1.487,147,1.32,148,1.386,149,2.557,150,2.113,151,1.964,152,1.142,153,1.964,154,1.964,155,1.779,156,2.378,157,2.378,158,2.378,159,1.32,160,1.457,161,1.964,162,1.964,163,1.457,164,2.222,165,2.378,166,1.779,167,1.457,168,1.457,169,1.457,170,1.457,171,1.457,172,1.457,173,1.457,174,1.868,175,1.32,176,1.457,177,1.457,178,1.457,179,1.457,180,1.964,181,1.779,182,1.964,183,1.741,184,1.457,185,1.964,186,1.457,187,1.457,188,1.386,189,1.964,190,1.779,191,1.32,192,1.964,193,1.457,194,1.779,195,1.457,196,1.457,197,1.457,198,1.779,199,1.32,200,1.457,201,1.257,202,1.457,203,1.32,204,1.257,205,1.457,206,1.964,207,1.457,208,1.457,209,1.038,210,1.32]],["title/interfaces/ProcessedTree.html",[0,0.239,54,0.902]],["body/interfaces/ProcessedTree.html",[0,0.476,1,0.822,2,0.19,3,0.086,4,0.136,5,0.086,6,0.862,8,1.6,9,0.533,12,0.231,13,0.019,14,1.464,15,1.08,16,1.918,17,1.246,18,1.307,19,0.822,20,1.395,21,1.246,22,0.904,23,0.325,24,0.822,25,0.904,26,0.904,27,0.904,28,0.822,29,0.648,30,0.862,31,0.904,32,1.08,33,0.862,34,1.331,35,0.862,36,1.133,37,1.188,38,0.78,39,1.622,40,1.264,41,1.331,42,1.405,43,1.188,44,1.405,45,1.464,46,1.464,47,1.464,48,1.405,49,1.029,50,1.151,51,1.324,52,1.246,53,1.464,54,1.474,55,0.935,56,1.458,57,1.029,58,0.862,59,0.862,60,0.904,61,1.529,62,0.862,63,0.648,64,0.904,65,0.904,66,1.307,67,1.535,68,1.529,69,1.08,70,1.396,71,1.307,72,1.464,73,1.307,74,0.478,75,1.307,76,1.307,77,1.331,78,0.862,79,1.307,80,1.464,81,0.862,82,0.783,83,0.904,84,0.747,85,0.783,86,0.783,87,0.61,88,0.862,89,0.904,90,0.862,91,0.904,92,0.904,93,0.645,94,0.904,95,1.188,96,1.133,97,0.904,98,0.904,99,0.904,100,1.464,101,0.904,102,0.904,103,0.399,104,0.904,105,0.35,106,0.747,107,0.783,108,0.904,109,0.904,110,0.862,111,0.862,112,0.904,113,0.904,114,0.862,115,0.822,116,1.464,117,1.604,118,0.862,119,0.267,120,0.822,121,0.822,122,1.39,123,1.08,124,1.246,125,0.904,126,0.712,127,0.747,128,0.448,129,0.904,130,0.614,131,0.822,132,0.011,133,0.011,134,0.209,135,0.51,136,1.403]],["title/interfaces/SatelliteJWT.html",[0,0.239,204,1.202]],["body/interfaces/SatelliteJWT.html",[0,0.48,2,0.241,3,0.146,4,0.173,5,0.109,9,0.536,12,0.173,13,0.019,23,0.33,29,0.925,38,0.565,63,0.569,74,0.793,87,0.528,103,0.682,105,0.349,119,0.457,128,0.925,132,0.014,133,0.013,134,0.265,135,0.603,147,1.326,148,1.393,149,2.227,150,2.119,151,1.971,152,1.148,153,1.971,154,1.971,155,1.326,156,1.465,157,1.465,158,1.465,159,1.326,160,1.465,161,1.971,162,1.971,163,1.465,164,2.561,165,2.383,166,1.785,167,1.465,168,1.465,169,1.465,170,1.465,171,1.465,172,1.465,173,1.465,174,1.875,175,1.326,176,1.465,177,1.465,178,1.465,179,1.465,180,1.971,181,1.785,182,1.971,183,1.745,184,1.465,185,1.971,186,1.465,187,1.465,188,1.393,189,1.971,190,1.785,191,1.326,192,1.971,193,1.465,194,1.785,195,1.465,196,1.465,197,1.465,198,1.785,199,1.326,200,1.465,201,1.263,202,1.465,203,1.326,204,1.7,205,2.383,206,1.971,207,2.383,208,2.383,209,1.043,210,1.326]],["title/interfaces/SatelliteMessage.html",[0,0.239,107,0.946]],["body/interfaces/SatelliteMessage.html",[0,0.477,1,0.834,2,0.193,3,0.087,4,0.138,5,0.087,6,0.875,8,1.605,9,0.533,12,0.233,13,0.019,14,1.476,15,1.092,16,1.927,17,1.26,18,1.321,19,0.834,20,1.27,21,1.26,22,0.918,23,0.325,24,0.834,25,0.918,26,0.918,27,0.918,28,0.834,29,0.89,30,0.875,31,0.918,32,1.092,33,0.875,34,1.342,35,0.875,36,1.145,37,1.632,38,0.781,39,1.201,40,1.052,41,1.342,42,1.04,43,1.201,44,1.04,45,1.219,46,1.219,47,1.219,48,1.04,49,1.04,50,1.161,51,1.334,52,1.26,53,1.476,54,1.092,55,0.692,56,1.145,57,1.04,58,0.875,59,0.875,60,0.918,61,1.752,62,0.875,63,0.655,64,0.918,65,0.918,66,1.321,67,1.549,68,1.54,69,1.092,70,1.408,71,1.321,72,1.476,73,1.321,74,0.483,75,1.321,76,1.321,77,1.342,78,0.875,79,1.321,80,1.476,81,0.875,82,0.795,83,0.918,84,0.758,85,0.795,86,0.795,87,0.614,88,0.875,89,0.918,90,0.875,91,0.918,92,0.918,93,0.655,94,0.918,95,1.201,96,1.145,97,0.918,98,0.918,99,0.918,100,1.476,101,0.918,102,0.918,103,0.405,104,0.918,105,0.358,106,0.758,107,1.145,108,1.694,109,1.694,110,0.875,111,0.875,112,0.918,113,0.918,114,0.875,115,0.834,116,1.476,117,1.615,118,0.875,119,0.272,120,0.834,121,0.834,122,1.399,123,1.092,124,1.26,125,0.918,126,0.722,127,0.758,128,0.455,129,0.918,130,0.624,131,0.834,132,0.011,133,0.011,134,0.212,135,0.516,136,1.49,286,2.207]],["title/interfaces/SatelliteOutput.html",[0,0.239,115,0.992]],["body/interfaces/SatelliteOutput.html",[0,0.478,1,0.851,2,0.197,3,0.089,4,0.141,5,0.089,6,0.892,8,1.612,9,0.534,12,0.236,13,0.019,14,1.493,15,1.107,16,1.938,17,1.278,18,1.34,19,0.851,20,1.282,21,1.278,22,0.936,23,0.326,24,0.851,25,0.936,26,0.936,27,0.936,28,0.851,29,0.664,30,0.892,31,0.936,32,1.107,33,0.892,34,1.357,35,0.892,36,1.161,37,1.218,38,0.784,39,1.218,40,1.064,41,1.357,42,1.055,43,1.218,44,1.055,45,1.232,46,1.232,47,1.232,48,1.055,49,1.055,50,1.174,51,1.346,52,1.278,53,1.493,54,1.107,55,0.702,56,1.161,57,1.055,58,0.892,59,0.892,60,0.936,61,1.554,62,0.892,63,0.664,64,0.936,65,0.936,66,1.34,67,1.566,68,1.554,69,1.107,70,1.423,71,1.34,72,1.493,73,1.34,74,0.49,75,1.34,76,1.34,77,1.357,78,0.892,79,1.34,80,1.493,81,0.892,82,0.811,83,0.936,84,0.773,85,0.811,86,0.811,87,0.678,88,0.892,89,0.936,90,0.892,91,0.936,92,0.936,93,0.668,94,0.936,95,1.218,96,1.161,97,0.936,98,0.936,99,0.936,100,1.493,101,0.936,102,0.936,103,0.413,104,0.936,105,0.329,106,0.773,107,0.811,108,0.936,109,0.936,110,0.892,111,0.892,112,0.936,113,0.936,114,0.892,115,1.218,116,1.795,117,1.848,118,1.63,119,0.506,120,0.851,121,0.851,122,1.412,123,1.107,124,1.278,125,0.936,126,0.737,127,0.773,128,0.464,129,0.936,130,0.636,131,0.851,132,0.011,133,0.011,134,0.216,135,0.523,136,0.957]],["title/interfaces/SatelliteTask.html",[0,0.239,32,0.902]],["body/interfaces/SatelliteTask.html",[0,0.475,1,0.811,2,0.187,3,0.084,4,0.134,5,0.084,6,0.851,8,1.595,9,0.534,12,0.229,13,0.019,14,1.453,15,1.07,16,1.911,17,1.235,18,1.295,19,0.811,20,1.254,21,1.235,22,0.892,23,0.324,24,0.811,25,0.892,26,0.892,27,0.892,28,0.811,29,0.642,30,0.851,31,0.892,32,1.259,33,0.851,34,1.321,35,0.851,36,1.122,37,1.177,38,0.787,39,1.177,40,1.258,41,1.539,42,1.019,43,1.177,44,1.019,45,1.458,46,1.458,47,1.458,48,1.019,49,1.019,50,1.143,51,1.316,52,1.235,53,1.453,54,1.07,55,0.93,56,1.122,57,1.019,58,0.851,59,0.851,60,0.892,61,1.737,62,0.851,63,0.642,64,0.892,65,0.892,66,1.295,67,1.524,68,1.52,69,1.07,70,1.385,71,1.295,72,1.453,73,1.295,74,0.474,75,1.295,76,1.295,77,1.321,78,0.851,79,1.295,80,1.453,81,0.851,82,0.773,83,0.892,84,0.737,85,0.773,86,0.773,87,0.607,88,0.851,89,0.892,90,0.851,91,0.892,92,0.892,93,0.637,94,0.892,95,1.614,96,1.539,97,1.672,98,1.672,99,0.892,100,1.453,101,0.892,102,0.892,103,0.394,104,0.892,105,0.353,106,0.737,107,0.773,108,0.892,109,0.892,110,0.851,111,0.851,112,0.892,113,0.892,114,0.851,115,0.811,116,1.453,117,1.594,118,0.851,119,0.264,120,0.811,121,0.811,122,1.381,123,1.07,124,1.235,125,0.892,126,0.702,127,0.737,128,0.442,129,0.892,130,0.606,131,0.811,132,0.011,133,0.011,134,0.206,135,0.505,136,1.508]],["title/interfaces/ServiceCommand.html",[0,0.239,36,0.946]],["body/interfaces/ServiceCommand.html",[0,0.478,1,0.853,2,0.197,3,0.089,4,0.141,5,0.089,6,0.895,8,1.613,9,0.534,12,0.236,13,0.019,14,1.495,15,1.109,16,1.94,17,1.28,18,1.343,19,0.853,20,1.284,21,1.28,22,0.939,23,0.326,24,0.853,25,0.939,26,0.939,27,0.939,28,0.853,29,0.666,30,0.895,31,0.939,32,1.109,33,0.895,34,1.359,35,0.895,36,1.359,37,1.221,38,0.773,39,1.221,40,1.066,41,1.359,42,1.057,43,1.221,44,1.057,45,1.235,46,1.235,47,1.235,48,1.057,49,1.057,50,1.176,51,1.348,52,1.28,53,1.495,54,1.109,55,0.703,56,1.164,57,1.057,58,0.895,59,0.895,60,0.939,61,1.764,62,0.895,63,0.666,64,0.939,65,0.939,66,1.343,67,1.568,68,1.556,69,1.109,70,1.426,71,1.343,72,1.495,73,1.343,74,0.491,75,1.343,76,1.343,77,1.359,78,0.895,79,1.343,80,1.495,81,0.895,82,0.813,83,0.939,84,0.775,85,0.813,86,0.813,87,0.619,88,0.895,89,0.939,90,0.895,91,0.939,92,0.939,93,0.67,94,0.939,95,1.646,96,1.164,97,0.939,98,0.939,99,0.939,100,1.495,101,0.939,102,0.939,103,0.414,104,0.939,105,0.32,106,0.775,107,0.813,108,0.939,109,0.939,110,0.895,111,0.895,112,0.939,113,0.939,114,0.895,115,0.853,116,1.495,117,1.632,118,0.895,119,0.278,120,0.853,121,0.853,122,1.414,123,1.109,124,1.28,125,0.939,126,0.739,127,0.775,128,0.465,129,0.939,130,1.163,131,1.556,132,0.011,133,0.011,134,0.217,135,0.524,136,1.345]],["title/interfaces/StartOptions.html",[0,0.239,20,0.819]],["body/interfaces/StartOptions.html",[0,0.479,1,0.858,2,0.198,3,0.089,4,0.142,5,0.089,6,0.9,8,1.615,9,0.533,12,0.237,13,0.019,14,1.5,15,1.114,16,1.943,17,1.285,18,1.348,19,0.858,20,1.361,21,1.5,22,0.944,23,0.326,24,0.858,25,0.944,26,0.944,27,0.944,28,0.858,29,0.668,30,0.9,31,0.944,32,1.114,33,0.9,34,1.363,35,0.9,36,1.168,37,1.225,38,0.793,39,1.225,40,1.069,41,1.363,42,1.061,43,1.225,44,1.061,45,1.238,46,1.238,47,1.238,48,1.061,49,1.061,50,1.18,51,1.351,52,1.285,53,1.5,54,1.114,55,0.706,56,1.168,57,1.061,58,0.9,59,0.9,60,0.944,61,1.56,62,0.9,63,0.779,64,0.944,65,0.944,66,1.815,67,1.573,68,1.56,69,1.114,70,1.43,71,1.348,72,1.5,73,1.348,74,0.493,75,1.348,76,1.348,77,1.363,78,0.9,79,1.348,80,1.5,81,0.9,82,0.818,83,0.944,84,0.779,85,0.818,86,0.818,87,0.621,88,0.9,89,0.944,90,0.9,91,0.944,92,0.944,93,1.225,94,1.716,95,1.225,96,1.168,97,0.944,98,0.944,99,0.944,100,1.5,101,0.944,102,0.944,103,0.417,104,0.944,105,0.308,106,0.779,107,0.818,108,0.944,109,0.944,110,0.9,111,0.9,112,0.944,113,0.944,114,0.9,115,0.858,116,1.5,117,1.636,118,0.9,119,0.279,120,0.858,121,0.858,122,1.417,123,1.114,124,1.285,125,0.944,126,0.743,127,0.779,128,0.468,129,0.944,130,0.641,131,0.858,132,0.011,133,0.011,134,0.218,135,0.526,136,1.348]],["title/modules/StateMachineModules.html",[211,1.937,248,2.38]],["body/modules/StateMachineModules.html",[3,0.151,4,0.24,5,0.151,12,0.306,13,0.019,23,0.24,126,1.255,132,0.016,133,0.016,211,3.376,212,3.851,213,3.014,214,3.598,224,4.148,225,3.475,227,4.504,228,3.773,229,4.504,230,4.148,232,2.379,248,4.814,285,2.514,465,4.646,686,4.646,687,4.646,688,4.646,689,4.946,690,5.405,691,5.405]],["title/interfaces/StateMachineOptions.html",[0,0.239,56,0.946]],["body/interfaces/StateMachineOptions.html",[0,0.478,1,0.849,2,0.196,3,0.088,4,0.141,5,0.088,6,0.89,8,1.612,9,0.532,12,0.235,13,0.019,14,1.491,15,1.105,16,1.937,17,1.276,18,1.338,19,0.849,20,1.281,21,1.276,22,0.934,23,0.326,24,0.849,25,0.934,26,0.934,27,0.934,28,0.849,29,0.663,30,0.89,31,0.934,32,1.105,33,0.89,34,1.355,35,0.89,36,1.16,37,1.216,38,0.773,39,1.216,40,1.063,41,1.355,42,1.053,43,1.216,44,1.053,45,1.231,46,1.231,47,1.231,48,1.053,49,1.423,50,1.356,51,1.344,52,1.723,53,1.793,54,1.105,55,0.701,56,1.355,57,1.053,58,0.89,59,0.89,60,0.934,61,1.552,62,0.89,63,0.663,64,0.934,65,0.934,66,1.338,67,1.564,68,1.552,69,1.105,70,1.421,71,1.338,72,1.491,73,1.338,74,0.49,75,1.338,76,1.338,77,1.355,78,0.89,79,1.338,80,1.491,81,0.89,82,0.809,83,0.934,84,0.771,85,0.809,86,0.809,87,0.618,88,0.89,89,0.934,90,0.89,91,0.934,92,0.934,93,0.667,94,0.934,95,1.216,96,1.16,97,0.934,98,0.934,99,0.934,100,1.491,101,0.934,102,0.934,103,0.412,104,0.934,105,0.356,106,0.771,107,0.809,108,0.934,109,0.934,110,0.89,111,0.89,112,0.934,113,0.934,114,0.89,115,0.849,116,1.491,117,1.628,118,0.89,119,0.276,120,0.849,121,0.849,122,1.411,123,1.105,124,1.276,125,0.934,126,0.735,127,0.771,128,0.463,129,0.934,130,0.635,131,0.849,132,0.011,133,0.011,134,0.216,135,0.522,136,1.415,286,3.142]],["title/injectables/StateMachinesService.html",[293,1.466,689,2.38]],["body/injectables/StateMachinesService.html",[2,0.141,3,0.064,4,0.101,5,0.064,9,0.296,10,2.457,12,0.278,13,0.019,17,1.656,19,0.611,23,0.101,38,0.47,39,1.798,40,0.873,44,0.529,45,0.824,46,0.824,47,0.824,48,1.011,49,0.529,50,0.504,52,1.225,53,1.382,54,1.198,55,0.91,68,0.951,69,1.061,70,0.951,84,1.061,85,1.113,86,0.907,87,0.23,93,0.48,103,0.297,105,0.246,107,0.582,110,0.997,111,1.225,122,1.698,123,0.864,124,1.225,127,1.374,130,0.457,132,0.009,133,0.009,134,0.155,135,0.408,136,0.917,137,1.856,142,2.279,144,2.572,152,1.978,209,0.611,220,3.425,230,1.465,232,1.003,244,1.748,270,3.775,273,2.477,274,3.081,284,1.748,285,1.06,293,1.405,294,1.271,296,4.465,298,3.735,304,2.118,324,3.818,337,2.281,339,3.396,340,3.342,343,2.478,344,2.281,346,1.465,347,2.279,348,4.022,350,2.935,352,1.465,354,1.465,356,1.361,357,1.361,358,1.465,359,1.465,360,2.935,361,1.361,362,3.16,363,2.118,364,1.361,367,1.978,384,2.118,393,1.591,397,3.425,399,3.041,402,3.041,405,3.041,407,1.748,413,1.959,418,4.226,427,1.959,436,1.748,454,2.477,479,1.959,482,3.05,486,4.226,487,3.05,488,1.959,495,3.05,499,1.959,516,3.342,537,3.718,541,1.959,543,1.959,544,1.959,545,1.959,546,1.959,547,1.959,548,1.959,549,1.959,550,1.959,551,1.748,552,1.959,570,3.342,593,3.05,598,3.05,600,1.959,689,2.281,692,1.748,693,4.356,694,4.356,695,4.356,696,4.356,697,3.548,698,3.548,699,3.548,700,3.548,701,5.498,702,2.279,703,3.548,704,5.642,705,4.579,706,4.917,707,3.05,708,3.05,709,3.548,710,3.745,711,3.548,712,3.548,713,3.548,714,2.279,715,4.356,716,3.548,717,4.917,718,3.745,719,2.279,720,2.279,721,2.279,722,3.548,723,2.279,724,3.548,725,2.279,726,1.748,727,2.279,728,2.279,729,3.548,730,1.959,731,2.279,732,2.279,733,2.279,734,2.279,735,2.279,736,1.959,737,6.091,738,2.279,739,2.279,740,2.279,741,2.279,742,3.548,743,4.917,744,3.548,745,3.548,746,3.05,747,4.356,748,4.356,749,2.279,750,2.279,751,4.356,752,3.548,753,3.548,754,3.548,755,2.279,756,4.917,757,2.279,758,5.89,759,3.548,760,2.279,761,3.548,762,3.548,763,2.279,764,2.279,765,2.279,766,3.548,767,2.279,768,3.548,769,3.548,770,2.279,771,2.279,772,2.279,773,3.548,774,3.548,775,2.279,776,2.279,777,3.548,778,3.548,779,2.279,780,2.279,781,3.548,782,3.548,783,2.279,784,2.279,785,2.279,786,3.548,787,3.548,788,2.279,789,2.279,790,2.279,791,2.279,792,3.548,793,3.548,794,2.279,795,3.548,796,3.548,797,2.279,798,2.279,799,3.548,800,2.279,801,3.548,802,2.279,803,2.279,804,3.548,805,2.279,806,2.279,807,2.279,808,2.279,809,2.279,810,2.279,811,2.279,812,2.279,813,2.279,814,3.548,815,1.959,816,3.548,817,3.548,818,3.548,819,3.548,820,3.548,821,2.279,822,1.959,823,2.279,824,2.279]],["title/interfaces/StateOptions.html",[0,0.239,57,0.859]],["body/interfaces/StateOptions.html",[0,0.478,1,0.852,2,0.197,3,0.089,4,0.141,5,0.089,6,0.894,8,1.613,9,0.533,12,0.236,13,0.019,14,1.494,15,1.109,16,1.94,17,1.28,18,1.342,19,0.852,20,1.283,21,1.28,22,0.938,23,0.326,24,0.852,25,0.938,26,0.938,27,0.938,28,0.852,29,0.665,30,0.894,31,0.938,32,1.109,33,0.894,34,1.358,35,0.894,36,1.163,37,1.22,38,0.784,39,1.22,40,1.065,41,1.358,42,1.056,43,1.22,44,1.056,45,1.234,46,1.234,47,1.234,48,1.056,49,1.056,50,1.175,51,1.347,52,1.28,53,1.494,54,1.109,55,0.703,56,1.163,57,1.234,58,1.631,59,1.631,60,1.711,61,1.555,62,0.894,63,0.665,64,0.938,65,0.938,66,1.342,67,1.567,68,1.555,69,1.109,70,1.425,71,1.342,72,1.494,73,1.342,74,0.491,75,1.342,76,1.342,77,1.358,78,0.894,79,1.342,80,1.494,81,0.894,82,0.813,83,0.938,84,0.775,85,0.813,86,0.813,87,0.619,88,0.894,89,0.938,90,0.894,91,0.938,92,0.938,93,0.67,94,0.938,95,1.22,96,1.163,97,0.938,98,0.938,99,0.938,100,1.494,101,0.938,102,0.938,103,0.414,104,0.938,105,0.337,106,0.775,107,0.813,108,0.938,109,0.938,110,0.894,111,0.894,112,0.938,113,0.938,114,0.894,115,0.852,116,1.494,117,1.631,118,0.894,119,0.277,120,0.852,121,0.852,122,1.413,123,1.109,124,1.28,125,0.938,126,0.738,127,0.775,128,0.465,129,0.938,130,0.637,131,0.852,132,0.011,133,0.011,134,0.216,135,0.524,136,1.416,286,2.242]],["title/interfaces/StreamInformation.html",[0,0.239,121,0.992]],["body/interfaces/StreamInformation.html",[0,0.479,1,0.871,2,0.201,3,0.091,4,0.144,5,0.091,6,0.914,8,1.621,9,0.534,12,0.239,13,0.019,14,1.513,15,1.126,16,1.952,17,1.3,18,1.363,19,0.871,20,1.296,21,1.3,22,0.959,23,0.327,24,0.871,25,0.959,26,0.959,27,0.959,28,0.871,29,0.676,30,0.914,31,0.959,32,1.126,33,0.914,34,1.375,35,0.914,36,1.181,37,1.239,38,0.776,39,1.239,40,1.078,41,1.375,42,1.073,43,1.239,44,1.073,45,1.249,46,1.249,47,1.249,48,1.073,49,1.073,50,1.19,51,1.36,52,1.3,53,1.513,54,1.126,55,0.714,56,1.181,57,1.073,58,0.914,59,0.914,60,0.959,61,1.571,62,0.914,63,0.676,64,0.959,65,0.959,66,1.363,67,1.587,68,1.571,69,1.126,70,1.442,71,1.363,72,1.513,73,1.363,74,0.499,75,1.363,76,1.363,77,1.375,78,0.914,79,1.363,80,1.513,81,0.914,82,0.831,83,0.959,84,0.792,85,0.831,86,0.831,87,0.624,88,0.914,89,0.959,90,0.914,91,0.959,92,0.959,93,0.684,94,0.959,95,1.239,96,1.181,97,0.959,98,0.959,99,0.959,100,1.513,101,0.959,102,0.959,103,0.423,104,0.959,105,0.294,106,0.792,107,0.831,108,0.959,109,0.959,110,0.914,111,0.914,112,0.959,113,0.959,114,0.914,115,0.871,116,1.809,117,1.861,118,0.914,119,0.284,120,0.871,121,1.239,122,1.428,123,1.126,124,1.3,125,0.959,126,0.755,127,0.792,128,0.475,129,0.959,130,0.651,131,0.871,132,0.011,133,0.011,134,0.221,135,0.532]],["title/interfaces/StreamResponse.html",[0,0.239,96,0.946]],["body/interfaces/StreamResponse.html",[0,0.477,1,0.838,2,0.194,3,0.087,4,0.139,5,0.087,6,0.878,8,1.607,9,0.533,12,0.234,13,0.019,14,1.48,15,1.095,16,1.929,17,1.618,18,1.697,19,0.838,20,1.273,21,1.264,22,0.921,23,0.325,24,0.838,25,0.921,26,0.921,27,0.921,28,0.838,29,0.657,30,0.878,31,0.921,32,1.095,33,0.878,34,1.345,35,0.878,36,1.149,37,1.205,38,0.782,39,1.205,40,1.055,41,1.345,42,1.043,43,1.205,44,1.043,45,1.222,46,1.222,47,1.222,48,1.043,49,1.043,50,1.164,51,1.336,52,1.264,53,1.48,54,1.095,55,0.694,56,1.149,57,1.043,58,0.878,59,0.878,60,0.921,61,1.543,62,0.878,63,0.657,64,0.921,65,0.921,66,1.325,67,1.552,68,1.543,69,1.095,70,1.411,71,1.325,72,1.48,73,1.325,74,0.485,75,1.325,76,1.325,77,1.345,78,0.878,79,1.325,80,1.48,81,0.878,82,0.798,83,0.921,84,0.761,85,0.798,86,0.798,87,0.615,88,0.878,89,0.921,90,0.878,91,0.921,92,0.921,93,0.658,94,0.921,95,1.205,96,1.345,97,0.921,98,0.921,99,0.921,100,1.48,101,0.921,102,0.921,103,0.407,104,0.921,105,0.336,106,0.761,107,0.798,108,0.921,109,0.921,110,0.878,111,0.878,112,0.921,113,0.921,114,0.878,115,0.838,116,1.785,117,1.618,118,0.878,119,0.273,120,0.838,121,0.838,122,1.402,123,1.095,124,1.264,125,1.697,126,1.336,127,1.402,128,0.841,129,1.697,130,0.626,131,0.838,132,0.011,133,0.011,134,0.213,135,0.517,136,1.457]],["title/injectables/TaskService.html",[222,2.38,293,1.466]],["body/injectables/TaskService.html",[2,0.244,3,0.11,4,0.175,5,0.11,8,0.913,9,0.359,10,2.482,12,0.315,13,0.019,23,0.175,32,1.549,40,1.368,55,0.814,77,1.348,84,1.284,85,1.348,86,1.348,90,1.105,105,0.298,119,0.343,127,1.449,132,0.013,133,0.013,134,0.268,135,0.607,136,1.11,137,2.759,142,2.759,144,2.759,183,1.159,188,1.888,222,3.39,232,1.73,242,3.016,246,4.437,247,2.528,260,2.745,270,3.707,273,2.745,274,2.759,285,1.829,293,2.088,294,2.192,296,4.437,298,3.551,304,2.347,313,3.39,317,2.745,339,2.94,342,2.192,347,2.057,375,4.564,379,3.326,381,4.564,384,2.347,385,4.877,390,3.38,391,3.38,392,3.016,393,2.745,394,2.745,395,3.38,396,3.016,397,2.528,399,3.681,400,4.564,402,3.681,480,4.533,535,4.045,580,4.533,592,4.533,707,4.533,730,3.38,825,3.38,826,5.95,827,5.273,828,3.932,829,5.273,830,5.273,831,3.932,832,5.95,833,5.273,834,5.273,835,5.273,836,3.932,837,3.932,838,3.932,839,3.932,840,5.273,841,3.932,842,6.825,843,3.932,844,5.95,845,6.357,846,6.357,847,3.932,848,5.95,849,3.932,850,3.932,851,3.932,852,3.932,853,5.273,854,3.932,855,3.932,856,3.932,857,3.932,858,3.932,859,3.932,860,3.932,861,3.932,862,3.932,863,5.273,864,3.932,865,5.273,866,3.932]],["title/injectables/TreeService.html",[223,2.38,293,1.466]],["body/injectables/TreeService.html",[2,0.259,3,0.117,4,0.186,5,0.117,10,2.29,12,0.272,13,0.019,15,1.018,21,1.175,23,0.186,33,2.019,34,1.729,39,1.472,40,1.1,42,1.275,44,0.97,45,0.97,46,0.97,47,0.97,48,0.97,54,1.648,55,0.947,56,1.403,68,1.472,72,1.175,82,1.403,84,1.338,85,1.403,105,0.275,132,0.013,133,0.013,134,0.284,136,1.156,137,2.873,142,2.873,144,2.873,152,1.921,175,1.424,223,3.53,232,1.839,270,3.539,274,3.208,285,1.944,293,2.174,294,2.33,298,3.66,304,2.495,317,2.917,378,3.592,379,3.407,381,4.212,384,2.495,396,3.206,397,2.687,405,2.917,411,5.326,516,3.206,701,3.592,705,3.592,710,5.598,736,4.72,746,3.592,867,3.592,868,5.491,869,4.179,870,5.491,871,4.179,872,5.491,873,5.491,874,5.491,875,5.491,876,4.179,877,4.179,878,4.179,879,4.179,880,4.179,881,4.179,882,4.179,883,4.179,884,4.179,885,4.179,886,4.179,887,5.491,888,4.179,889,5.491,890,4.179,891,5.491,892,4.179,893,4.179,894,4.179,895,4.179,896,4.179,897,4.179,898,5.491,899,4.179,900,4.179,901,4.179,902,4.179,903,4.179,904,4.179,905,4.179,906,4.179,907,4.179,908,4.179]],["title/interfaces/UnProcessedStateMachineOptions.html",[0,0.239,43,0.992]],["body/interfaces/UnProcessedStateMachineOptions.html",[0,0.478,1,0.849,2,0.196,3,0.088,4,0.141,5,0.088,6,0.89,8,1.612,9,0.532,12,0.235,13,0.019,14,1.491,15,1.105,16,1.937,17,1.276,18,1.338,19,0.849,20,1.281,21,1.276,22,0.934,23,0.326,24,0.849,25,0.934,26,0.934,27,0.934,28,0.849,29,0.663,30,0.89,31,0.934,32,1.105,33,0.89,34,1.355,35,0.89,36,1.16,37,1.216,38,0.773,39,1.216,40,1.063,41,1.355,42,1.053,43,1.421,44,1.053,45,1.231,46,1.231,47,1.231,48,1.053,49,1.423,50,1.356,51,1.344,52,1.723,53,1.793,54,1.105,55,0.701,56,1.16,57,1.053,58,0.89,59,0.89,60,0.934,61,1.552,62,0.89,63,0.663,64,0.934,65,0.934,66,1.338,67,1.564,68,1.552,69,1.105,70,1.421,71,1.338,72,1.491,73,1.338,74,0.49,75,1.338,76,1.338,77,1.355,78,0.89,79,1.338,80,1.491,81,0.89,82,0.809,83,0.934,84,0.771,85,0.809,86,0.809,87,0.618,88,0.89,89,0.934,90,0.89,91,0.934,92,0.934,93,0.667,94,0.934,95,1.216,96,1.16,97,0.934,98,0.934,99,0.934,100,1.491,101,0.934,102,0.934,103,0.412,104,0.934,105,0.356,106,0.771,107,0.809,108,0.934,109,0.934,110,0.89,111,0.89,112,0.934,113,0.934,114,0.89,115,0.849,116,1.491,117,1.628,118,0.89,119,0.276,120,0.849,121,0.849,122,1.411,123,1.105,124,1.276,125,0.934,126,0.735,127,0.771,128,0.463,129,0.934,130,0.635,131,0.849,132,0.011,133,0.011,134,0.216,135,0.522,136,1.415,286,3.142]],["title/coverage.html",[909,4.352]],["body/coverage.html",[0,0.496,1,0.832,3,0.087,5,0.087,6,2.077,13,0.019,20,0.686,24,0.832,28,0.832,32,0.756,34,0.793,36,0.793,37,0.832,41,0.793,43,0.832,50,0.686,51,0.72,54,0.756,56,0.793,57,0.72,78,2.147,96,0.793,105,0.156,107,0.793,115,0.832,119,0.271,120,0.832,121,0.832,132,0.011,133,0.011,147,1.057,148,2.574,155,1.057,159,1.057,166,1.057,181,1.057,190,1.057,191,1.057,194,1.057,198,1.057,199,1.057,203,1.057,204,1.007,210,1.057,220,1.994,221,1.994,222,1.994,223,1.994,290,1.994,293,2.585,295,2.667,324,1.852,335,1.994,336,3.37,340,2.38,343,2.438,351,1.994,367,2.493,374,2.667,379,1.623,394,2.165,451,1.994,452,3.43,455,1.994,467,3.43,689,1.994,692,3.43,726,2.38,825,2.667,867,2.667,909,2.667,910,3.103,911,3.103,912,3.103,913,5.852,914,5.243,915,3.103,916,2.667,917,7.824,918,7.647,919,2.667,920,2.667,921,2.667,922,2.667,923,2.38,924,2.38,925,5.737,926,3.103,927,3.103,928,6.335,929,3.103,930,3.103,931,4.471,932,5.737,933,3.103,934,6.529,935,5.737,936,4.471,937,3.103,938,3.103,939,3.103,940,6.079,941,2.667,942,2.667,943,2.667,944,2.667,945,3.844,946,2.667,947,2.667,948,3.844,949,2.667,950,2.667,951,2.667,952,2.667,953,5.445,954,2.667,955,2.667,956,2.667,957,2.667,958,4.506,959,2.667,960,5.737,961,5.737,962,2.667,963,2.667,964,2.667,965,3.103,966,3.103,967,3.103,968,3.103,969,3.103,970,3.103,971,3.103,972,3.103]],["title/dependencies.html",[214,2.484,973,2.654]],["body/dependencies.html",[5,0.145,13,0.019,14,1.465,15,1.27,19,1.397,88,1.465,123,1.27,132,0.015,133,0.015,214,2.906,232,2.293,234,4.48,238,4.48,240,3.638,247,3.35,343,2.424,346,3.35,537,3.638,538,3.998,718,4.48,923,4.842,974,5.212,975,5.212,976,5.212,977,5.212,978,5.212,979,6.791,980,5.212,981,5.212,982,5.212,983,5.212,984,5.212,985,5.212,986,5.212,987,5.212,988,5.212,989,5.212,990,5.212,991,5.212,992,5.212,993,5.212,994,5.212,995,5.212,996,5.212,997,5.212,998,5.212,999,5.212,1000,5.212,1001,5.212,1002,5.212,1003,5.212,1004,5.212,1005,5.212,1006,5.212,1007,5.212,1008,5.212,1009,5.212,1010,5.212,1011,5.212]],["title/miscellaneous/functions.html",[1012,1.843,1013,3.83]],["body/miscellaneous/functions.html",[13,0.016,84,1.428,87,0.591,132,0.016,133,0.016,134,0.399,150,2.098,535,4.496,963,5.038,964,6.132,1012,3.498,1013,5.038,1014,5.861,1015,5.861,1016,5.861,1017,5.861,1018,5.861,1019,5.861,1020,5.861,1021,5.861]],["title/index.html",[134,0.252,1022,3.182]],["body/index.html",[2,0.312,13,0.019,126,1.17,132,0.015,133,0.015,212,4.57,213,2.81,214,3.448,215,4.332,216,4.332,217,4.332,218,4.332,219,4.685,220,4.746,221,4.301,222,4.301,223,4.301,224,3.976,225,3.24,248,4.603,253,4.603,287,4.332,288,4.332,289,4.332,290,4.746,294,2.81,379,3.862,461,4.332,462,4.332,463,4.332,686,4.332,687,4.332,688,4.332,689,4.746,1022,4.332,1023,5.04,1024,5.04,1025,5.04]],["title/modules.html",[213,2.823]],["body/modules.html",[13,0.016,132,0.016,133,0.016,212,3.485,213,3.255,219,3.753,248,3.753,253,3.753,1026,7.324,1027,7.324,1028,7.324,1029,7.324]],["title/properties.html",[135,0.513,973,2.654]],["body/properties.html",[13,0.018,132,0.017,133,0.017,135,0.685,384,3.553,924,4.566,1030,5.952,1031,5.952,1032,5.952,1033,5.952]],["title/miscellaneous/typealiases.html",[1012,1.843,1034,4.455]],["body/miscellaneous/typealiases.html",[13,0.019,42,1.242,105,0.385,119,0.467,132,0.016,133,0.016,134,0.364,286,3.772,336,3.438,344,3.438,345,3.733,347,3.354,348,4.122,349,4.475,350,3.827,354,4.122,359,4.122,361,3.193,363,3.193,364,3.193,365,3.193,366,4.475,1012,3.193,1035,5.349,1036,7.473]],["title/miscellaneous/variables.html",[1012,1.843,1037,3.83]],["body/miscellaneous/variables.html",[3,0.122,5,0.084,9,0.512,13,0.019,37,1.177,49,0.702,55,1.001,58,1.235,59,0.851,61,1.814,62,1.235,74,0.65,105,0.376,119,0.548,122,0.737,132,0.011,133,0.011,134,0.206,152,0.892,183,0.892,209,0.811,270,1.583,274,2.967,313,1.945,324,1.806,325,2.321,337,2.823,339,1.687,343,2.921,352,1.945,355,1.945,356,1.806,357,3.385,358,2.823,360,4.55,361,3.085,363,3.085,364,3.594,365,2.621,367,2.882,368,2.112,394,3.065,467,2.321,537,5.321,538,2.321,542,2.601,551,3.965,568,2.601,570,2.321,692,2.321,708,5.176,726,3.368,815,3.775,822,2.601,913,2.601,916,3.775,919,3.775,920,3.775,921,4.443,922,3.775,923,3.368,924,3.368,940,2.601,941,3.775,942,3.775,943,3.775,944,3.775,945,5.399,946,4.443,947,3.775,948,5.399,949,3.775,950,3.775,951,2.601,952,2.601,953,2.601,954,3.775,955,3.775,956,3.775,957,3.775,958,2.601,959,3.775,962,4.443,1012,1.806,1037,2.601,1038,7.038,1039,3.026,1040,6.281,1041,5.169,1042,6.638,1043,3.026,1044,3.026,1045,3.026,1046,3.026,1047,3.026,1048,3.026,1049,3.026,1050,3.026,1051,3.026,1052,3.026,1053,3.026,1054,3.026,1055,3.026,1056,3.026,1057,3.026,1058,3.026,1059,4.391,1060,3.026,1061,3.026,1062,3.026,1063,3.026,1064,3.026,1065,4.391,1066,3.026,1067,3.026,1068,3.026,1069,3.026,1070,3.026,1071,4.391,1072,3.026,1073,3.026,1074,3.026,1075,4.391,1076,3.026,1077,3.026,1078,3.026,1079,3.026,1080,3.026,1081,3.026,1082,4.391,1083,3.026,1084,4.391,1085,3.026]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"modules/AppModule.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"modules/Pm2Module.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1030,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["0.5.5",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":933,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["0o777",{"_index":861,"title":{},"body":{"injectables/TaskService.html":{}}}],["1.0.11",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["1.1.19",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["1.24.4",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["1.4.15",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["1.8.14",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["1.8.2",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["1024",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["15",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["2.0",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.1.29",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["2.2.4",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["30000",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":1025,"title":{},"body":{"index.html":{}}}],["4",{"_index":1023,"title":{},"body":{"index.html":{}}}],["4.26.0",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["5.1.2",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0.3",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1024,"title":{},"body":{"index.html":{}}}],["7.2.0",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["7.5.3",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["7/27",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9/13",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_appservice",{"_index":482,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["_configservice",{"_index":480,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/TaskService.html":{}}}],["_jwt",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["_network",{"_index":693,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["_pm2",{"_index":694,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["_pm2service",{"_index":381,"title":{},"body":{"injectables/CommandService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{}}}],["_restartservice",{"_index":468,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["_restartservice(options",{"_index":483,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["_startservice",{"_index":469,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["_startservice(options",{"_index":492,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["_stopservice",{"_index":470,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["_stopservice(options",{"_index":497,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["_task",{"_index":615,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["_tempfolder",{"_index":826,"title":{},"body":{"injectables/TaskService.html":{}}}],["_testoptions",{"_index":471,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["_testoptions(options",{"_index":500,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["access",{"_index":731,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["accessors",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":110,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["actions",{"_index":53,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["actions[k]).call(this",{"_index":760,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["active",{"_index":432,"title":{},"body":{"injectables/CommandService.html":{}}}],["add",{"_index":593,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["airflow",{"_index":1020,"title":{},"body":{"miscellaneous/functions.html":{}}}],["airflow_progress",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airflow_statistics",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airflow_success",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airflowprogress",{"_index":941,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["airflowreporttoapi",{"_index":147,"title":{"interfaces/AirflowReportToAPI.html":{}},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"coverage.html":{}}}],["airflowstatistics",{"_index":942,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["airflowsuccess",{"_index":943,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["airflowsuccesstoapi",{"_index":203,"title":{"interfaces/AirflowSuccessToAPI.html":{}},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"coverage.html":{}}}],["aliases",{"_index":1035,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":728,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["already",{"_index":857,"title":{},"body":{"injectables/TaskService.html":{}}}],["always",{"_index":67,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["anything",{"_index":594,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["api",{"_index":84,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/functions.html":{}}}],["api_sync_connection_service",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["apimachine",{"_index":45,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["apisync",{"_index":695,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["apisynccomplete",{"_index":1,"title":{"interfaces/APISyncComplete.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["apisyncmessage",{"_index":28,"title":{"interfaces/APISyncMessage.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["apisyncservice",{"_index":24,"title":{"interfaces/APISyncService.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["app.module",{"_index":465,"title":{},"body":{"modules/Pm2Module.html":{},"modules/StateMachineModules.html":{}}}],["app.service",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["applies",{"_index":435,"title":{},"body":{"injectables/CommandService.html":{}}}],["apply",{"_index":434,"title":{},"body":{"injectables/CommandService.html":{}}}],["appmodule",{"_index":212,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/Pm2Module.html":{},"modules/StateMachineModules.html":{},"index.html":{},"modules.html":{}}}],["appservice",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"index.html":{}}}],["args",{"_index":69,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["arguments",{"_index":747,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["aria2",{"_index":200,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["aria2cprogressreport",{"_index":194,"title":{"interfaces/Aria2cProgressReport.html":{}},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"coverage.html":{}}}],["ariadownloadobject",{"_index":190,"title":{"interfaces/AriaDownloadObject.html":{}},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"coverage.html":{}}}],["ariafileinfo",{"_index":198,"title":{"interfaces/AriaFileInfo.html":{}},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"coverage.html":{}}}],["around",{"_index":522,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["arr",{"_index":623,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["arr[0",{"_index":637,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["array",{"_index":70,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["array.isarray(options.args",{"_index":587,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["array.isarray(toparse",{"_index":572,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["assemble",{"_index":703,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["assembled",{"_index":716,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["async",{"_index":375,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/TaskService.html":{}}}],["aud",{"_index":208,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["auth.service",{"_index":292,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["authmodule",{"_index":219,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"index.html":{},"modules.html":{}}}],["author",{"_index":1033,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":290,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"index.html":{}}}],["autorestart",{"_index":94,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["await",{"_index":400,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/TaskService.html":{}}}],["back",{"_index":114,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"modules/AppModule.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["basecontext",{"_index":335,"title":{"interfaces/BaseContext.html":{}},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"coverage.html":{}}}],["basemoduleinterface",{"_index":159,"title":{"interfaces/BaseModuleInterface.html":{}},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"coverage.html":{}}}],["basename",{"_index":179,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["bind",{"_index":748,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["body",{"_index":111,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["boolean",{"_index":38,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["bootstrap",{"_index":964,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["break",{"_index":599,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["browse",{"_index":1029,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1026,"title":{},"body":{"modules.html":{}}}],["bunyan",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["bunyan.createlogger",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bus",{"_index":131,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/CommandService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["busresponse",{"_index":48,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["call",{"_index":124,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["can't",{"_index":76,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["caption",{"_index":162,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["case",{"_index":596,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["catch",{"_index":402,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{}}}],["catch((err",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["chain",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["change",{"_index":511,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["check",{"_index":628,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["child",{"_index":701,"title":{},"body":{"injectables/StateMachinesService.html":{},"injectables/TreeService.html":{}}}],["children",{"_index":39,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["children.foreach((child",{"_index":820,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["children.foreach((i",{"_index":808,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["children.length",{"_index":816,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["children.map((i",{"_index":818,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["childrenspawn",{"_index":804,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["childrenspawn[i.machine.id",{"_index":809,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["class",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CommandService.html":{},"modules/Pm2Module.html":{},"injectables/Pm2Service.html":{},"modules/StateMachineModules.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{}}}],["clientproxyfactory",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["clientproxyfactory.create",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["clientsmodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_exports",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authmodule",{"_index":287,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_exports",{"_index":288,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_providers",{"_index":289,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_pm2module",{"_index":461,"title":{},"body":{"modules/Pm2Module.html":{},"index.html":{}}}],["cluster_pm2module_exports",{"_index":463,"title":{},"body":{"modules/Pm2Module.html":{},"index.html":{}}}],["cluster_pm2module_providers",{"_index":462,"title":{},"body":{"modules/Pm2Module.html":{},"index.html":{}}}],["cluster_statemachinemodules",{"_index":686,"title":{},"body":{"modules/StateMachineModules.html":{},"index.html":{}}}],["cluster_statemachinemodules_exports",{"_index":687,"title":{},"body":{"modules/StateMachineModules.html":{},"index.html":{}}}],["cluster_statemachinemodules_providers",{"_index":688,"title":{},"body":{"modules/StateMachineModules.html":{},"index.html":{}}}],["collection",{"_index":176,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["combinedoptions",{"_index":607,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["combinedoptions.keepscript",{"_index":618,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["combinedoptions.name",{"_index":621,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["come",{"_index":113,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["command",{"_index":95,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/CommandService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["command.bus",{"_index":398,"title":{},"body":{"injectables/CommandService.html":{}}}],["command.command",{"_index":410,"title":{},"body":{"injectables/CommandService.html":{}}}],["command.service",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["command.stdin",{"_index":406,"title":{},"body":{"injectables/CommandService.html":{}}}],["command.target",{"_index":404,"title":{},"body":{"injectables/CommandService.html":{}}}],["commands",{"_index":35,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["commandservice",{"_index":221,"title":{"injectables/CommandService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CommandService.html":{},"coverage.html":{},"index.html":{}}}],["commandstream",{"_index":138,"title":{},"body":{"interfaces/APISyncService.html":{}}}],["commandstream(upstream",{"_index":26,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["communicate",{"_index":523,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["completedlength",{"_index":195,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["compodoc/compodoc",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["cond",{"_index":62,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":803,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["configmodule",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":517,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["configservice",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/TaskService.html":{}}}],["configservice.get('grpcoptions",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('ssl_conn",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":557,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["const",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{}}}],["constructor(_appservice",{"_index":479,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["constructor(_configservice",{"_index":828,"title":{},"body":{"injectables/TaskService.html":{}}}],["constructor(_pm2service",{"_index":378,"title":{},"body":{"injectables/CommandService.html":{},"injectables/TreeService.html":{}}}],["constructor(jwtservice",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommandService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{}}}],["contains",{"_index":540,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["context",{"_index":362,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["context.onlymachine",{"_index":610,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["context.options",{"_index":613,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["context.script",{"_index":614,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["contextchildren",{"_index":351,"title":{"interfaces/ContextChildren.html":{}},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"coverage.html":{}}}],["continue",{"_index":560,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["correct",{"_index":436,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["correctly",{"_index":753,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["coverage",{"_index":909,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":736,"title":{},"body":{"injectables/StateMachinesService.html":{},"injectables/TreeService.html":{}}}],["created",{"_index":865,"title":{},"body":{"injectables/TaskService.html":{}}}],["createmachine",{"_index":722,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["creates",{"_index":874,"title":{},"body":{"injectables/TreeService.html":{}}}],["createstatemachine",{"_index":697,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["createstatemachine(tree",{"_index":700,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["creating",{"_index":864,"title":{},"body":{"injectables/TaskService.html":{}}}],["credentials",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["credentials.createinsecure",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["credentials.createssl",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["cron",{"_index":88,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"dependencies.html":{}}}],["ctx",{"_index":758,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["ctx.notchild",{"_index":813,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["ctx[child.machine.id].send('parent_online",{"_index":823,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["ctx[child.machine.id].send('stopped",{"_index":821,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["curr",{"_index":884,"title":{},"body":{"injectables/TreeService.html":{}}}],["curr.children",{"_index":900,"title":{},"body":{"injectables/TreeService.html":{}}}],["curr.children.map((c",{"_index":901,"title":{},"body":{"injectables/TreeService.html":{}}}],["curr.onlymachine",{"_index":904,"title":{},"body":{"injectables/TreeService.html":{}}}],["curr.options",{"_index":885,"title":{},"body":{"injectables/TreeService.html":{}}}],["curr.options.name",{"_index":903,"title":{},"body":{"injectables/TreeService.html":{}}}],["curr.statemachine",{"_index":887,"title":{},"body":{"injectables/TreeService.html":{}}}],["currconfig",{"_index":424,"title":{},"body":{"injectables/CommandService.html":{}}}],["currconfig.states[k",{"_index":439,"title":{},"body":{"injectables/CommandService.html":{}}}],["custom",{"_index":729,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["custompm2startoptions",{"_index":41,"title":{"interfaces/CustomPm2StartOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["cwl",{"_index":1019,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cwlfile",{"_index":156,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["dag_cleared",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dagcleared",{"_index":944,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dagid",{"_index":149,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["data",{"_index":201,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["date.now",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declared",{"_index":743,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["decode",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["decode(token",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.aud",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["default",{"_index":537,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["defaultmachineconfig",{"_index":367,"title":{"interfaces/DefaultMachineConfig.html":{}},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":10,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncService.html":{},"injectables/AuthService.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{}}}],["delete",{"_index":585,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["deleting",{"_index":564,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["dependencies",{"_index":214,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Pm2Module.html":{},"modules/StateMachineModules.html":{},"dependencies.html":{},"index.html":{}}}],["dependencytree",{"_index":34,"title":{"interfaces/DependencyTree.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["description",{"_index":384,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"properties.html":{}}}],["development",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["different",{"_index":882,"title":{},"body":{"injectables/TreeService.html":{}}}],["directory",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirname",{"_index":854,"title":{},"body":{"injectables/TaskService.html":{}}}],["disable",{"_index":544,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["disable_source_map_support",{"_index":92,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["distinguish",{"_index":740,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["documentation",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":430,"title":{},"body":{"injectables/CommandService.html":{}}}],["downloaded",{"_index":187,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["downloadfailed",{"_index":210,"title":{"interfaces/DownloadFailed.html":{}},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"coverage.html":{}}}],["downloading",{"_index":945,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["downloadobject",{"_index":181,"title":{"interfaces/DownloadObject.html":{}},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"coverage.html":{}}}],["downloadresults",{"_index":191,"title":{"interfaces/DownloadResults.html":{}},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"coverage.html":{}}}],["downloads",{"_index":158,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["downloadurl",{"_index":170,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["each",{"_index":738,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["easier",{"_index":739,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["element",{"_index":632,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["encryptkey",{"_index":173,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["entry",{"_index":58,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":127,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/CommandService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["err.message",{"_index":644,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["error",{"_index":119,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["error(`error",{"_index":642,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["error(`no",{"_index":636,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["error.log",{"_index":847,"title":{},"body":{"injectables/TaskService.html":{}}}],["errorloc",{"_index":844,"title":{},"body":{"injectables/TaskService.html":{}}}],["errorresponse",{"_index":47,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["eslint",{"_index":543,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["eslint/no",{"_index":547,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["event",{"_index":418,"title":{},"body":{"injectables/CommandService.html":{},"injectables/StateMachinesService.html":{}}}],["events",{"_index":413,"title":{},"body":{"injectables/CommandService.html":{},"injectables/StateMachinesService.html":{}}}],["execute_command",{"_index":89,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["executed",{"_index":386,"title":{},"body":{"injectables/CommandService.html":{}}}],["exists",{"_index":858,"title":{},"body":{"injectables/TaskService.html":{}}}],["exit",{"_index":59,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["exp",{"_index":207,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["export",{"_index":23,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"modules/AppModule.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"modules/Pm2Module.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["exports",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Pm2Module.html":{},"modules/StateMachineModules.html":{}}}],["express",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":63,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["fail",{"_index":421,"title":{},"body":{"injectables/CommandService.html":{}}}],["fails",{"_index":626,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["fakename",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{}}}],["field",{"_index":79,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"modules/AppModule.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"modules/Pm2Module.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["filedata",{"_index":166,"title":{"interfaces/FileData.html":{}},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"coverage.html":{}}}],["filefromclient",{"_index":120,"title":{"interfaces/FileFromClient.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["fileid",{"_index":185,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["filename",{"_index":188,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"injectables/TaskService.html":{}}}],["files",{"_index":197,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["filestream",{"_index":139,"title":{},"body":{"interfaces/APISyncService.html":{}}}],["filestream(upstream",{"_index":27,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["fileurl",{"_index":371,"title":{},"body":{"interfaces/BaseModuleInterface.html":{}}}],["finalentry",{"_index":776,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["finalexit",{"_index":780,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["finalon",{"_index":786,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["finalon[k",{"_index":793,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["finalstate",{"_index":774,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["finalstate.entry",{"_index":777,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["finalstate.exit",{"_index":781,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["finalstate.on",{"_index":787,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["find",{"_index":426,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{}}}],["finish",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["finished",{"_index":946,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["finished_downloading",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finisheddownloading",{"_index":954,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["finite",{"_index":704,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["folder",{"_index":835,"title":{},"body":{"injectables/TaskService.html":{}}}],["foldername",{"_index":842,"title":{},"body":{"injectables/TaskService.html":{}}}],["folders",{"_index":833,"title":{},"body":{"injectables/TaskService.html":{}}}],["formachine",{"_index":376,"title":{},"body":{"injectables/CommandService.html":{}}}],["formachine(id",{"_index":382,"title":{},"body":{"injectables/CommandService.html":{}}}],["fortask",{"_index":377,"title":{},"body":{"injectables/CommandService.html":{}}}],["fortask(id",{"_index":388,"title":{},"body":{"injectables/CommandService.html":{}}}],["forwardref",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/Pm2Module.html":{},"injectables/Pm2Service.html":{},"modules/StateMachineModules.html":{},"injectables/StateMachinesService.html":{}}}],["found",{"_index":656,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["fs",{"_index":342,"title":{},"body":{"interfaces/BaseContext.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/TaskService.html":{}}}],["fsm",{"_index":495,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["fsm.send('error",{"_index":635,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["fsm.send('restart",{"_index":653,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["fsm.send('started",{"_index":612,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["fsm.send('stopped",{"_index":646,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["fsm.state.context",{"_index":609,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["fsm.state.context.onlymachine",{"_index":645,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["fsm.state.value",{"_index":649,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["fspromises",{"_index":391,"title":{},"body":{"injectables/CommandService.html":{},"injectables/TaskService.html":{}}}],["fspromises.chmod(filename",{"_index":860,"title":{},"body":{"injectables/TaskService.html":{}}}],["fspromises.mkdir(dirname",{"_index":855,"title":{},"body":{"injectables/TaskService.html":{}}}],["fspromises.writefile(filename",{"_index":859,"title":{},"body":{"injectables/TaskService.html":{}}}],["function",{"_index":340,"title":{},"body":{"interfaces/BaseContext.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{}}}],["function('args",{"_index":749,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["function('ctx",{"_index":759,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["functions",{"_index":1013,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["generate",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get_task",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getfile",{"_index":369,"title":{},"body":{"interfaces/BaseModuleInterface.html":{}}}],["getfile(fileurl",{"_index":163,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["getinfo",{"_index":160,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["getjwt",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsatelliteid",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettask",{"_index":947,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gid",{"_index":189,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["global",{"_index":427,"title":{},"body":{"injectables/CommandService.html":{},"injectables/StateMachinesService.html":{}}}],["go",{"_index":512,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["grpc",{"_index":15,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"modules/AppModule.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"dependencies.html":{}}}],["grpc/proto",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["guard",{"_index":766,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["guards",{"_index":52,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["guards[k]).call(this",{"_index":765,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["header",{"_index":180,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["helper",{"_index":570,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["helper(i",{"_index":574,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["helper(options",{"_index":581,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["helper(toparse[k",{"_index":578,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["here",{"_index":490,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["home",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpmodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["i.machine.id",{"_index":811,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["i.machine.id).join",{"_index":819,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["i.pm2_env.name",{"_index":565,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["i.pm2_env.namespace.includes(namespace",{"_index":559,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["iat",{"_index":205,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["id",{"_index":209,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":12,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"modules/AppModule.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"modules/Pm2Module.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["imports",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Pm2Module.html":{},"modules/StateMachineModules.html":{}}}],["including",{"_index":101,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["index",{"_index":134,"title":{"index.html":{}},"body":{"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"injectables/AuthService.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":7,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/ContextChildren.html":{},"interfaces/FileFromClient.html":{},"interfaces/OptionTypes.html":{}}}],["indicate",{"_index":528,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["info",{"_index":3,"title":{"interfaces/Info.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"modules/AppModule.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"modules/Pm2Module.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":527,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["initial",{"_index":368,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["inject(forwardref",{"_index":552,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["injectable",{"_index":293,"title":{"injectables/AuthService.html":{},"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"coverage.html":{}}}],["injectables",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"index.html":{}}}],["inputkey",{"_index":186,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["insert",{"_index":711,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["instance",{"_index":518,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["instances",{"_index":506,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["instead",{"_index":72,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["interface",{"_index":0,"title":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"injectables/AuthService.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"index.html":{}}}],["interpret",{"_index":723,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["interpret(machine",{"_index":824,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["interpreted",{"_index":717,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["interpreter",{"_index":344,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/typealiases.html":{}}}],["interpreter_args",{"_index":73,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["interpretstatemachine",{"_index":698,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["interpretstatemachine(machine",{"_index":713,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["ips",{"_index":733,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["isglobal",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["isn't",{"_index":414,"title":{},"body":{"injectables/CommandService.html":{}}}],["itself",{"_index":806,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["join",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"injectables/CommandService.html":{},"injectables/TaskService.html":{}}}],["join(this._tempfolder",{"_index":845,"title":{},"body":{"injectables/TaskService.html":{}}}],["json.parse(toparse",{"_index":579,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["jwtmodule",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtservice",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["k",{"_index":756,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["keep_alive",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keepalive",{"_index":37,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["keepscript",{"_index":66,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["key",{"_index":8,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["keys",{"_index":630,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["kill",{"_index":553,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["killoneinstance",{"_index":472,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["killoneinstance(id",{"_index":502,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["killpm2instances",{"_index":473,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["kills",{"_index":505,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["level",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/logger",{"_index":393,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{}}}],["lib/statemachine",{"_index":727,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["lib/utilities",{"_index":395,"title":{},"body":{"injectables/CommandService.html":{},"injectables/TaskService.html":{}}}],["license",{"_index":1031,"title":{},"body":{"properties.html":{}}}],["line",{"_index":407,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["list",{"_index":411,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/TreeService.html":{}}}],["listen",{"_index":1017,"title":{},"body":{"miscellaneous/functions.html":{}}}],["literal",{"_index":286,"title":{},"body":{"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["loader",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["location",{"_index":708,"title":{},"body":{"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["locationhandler",{"_index":959,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["locations",{"_index":834,"title":{},"body":{"injectables/TaskService.html":{}}}],["log",{"_index":392,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/TaskService.html":{}}}],["log.debug('command",{"_index":444,"title":{},"body":{"injectables/CommandService.html":{}}}],["log.debug('output",{"_index":856,"title":{},"body":{"injectables/TaskService.html":{}}}],["log.debug(`attempting",{"_index":591,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["log.debug(`no",{"_index":659,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["log.debug(`successfully",{"_index":604,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["log.error(`${command.target",{"_index":443,"title":{},"body":{"injectables/CommandService.html":{}}}],["log.error(`failed",{"_index":403,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{}}}],["log.error(`no",{"_index":655,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["log.error(`unrecognized",{"_index":603,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["log.error(line",{"_index":409,"title":{},"body":{"injectables/CommandService.html":{}}}],["log.info(`killed",{"_index":567,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["log.info(`restarting",{"_index":652,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["log.info(`sending",{"_index":447,"title":{},"body":{"injectables/CommandService.html":{}}}],["log.info(`starting",{"_index":620,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["log.info(`stopping",{"_index":647,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["log.info(`successfully",{"_index":611,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["logger",{"_index":737,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["logger.error(`failed",{"_index":751,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["logger.info('sending",{"_index":817,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["loginurl",{"_index":168,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["logs",{"_index":836,"title":{},"body":{"injectables/TaskService.html":{}}}],["machine",{"_index":122,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/CommandService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["machine.machine.config",{"_index":425,"title":{},"body":{"injectables/CommandService.html":{}}}],["machine.send",{"_index":446,"title":{},"body":{"injectables/CommandService.html":{}}}],["machineconfig",{"_index":345,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"miscellaneous/typealiases.html":{}}}],["machines",{"_index":710,"title":{},"body":{"injectables/StateMachinesService.html":{},"injectables/TreeService.html":{}}}],["mainurl",{"_index":167,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["make",{"_index":878,"title":{},"body":{"injectables/TreeService.html":{}}}],["match",{"_index":419,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{}}}],["matching",{"_index":133,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"modules/AppModule.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"modules/Pm2Module.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring(36).substring(2",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["max_memory_restart",{"_index":75,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["maxreceivemessagelength",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["maxsendmessagelength",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["mergeddownloadobject",{"_index":199,"title":{"interfaces/MergedDownloadObject.html":{}},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"coverage.html":{}}}],["message",{"_index":103,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["messages",{"_index":109,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"dependencies.html":{}}}],["method",{"_index":117,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["methods",{"_index":137,"title":{},"body":{"interfaces/APISyncService.html":{},"injectables/AuthService.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{}}}],["mime",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["miscellaneous",{"_index":1012,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":211,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Pm2Module.html":{},"modules/StateMachineModules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Pm2Module.html":{},"modules/StateMachineModules.html":{}}}],["moduleid",{"_index":161,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["modules",{"_index":213,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Pm2Module.html":{},"modules/StateMachineModules.html":{},"index.html":{},"modules.html":{}}}],["ms",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg",{"_index":863,"title":{},"body":{"injectables/TaskService.html":{}}}],["name",{"_index":55,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/AuthService.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":93,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["need",{"_index":82,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"modules/AppModule.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["needed",{"_index":732,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["needs",{"_index":1016,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nessecary",{"_index":416,"title":{},"body":{"injectables/CommandService.html":{}}}],["nestjs/common",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CommandService.html":{},"modules/Pm2Module.html":{},"injectables/Pm2Service.html":{},"modules/StateMachineModules.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["network",{"_index":718,"title":{},"body":{"injectables/StateMachinesService.html":{},"dependencies.html":{}}}],["new",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_sample",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newsample",{"_index":955,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":545,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["node",{"_index":706,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["notchild",{"_index":337,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":598,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["number",{"_index":74,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":539,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["object.keys(actions).foreach",{"_index":755,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["object.keys(currconfig.on).foreach((k",{"_index":428,"title":{},"body":{"injectables/CommandService.html":{}}}],["object.keys(currconfig.states).foreach((k",{"_index":437,"title":{},"body":{"injectables/CommandService.html":{}}}],["object.keys(guards).foreach",{"_index":763,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["object.keys(s.on).foreach((k",{"_index":441,"title":{},"body":{"injectables/CommandService.html":{}}}],["object.keys(sm.states).foreach((k",{"_index":895,"title":{},"body":{"injectables/TreeService.html":{}}}],["object.keys(state.on).foreach((k",{"_index":789,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["object.keys(toparse).foreach((k",{"_index":576,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["object.keys(tree.statemachine.states).foreach((key",{"_index":770,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["observable",{"_index":16,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["offline",{"_index":361,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["one",{"_index":420,"title":{},"body":{"injectables/CommandService.html":{}}}],["onfinal",{"_index":792,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["onfinal.actions",{"_index":795,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["onfinal.cond",{"_index":802,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["onfinal.target",{"_index":800,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["onfinalactions",{"_index":794,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["online",{"_index":364,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["onlist",{"_index":423,"title":{},"body":{"injectables/CommandService.html":{}}}],["onlist.add(k",{"_index":429,"title":{},"body":{"injectables/CommandService.html":{}}}],["onlist.has(command.command",{"_index":442,"title":{},"body":{"injectables/CommandService.html":{}}}],["onlist].join",{"_index":445,"title":{},"body":{"injectables/CommandService.html":{}}}],["onlymachine",{"_index":44,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["onoptions",{"_index":51,"title":{"interfaces/OnOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["onstate",{"_index":790,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["onstate.actions",{"_index":797,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["onstate.cond",{"_index":801,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["onstate.target",{"_index":799,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["onstateactions",{"_index":796,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["optional",{"_index":136,"title":{},"body":{"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/AuthService.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/Info.html":{},"interfaces/OnOptions.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["options",{"_index":40,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"modules/AppModule.html":{},"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["options.args",{"_index":586,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["options.args.join",{"_index":589,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["options.error",{"_index":852,"title":{},"body":{"injectables/TaskService.html":{}}}],["options.name",{"_index":592,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/TaskService.html":{}}}],["options.output",{"_index":851,"title":{},"body":{"injectables/TaskService.html":{}}}],["options.script",{"_index":862,"title":{},"body":{"injectables/TaskService.html":{}}}],["optiontypes",{"_index":50,"title":{"interfaces/OptionTypes.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["originated",{"_index":104,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["otherwise",{"_index":496,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["out",{"_index":126,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"modules/Pm2Module.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"index.html":{}}}],["out.log",{"_index":849,"title":{},"body":{"injectables/TaskService.html":{}}}],["outloc",{"_index":848,"title":{},"body":{"injectables/TaskService.html":{}}}],["output",{"_index":118,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["outresponse",{"_index":46,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["overview",{"_index":1022,"title":{"index.html":{}},"body":{"index.html":{}}}],["overwrite",{"_index":60,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["package",{"_index":973,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packet",{"_index":526,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["packet.data",{"_index":665,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["packet.process.name",{"_index":657,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["packets",{"_index":536,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["param",{"_index":397,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{}}}],["parameters",{"_index":142,"title":{},"body":{"interfaces/APISyncService.html":{},"injectables/AuthService.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{}}}],["parent",{"_index":814,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["parent_online",{"_index":358,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["parse",{"_index":86,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["parsed",{"_index":513,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["parsedobject",{"_index":575,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["parsedobject[k",{"_index":577,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["parsedoptions",{"_index":580,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/TaskService.html":{}}}],["parsedoptions.args",{"_index":588,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["parsedoptions.watch",{"_index":584,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["parsedoptions.watch_array",{"_index":583,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["parseint(pid",{"_index":667,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["parseoptions",{"_index":474,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["parseoptions(options",{"_index":509,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["parser",{"_index":877,"title":{},"body":{"injectables/TreeService.html":{}}}],["part",{"_index":102,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["pass",{"_index":715,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["path",{"_index":183,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"modules/AppModule.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["pid",{"_index":524,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["pingkilltimer",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pingtimer",{"_index":919,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pm2",{"_index":343,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["pm2.connect((err",{"_index":555,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["pm2.delete(i.pm_id",{"_index":562,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["pm2.delete(id",{"_index":569,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["pm2.list(async",{"_index":558,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["pm2.restart(options.name",{"_index":654,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["pm2.senddatatoprocessid(id",{"_index":671,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["pm2.service",{"_index":466,"title":{},"body":{"modules/Pm2Module.html":{}}}],["pm2.start(combinedoptions",{"_index":622,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["pm2.stop(options.name",{"_index":648,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["pm2/pm2.module",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["pm2/pm2.service",{"_index":396,"title":{},"body":{"injectables/CommandService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{}}}],["pm2/types",{"_index":22,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["pm2_env",{"_index":456,"title":{},"body":{"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{}}}],["pm2_id",{"_index":525,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["pm2_service",{"_index":455,"title":{"interfaces/PM2_Service.html":{}},"body":{"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{},"coverage.html":{}}}],["pm2buspacket",{"_index":451,"title":{"interfaces/PM2BusPacket.html":{}},"body":{"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{},"coverage.html":{}}}],["pm2module",{"_index":253,"title":{"modules/Pm2Module.html":{}},"body":{"modules/AppModule.html":{},"modules/Pm2Module.html":{},"index.html":{},"modules.html":{}}}],["pm2monitortimer",{"_index":920,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pm2service",{"_index":379,"title":{"injectables/Pm2Service.html":{}},"body":{"injectables/CommandService.html":{},"modules/Pm2Module.html":{},"injectables/Pm2Service.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"coverage.html":{},"index.html":{}}}],["pm2startoptions",{"_index":21,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["pm2types",{"_index":454,"title":{},"body":{"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["pm2types.proc",{"_index":457,"title":{},"body":{"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{}}}],["pm2wotypes",{"_index":672,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["pm2wotypes.sendlinetostdin(id",{"_index":673,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["pm_id",{"_index":460,"title":{},"body":{"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{}}}],["ports",{"_index":1018,"title":{},"body":{"miscellaneous/functions.html":{}}}],["possible",{"_index":412,"title":{},"body":{"injectables/CommandService.html":{}}}],["private",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{}}}],["private_iv",{"_index":172,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["private_key",{"_index":171,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["process",{"_index":106,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/CommandService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["process.env.api_env",{"_index":616,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["process.env.log_level",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.logs",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.satellite_token",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.test",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.stdout",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process:msg",{"_index":668,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["processeddata",{"_index":155,"title":{"interfaces/ProcessedData.html":{}},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"coverage.html":{}}}],["processedtree",{"_index":54,"title":{"interfaces/ProcessedTree.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["processing",{"_index":948,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["processtaskforpm2",{"_index":827,"title":{},"body":{"injectables/TaskService.html":{}}}],["processtaskforpm2(task",{"_index":830,"title":{},"body":{"injectables/TaskService.html":{}}}],["processtrees",{"_index":868,"title":{},"body":{"injectables/TreeService.html":{}}}],["processtrees(trees",{"_index":870,"title":{},"body":{"injectables/TreeService.html":{}}}],["progress",{"_index":150,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"miscellaneous/functions.html":{}}}],["projectid",{"_index":184,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["promise",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["promise((res",{"_index":561,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["promise((resolve",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Pm2Service.html":{},"miscellaneous/variables.html":{}}}],["promise(async",{"_index":590,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["promises",{"_index":390,"title":{},"body":{"injectables/CommandService.html":{},"injectables/TaskService.html":{}}}],["properties",{"_index":135,"title":{"properties.html":{}},"body":{"interfaces/APISyncMessage.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"injectables/AuthService.html":{},"interfaces/BaseContext.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"properties.html":{}}}],["protocol",{"_index":175,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"injectables/TreeService.html":{}}}],["provide",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Pm2Module.html":{},"modules/StateMachineModules.html":{}}}],["proxy",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["public",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{}}}],["publication",{"_index":177,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["publickey",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["ran",{"_index":605,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["random",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomname",{"_index":394,"title":{},"body":{"injectables/CommandService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["randomname(task.name",{"_index":843,"title":{},"body":{"injectables/TaskService.html":{}}}],["raw",{"_index":873,"title":{},"body":{"injectables/TreeService.html":{}}}],["readonly",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["readstream",{"_index":453,"title":{},"body":{"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{}}}],["ready",{"_index":363,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["real",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["reflect",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["refreshsessioninterval",{"_index":178,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["reject",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Pm2Service.html":{}}}],["reject(`error",{"_index":563,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["reject(`not",{"_index":556,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["reject(err",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Pm2Service.html":{}}}],["reject(new",{"_index":641,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["relationship",{"_index":807,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["relevant",{"_index":489,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["remain",{"_index":669,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["remembers",{"_index":433,"title":{},"body":{"injectables/CommandService.html":{}}}],["remove",{"_index":921,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["replace",{"_index":582,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["replacescript",{"_index":338,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{}}}],["report",{"_index":1021,"title":{},"body":{"miscellaneous/functions.html":{}}}],["representing",{"_index":712,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["require('network",{"_index":725,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["require('pm2",{"_index":551,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["require('tail').tail",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requires",{"_index":549,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["rerun_sample",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rerunsample",{"_index":956,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["res(true",{"_index":566,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["reset",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Pm2Module.html":{},"modules/StateMachineModules.html":{},"index.html":{}}}],["resolve",{"_index":542,"title":{},"body":{"injectables/Pm2Service.html":{},"miscellaneous/variables.html":{}}}],["resolve(__dirname",{"_index":678,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["resolve(home",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve(response",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(service",{"_index":606,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["resolve(services[0].pm2_env.pm_id",{"_index":640,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["resolve(true",{"_index":568,"title":{},"body":{"injectables/Pm2Service.html":{},"miscellaneous/variables.html":{}}}],["resolved",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolves",{"_index":507,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["respond",{"_index":125,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["response",{"_index":100,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["restart",{"_index":355,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/Pm2Service.html":{},"miscellaneous/variables.html":{}}}],["restarted",{"_index":651,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["restarting",{"_index":365,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/Pm2Service.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["restarts",{"_index":485,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["results",{"_index":132,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"modules/AppModule.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"modules/Pm2Module.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrytimer",{"_index":922,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":144,"title":{},"body":{"interfaces/APISyncService.html":{},"injectables/AuthService.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{}}}],["rimraf",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":709,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["route",{"_index":541,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["run",{"_index":516,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TreeService.html":{}}}],["runcommand",{"_index":475,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["runcommand(command",{"_index":514,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["runid",{"_index":151,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["runner",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["running",{"_index":494,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["rxjs",{"_index":19,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"dependencies.html":{}}}],["s",{"_index":438,"title":{},"body":{"injectables/CommandService.html":{}}}],["s.on",{"_index":440,"title":{},"body":{"injectables/CommandService.html":{}}}],["sample",{"_index":157,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["sampleid",{"_index":165,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["satellite",{"_index":87,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/functions.html":{}}}],["satellite's",{"_index":99,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["satellite_version",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["satelliteid",{"_index":30,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/AuthService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["satellitejwt",{"_index":204,"title":{"interfaces/SatelliteJWT.html":{}},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"injectables/AuthService.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"coverage.html":{}}}],["satellitemessage",{"_index":107,"title":{"interfaces/SatelliteMessage.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["satelliteoutput",{"_index":115,"title":{"interfaces/SatelliteOutput.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["satellitetask",{"_index":32,"title":{"interfaces/SatelliteTask.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/CommandService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["satmessage",{"_index":129,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["satversion",{"_index":949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["savelogs",{"_index":98,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["schedulemodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["scidap",{"_index":352,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["script",{"_index":339,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["scripts",{"_index":730,"title":{},"body":{"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{}}}],["scriptstring",{"_index":97,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["seconds",{"_index":206,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["send",{"_index":123,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/CommandService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"dependencies.html":{}}}],["sender",{"_index":108,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["sendevent",{"_index":696,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["sendpm2bus",{"_index":476,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["sendpm2bus(pid",{"_index":519,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["sendreadytochild",{"_index":822,"title":{},"body":{"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["sends",{"_index":487,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["sendstdin",{"_index":477,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["sendstdin(pid",{"_index":529,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["sendstoptochild",{"_index":815,"title":{},"body":{"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["sent",{"_index":387,"title":{},"body":{"injectables/CommandService.html":{}}}],["service",{"_index":486,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["service.pm2_env.pm_id",{"_index":638,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["service.pm2_env.status",{"_index":639,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["servicecommand",{"_index":36,"title":{"interfaces/ServiceCommand.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/CommandService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["servicecontext",{"_index":350,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/typealiases.html":{}}}],["serviceevent",{"_index":354,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/typealiases.html":{}}}],["serviceinterpreter",{"_index":347,"title":{},"body":{"interfaces/BaseContext.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{},"miscellaneous/typealiases.html":{}}}],["servicemachine",{"_index":348,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/typealiases.html":{}}}],["servicemachineconfig",{"_index":349,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"miscellaneous/typealiases.html":{}}}],["services",{"_index":624,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["services.length",{"_index":634,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["servicestate",{"_index":359,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/typealiases.html":{}}}],["servicestatevalues",{"_index":366,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"miscellaneous/typealiases.html":{}}}],["set",{"_index":77,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/CommandService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["set([...finalentry",{"_index":784,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["set([...finalexit",{"_index":785,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["set([...onfinalactions",{"_index":798,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["sets",{"_index":534,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["settimeout",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings.yml",{"_index":837,"title":{},"body":{"injectables/TaskService.html":{}}}],["setup",{"_index":660,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["setupprocesslistener",{"_index":478,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["setupprocesslistener(packet",{"_index":531,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["shape",{"_index":880,"title":{},"body":{"injectables/TreeService.html":{}}}],["silently",{"_index":422,"title":{},"body":{"injectables/CommandService.html":{}}}],["single",{"_index":631,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["size",{"_index":193,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["slightly",{"_index":881,"title":{},"body":{"injectables/TreeService.html":{}}}],["sm",{"_index":888,"title":{},"body":{"injectables/TreeService.html":{}}}],["sm.actions",{"_index":891,"title":{},"body":{"injectables/TreeService.html":{}}}],["sm.guards",{"_index":889,"title":{},"body":{"injectables/TreeService.html":{}}}],["sm.on",{"_index":898,"title":{},"body":{"injectables/TreeService.html":{}}}],["sm.states",{"_index":893,"title":{},"body":{"injectables/TreeService.html":{}}}],["sm.states[k",{"_index":897,"title":{},"body":{"injectables/TreeService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"modules/AppModule.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"modules/Pm2Module.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"modules/StateMachineModules.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["source_map_support",{"_index":91,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["spawn",{"_index":724,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["spawn(i",{"_index":810,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["sr",{"_index":532,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["sr.err",{"_index":663,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["sr.out",{"_index":664,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["sr.respond",{"_index":658,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["sr.satmessage.next",{"_index":661,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["sr.targetmachine",{"_index":662,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["src/.../actiontype.ts",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.service.ts",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.ts",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1014,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../pm2.service.ts",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../statemachine.interface.ts",{"_index":1036,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../statemachine.ts",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../statemachines.service.ts",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tasktype.ts",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utilities.ts",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.module.ts",{"_index":291,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:19",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:23",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:32",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/command.service.ts",{"_index":374,"title":{},"body":{"injectables/CommandService.html":{},"coverage.html":{}}}],["src/command.service.ts:12",{"_index":380,"title":{},"body":{"injectables/CommandService.html":{}}}],["src/command.service.ts:21",{"_index":383,"title":{},"body":{"injectables/CommandService.html":{}}}],["src/command.service.ts:72",{"_index":389,"title":{},"body":{"injectables/CommandService.html":{}}}],["src/interfaces/apisync.interface.ts",{"_index":6,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["src/interfaces/apisync.interface.ts:138",{"_index":449,"title":{},"body":{"interfaces/FileFromClient.html":{}}}],["src/interfaces/apisync.interface.ts:141",{"_index":11,"title":{},"body":{"interfaces/APISyncComplete.html":{}}}],["src/interfaces/apisync.interface.ts:57",{"_index":450,"title":{},"body":{"interfaces/OptionTypes.html":{}}}],["src/interfaces/apisync.interface.ts:6",{"_index":146,"title":{},"body":{"interfaces/APISyncService.html":{}}}],["src/interfaces/apisync.interface.ts:7",{"_index":141,"title":{},"body":{"interfaces/APISyncService.html":{}}}],["src/interfaces/apisync.interface.ts:8",{"_index":145,"title":{},"body":{"interfaces/APISyncService.html":{}}}],["src/interfaces/pm2.interface.ts",{"_index":452,"title":{},"body":{"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"coverage.html":{}}}],["src/interfaces/satellite.interface.ts",{"_index":148,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"coverage.html":{}}}],["src/interfaces/satellite.interface.ts:12",{"_index":373,"title":{},"body":{"interfaces/BaseModuleInterface.html":{}}}],["src/interfaces/satellite.interface.ts:18",{"_index":370,"title":{},"body":{"interfaces/BaseModuleInterface.html":{}}}],["src/interfaces/statemachine.interface.ts",{"_index":336,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/interfaces/statemachine.interface.ts:27",{"_index":448,"title":{},"body":{"interfaces/ContextChildren.html":{}}}],["src/lib/actiontype.ts",{"_index":940,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/logger.ts",{"_index":951,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/statemachine.ts",{"_index":952,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/tasktype.ts",{"_index":953,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/utilities.ts",{"_index":958,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":963,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/pm2/pm2.module.ts",{"_index":464,"title":{},"body":{"modules/Pm2Module.html":{}}}],["src/pm2/pm2.service.ts",{"_index":467,"title":{},"body":{"injectables/Pm2Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/pm2/pm2.service.ts:110",{"_index":515,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["src/pm2/pm2.service.ts:13",{"_index":481,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["src/pm2/pm2.service.ts:151",{"_index":493,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["src/pm2/pm2.service.ts:229",{"_index":498,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["src/pm2/pm2.service.ts:24",{"_index":504,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["src/pm2/pm2.service.ts:269",{"_index":484,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["src/pm2/pm2.service.ts:299",{"_index":533,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["src/pm2/pm2.service.ts:322",{"_index":520,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["src/pm2/pm2.service.ts:345",{"_index":530,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["src/pm2/pm2.service.ts:361",{"_index":501,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["src/pm2/pm2.service.ts:47",{"_index":503,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["src/pm2/pm2.service.ts:71",{"_index":510,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["src/statemachines/statemachines.module.ts",{"_index":690,"title":{},"body":{"modules/StateMachineModules.html":{}}}],["src/statemachines/statemachines.service.ts",{"_index":692,"title":{},"body":{"injectables/StateMachinesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/statemachines/statemachines.service.ts:19",{"_index":721,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:196",{"_index":714,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:22",{"_index":720,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:24",{"_index":719,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:26",{"_index":699,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/statemachines/statemachines.service.ts:45",{"_index":702,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["src/task.service.ts",{"_index":825,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task.service.ts:15",{"_index":829,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task.service.ts:26",{"_index":831,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/tree.service.ts",{"_index":867,"title":{},"body":{"injectables/TreeService.html":{},"coverage.html":{}}}],["src/tree.service.ts:14",{"_index":871,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/tree.service.ts:7",{"_index":869,"title":{},"body":{"injectables/TreeService.html":{}}}],["sslconnection",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":488,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["started",{"_index":357,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["starting",{"_index":643,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["startoptions",{"_index":20,"title":{"interfaces/StartOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["starts",{"_index":1015,"title":{},"body":{"miscellaneous/functions.html":{}}}],["state",{"_index":152,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{},"injectables/StateMachinesService.html":{},"injectables/TreeService.html":{},"miscellaneous/variables.html":{}}}],["state.entry",{"_index":779,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["state.exit",{"_index":783,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["state.on",{"_index":788,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["state.on[k",{"_index":791,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["state.overwrite",{"_index":772,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["stateentry",{"_index":778,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["stateexit",{"_index":782,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["statelogger",{"_index":726,"title":{},"body":{"injectables/StateMachinesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statelogger(name",{"_index":741,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["statemachine",{"_index":42,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/typealiases.html":{}}}],["statemachine.actions",{"_index":892,"title":{},"body":{"injectables/TreeService.html":{}}}],["statemachine.guards",{"_index":890,"title":{},"body":{"injectables/TreeService.html":{}}}],["statemachine.on",{"_index":899,"title":{},"body":{"injectables/TreeService.html":{}}}],["statemachine.states",{"_index":894,"title":{},"body":{"injectables/TreeService.html":{}}}],["statemachine.states[k",{"_index":896,"title":{},"body":{"injectables/TreeService.html":{}}}],["statemachinemodules",{"_index":248,"title":{"modules/StateMachineModules.html":{}},"body":{"modules/AppModule.html":{},"modules/StateMachineModules.html":{},"index.html":{},"modules.html":{}}}],["statemachineoptions",{"_index":56,"title":{"interfaces/StateMachineOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["statemachines.log",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statemachines.service",{"_index":691,"title":{},"body":{"modules/StateMachineModules.html":{}}}],["statemachines/statemachines.module",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["statemachinesservice",{"_index":689,"title":{"injectables/StateMachinesService.html":{}},"body":{"modules/StateMachineModules.html":{},"injectables/StateMachinesService.html":{},"coverage.html":{},"index.html":{}}}],["statements",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["stateoptions",{"_index":57,"title":{"interfaces/StateOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["states",{"_index":49,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["status",{"_index":192,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["stderr",{"_index":459,"title":{},"body":{"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{}}}],["stdin",{"_index":130,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/BaseContext.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["stdout",{"_index":458,"title":{},"body":{"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{}}}],["stop",{"_index":600,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["stopped",{"_index":356,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["stopping",{"_index":650,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["stops",{"_index":499,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["store",{"_index":629,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["stream",{"_index":538,"title":{},"body":{"injectables/Pm2Service.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["streaminformation",{"_index":121,"title":{"interfaces/StreamInformation.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["streamqueue",{"_index":140,"title":{},"body":{"interfaces/APISyncService.html":{}}}],["streamqueue(upstream",{"_index":25,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["streamresponse",{"_index":96,"title":{"interfaces/StreamResponse.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["streams",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strictly",{"_index":415,"title":{},"body":{"injectables/CommandService.html":{}}}],["string",{"_index":9,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"injectables/AuthService.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["stringify",{"_index":83,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["strings",{"_index":71,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["structure",{"_index":875,"title":{},"body":{"injectables/TreeService.html":{}}}],["sub",{"_index":128,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["subject",{"_index":17,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["subscription",{"_index":18,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["success",{"_index":491,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["support",{"_index":1027,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":879,"title":{},"body":{"injectables/TreeService.html":{}}}],["svg",{"_index":1028,"title":{},"body":{"modules.html":{}}}],["swap",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["switch",{"_index":595,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["sync",{"_index":85,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["table",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["tail",{"_index":923,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["takes",{"_index":872,"title":{},"body":{"injectables/TreeService.html":{}}}],["target",{"_index":61,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"injectables/CommandService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"miscellaneous/variables.html":{}}}],["targetmachine",{"_index":116,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["task",{"_index":385,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/TaskService.html":{}}}],["task.name",{"_index":846,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.options",{"_index":850,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.scriptstring",{"_index":853,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.service",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["taskid",{"_index":29,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["tasks",{"_index":31,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["taskservice",{"_index":222,"title":{"injectables/TaskService.html":{}},"body":{"modules/AppModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"index.html":{}}}],["temporary",{"_index":832,"title":{},"body":{"injectables/TaskService.html":{}}}],["test",{"_index":617,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["testing",{"_index":65,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["testscript",{"_index":675,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["then((response",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._appservice.machines[options.name].fsm",{"_index":608,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["this._appservice.satelliteid",{"_index":666,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["this._appservice.sendtoapisync(msg",{"_index":735,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["this._configservice.get('namespace",{"_index":554,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["this._configservice.get('test_script",{"_index":676,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["this._configservice.get('tmp",{"_index":840,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._jwt",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._pm2service.parseoptions(curr.options",{"_index":886,"title":{},"body":{"injectables/TreeService.html":{}}}],["this._pm2service.parseoptions(options",{"_index":866,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._pm2service.sendpm2bus(id",{"_index":401,"title":{},"body":{"injectables/CommandService.html":{}}}],["this._pm2service.sendstdin(id",{"_index":408,"title":{},"body":{"injectables/CommandService.html":{}}}],["this._restartservice(options",{"_index":602,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["this._startservice(options",{"_index":597,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["this._stopservice(options",{"_index":601,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["this._tempfolder",{"_index":839,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._testoptions(combinedoptions",{"_index":619,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["this.apisync$.subscribe((msg",{"_index":734,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["this.jwtservice",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.decode(this._jwt",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.decode(token",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.publickey",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["through",{"_index":405,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TreeService.html":{}}}],["throw",{"_index":625,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["throws",{"_index":508,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["tmp",{"_index":838,"title":{},"body":{"injectables/TaskService.html":{}}}],["tmp/scidap_satellite",{"_index":841,"title":{},"body":{"injectables/TaskService.html":{}}}],["todo",{"_index":112,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["token",{"_index":174,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"injectables/AuthService.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["toparse",{"_index":571,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["toparse.map((i",{"_index":573,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["topic",{"_index":670,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["totallength",{"_index":196,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["transport",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["transport.grpc",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["traps",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":705,"title":{},"body":{"injectables/StateMachinesService.html":{},"injectables/TreeService.html":{}}}],["tree.apimachine",{"_index":905,"title":{},"body":{"injectables/TreeService.html":{}}}],["tree.busresponse",{"_index":746,"title":{},"body":{"injectables/StateMachinesService.html":{},"injectables/TreeService.html":{}}}],["tree.busresponse).call(this",{"_index":750,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["tree.errorresponse",{"_index":907,"title":{},"body":{"injectables/TreeService.html":{}}}],["tree.onlymachine",{"_index":812,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["tree.outresponse",{"_index":906,"title":{},"body":{"injectables/TreeService.html":{}}}],["tree.service",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["tree.statemachine.actions",{"_index":754,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["tree.statemachine.guards",{"_index":762,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["tree.statemachine.on",{"_index":744,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["tree.statemachine.states",{"_index":767,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["tree.statemachine.states[key",{"_index":771,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["treeparser",{"_index":883,"title":{},"body":{"injectables/TreeService.html":{}}}],["treeparser(c",{"_index":902,"title":{},"body":{"injectables/TreeService.html":{}}}],["treeparser(tree",{"_index":908,"title":{},"body":{"injectables/TreeService.html":{}}}],["trees",{"_index":33,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["trees.map((tree",{"_index":876,"title":{},"body":{"injectables/TreeService.html":{}}}],["treeservice",{"_index":223,"title":{"injectables/TreeService.html":{}},"body":{"modules/AppModule.html":{},"injectables/TreeService.html":{},"coverage.html":{},"index.html":{}}}],["true",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/TaskService.html":{}}}],["try",{"_index":399,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{}}}],["tsconfig.json",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":105,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"injectables/AuthService.html":{},"interfaces/BaseContext.html":{},"interfaces/BaseModuleInterface.html":{},"injectables/CommandService.html":{},"interfaces/ContextChildren.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/DependencyTree.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/FileFromClient.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedData.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteJWT.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1034,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":550,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["types",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":546,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["unlicensed",{"_index":1032,"title":{},"body":{"properties.html":{}}}],["unprocessedstatemachineoptions",{"_index":43,"title":{"interfaces/UnProcessedStateMachineOptions.html":{}},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["uo",{"_index":674,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["uo.cwd",{"_index":679,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["uo.env",{"_index":684,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["uo.exec_mode",{"_index":681,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["uo.interpreter",{"_index":680,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["uo.script",{"_index":677,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["uo.watch",{"_index":682,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["up",{"_index":535,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/TaskService.html":{},"miscellaneous/functions.html":{}}}],["updated",{"_index":707,"title":{},"body":{"injectables/StateMachinesService.html":{},"injectables/TaskService.html":{}}}],["updated_sample",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatedactions",{"_index":752,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedactions[k",{"_index":757,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updateddefaultconfig",{"_index":742,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updateddefaultconfig.on",{"_index":745,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updateddefaultconfig.states",{"_index":769,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updateddefaultconfig.states[key",{"_index":775,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedenv",{"_index":683,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["updatedenv.path",{"_index":685,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["updatedguards",{"_index":761,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedguards[k",{"_index":764,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedsample",{"_index":957,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatedstates",{"_index":768,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["updatedstates[key",{"_index":773,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["upstream",{"_index":143,"title":{},"body":{"interfaces/APISyncService.html":{}}}],["uri",{"_index":182,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["uris",{"_index":202,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["url",{"_index":154,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["urlwithstringquery",{"_index":153,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["use",{"_index":68,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"injectables/StateMachinesService.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TreeService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["used",{"_index":64,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["usefactory",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["userid",{"_index":164,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["value",{"_index":360,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":548,"title":{},"body":{"injectables/Pm2Service.html":{},"injectables/StateMachinesService.html":{}}}],["variable",{"_index":78,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{},"coverage.html":{}}}],["variables",{"_index":1037,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["verify(token",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyasync(token",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":924,"title":{},"body":{"coverage.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["viewlisturl",{"_index":169,"title":{},"body":{"interfaces/AirflowReportToAPI.html":{},"interfaces/AirflowSuccessToAPI.html":{},"interfaces/Aria2cProgressReport.html":{},"interfaces/AriaDownloadObject.html":{},"interfaces/AriaFileInfo.html":{},"interfaces/BaseModuleInterface.html":{},"interfaces/DownloadFailed.html":{},"interfaces/DownloadObject.html":{},"interfaces/DownloadResults.html":{},"interfaces/FileData.html":{},"interfaces/Info.html":{},"interfaces/MergedDownloadObject.html":{},"interfaces/ProcessedData.html":{},"interfaces/SatelliteJWT.html":{}}}],["visual_plugin",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visualplugin",{"_index":950,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":353,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/Pm2Service.html":{}}}],["wait",{"_index":962,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":431,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{}}}],["watch",{"_index":80,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["watch_array",{"_index":81,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"injectables/Pm2Service.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["within",{"_index":805,"title":{},"body":{"injectables/StateMachinesService.html":{}}}],["without",{"_index":417,"title":{},"body":{"injectables/CommandService.html":{},"injectables/Pm2Service.html":{}}}],["work",{"_index":627,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["working",{"_index":633,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["world",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["wrapper",{"_index":521,"title":{},"body":{"injectables/Pm2Service.html":{}}}],["write",{"_index":90,"title":{},"body":{"interfaces/APISyncComplete.html":{},"interfaces/APISyncMessage.html":{},"interfaces/APISyncService.html":{},"interfaces/CustomPm2StartOptions.html":{},"interfaces/DependencyTree.html":{},"interfaces/FileFromClient.html":{},"interfaces/OnOptions.html":{},"interfaces/OptionTypes.html":{},"interfaces/ProcessedTree.html":{},"interfaces/SatelliteMessage.html":{},"interfaces/SatelliteOutput.html":{},"interfaces/SatelliteTask.html":{},"interfaces/ServiceCommand.html":{},"interfaces/StartOptions.html":{},"interfaces/StateMachineOptions.html":{},"interfaces/StateOptions.html":{},"interfaces/StreamInformation.html":{},"interfaces/StreamResponse.html":{},"injectables/TaskService.html":{},"interfaces/UnProcessedStateMachineOptions.html":{}}}],["writestream",{"_index":341,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"interfaces/PM2BusPacket.html":{},"interfaces/PM2_Service.html":{}}}],["xstate",{"_index":346,"title":{},"body":{"interfaces/BaseContext.html":{},"interfaces/ContextChildren.html":{},"interfaces/DefaultMachineConfig.html":{},"injectables/StateMachinesService.html":{},"dependencies.html":{}}}],["yes",{"_index":372,"title":{},"body":{"interfaces/BaseModuleInterface.html":{},"injectables/Pm2Service.html":{}}}],["zoom",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Pm2Module.html":{},"modules/StateMachineModules.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/APISyncComplete.html":{"url":"interfaces/APISyncComplete.html","title":"interface - APISyncComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APISyncComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/interfaces/apiSync.interface.ts:141\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/APISyncMessage.html":{"url":"interfaces/APISyncMessage.html","title":"interface - APISyncMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APISyncMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            commands\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            keepalive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            satelliteid\n                                        \n                                \n                                \n                                        \n                                            taskId\n                                        \n                                \n                                \n                                        \n                                            tasks\n                                        \n                                \n                                \n                                        \n                                            trees\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commands\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commands:         ServiceCommand[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ServiceCommand[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepalive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepalive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satelliteid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satelliteid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taskId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taskId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         SatelliteTask[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SatelliteTask[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trees\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trees:         DependencyTree[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DependencyTree[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/APISyncService.html":{"url":"interfaces/APISyncService.html","title":"interface - APISyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APISyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        commandStream\n                                    \n                                \n                                \n                                    \n                                        fileStream\n                                    \n                                \n                                \n                                    \n                                        streamQueue\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        commandStream\n                        \n                    \n                \n            \n            \n                \ncommandStream(upstream: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/apiSync.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    upstream\n                                    \n                                                Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileStream\n                        \n                    \n                \n            \n            \n                \nfileStream(upstream: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/apiSync.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    upstream\n                                    \n                                                Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamQueue\n                        \n                    \n                \n            \n            \n                \nstreamQueue(upstream: Observable, metadata: Metadata)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/apiSync.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    upstream\n                                    \n                                                Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            Metadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AirflowReportToAPI.html":{"url":"interfaces/AirflowReportToAPI.html","title":"interface - AirflowReportToAPI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AirflowReportToAPI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/satellite.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dagId\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            progress\n                                        \n                                \n                                \n                                        \n                                            runId\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dagId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dagId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        runId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        runId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UrlWithStringQuery } from 'url';\n\nexport interface ProcessedData {\n    cwlFile?: string;\n    sample?: any;\n    taskId: string;\n    dagId?: string;\n    downloads?: any[];\n}\n\nexport interface BaseModuleInterface {\n    getInfo(): {\n        moduleId: string;\n        caption: string;\n        type: string;\n    };\n\n    getFile(fileUrl: UrlWithStringQuery, userId?: string, sampleId?: string): FileData;\n}\n\nexport interface Info {\n    moduleId: string;\n    caption?: string;\n    type?: string;\n    mainUrl?: string;\n    loginUrl?: string;\n    viewListUrl?: string;\n    downloadUrl?: string;\n    private_key?: string;\n    private_iv?: string;\n    encryptKey?: string;\n    token?: string;\n    protocol?: string;\n    collection?: any;\n    publication?: string;\n    refreshSessionInterval?: number;\n}\n\nexport interface FileData {\n    url: string;\n    basename: string;\n    header: string;\n}\n\nexport interface DownloadObject {\n    uri: string;\n    path: string;\n    header: string;\n    sampleId: string;\n    projectId: string;\n    userId: string;\n    fileId: string;\n    inputKey?: string;\n    token: string;\n    downloaded: boolean;\n    taskId: string;\n    fileName: string;\n    gid?: string;\n}\n\nexport interface AriaDownloadObject extends DownloadObject {\n    gid: string;\n}\n\nexport interface DownloadResults {\n    status: string;\n    fileId?: string;\n    taskId?: string;\n    progress?: string;\n    error?: boolean;\n    path?: string;\n    size?: number;\n    message?: string;\n    sampleId?: string;\n}\n\nexport interface Aria2cProgressReport {\n    status: string;\n    completedLength: number;\n    totalLength: number;\n    files: AriaFileInfo[];\n}\n\nexport interface MergedDownloadObject {\n    aria2: Aria2cProgressReport;\n    data: AriaDownloadObject;\n}\n\nexport interface AriaFileInfo {\n    path: string;\n    uris: {\n        uri: string;\n    }[];\n}\nexport interface AirflowReportToAPI {\n    state: string;\n    dagId: string;\n    runId: string;\n    progress: number;\n    error: string;\n}\n\nexport interface AirflowSuccessToAPI {\n    dagId: string;\n    runId: string;\n    progress: number;\n    results: any;\n}\n\nexport interface SatelliteJWT {\n    userId: string;\n    iat: number; //in seconds\n    exp: number; //in seconds\n    aud: string; //satellite id\n    sub: string; //satellite\n}\n\nexport interface DownloadFailed {\n    message: string;\n    sampleId: string;\n    taskId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AirflowSuccessToAPI.html":{"url":"interfaces/AirflowSuccessToAPI.html","title":"interface - AirflowSuccessToAPI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AirflowSuccessToAPI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/satellite.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dagId\n                                        \n                                \n                                \n                                        \n                                            progress\n                                        \n                                \n                                \n                                        \n                                            results\n                                        \n                                \n                                \n                                        \n                                            runId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dagId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dagId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        runId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        runId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UrlWithStringQuery } from 'url';\n\nexport interface ProcessedData {\n    cwlFile?: string;\n    sample?: any;\n    taskId: string;\n    dagId?: string;\n    downloads?: any[];\n}\n\nexport interface BaseModuleInterface {\n    getInfo(): {\n        moduleId: string;\n        caption: string;\n        type: string;\n    };\n\n    getFile(fileUrl: UrlWithStringQuery, userId?: string, sampleId?: string): FileData;\n}\n\nexport interface Info {\n    moduleId: string;\n    caption?: string;\n    type?: string;\n    mainUrl?: string;\n    loginUrl?: string;\n    viewListUrl?: string;\n    downloadUrl?: string;\n    private_key?: string;\n    private_iv?: string;\n    encryptKey?: string;\n    token?: string;\n    protocol?: string;\n    collection?: any;\n    publication?: string;\n    refreshSessionInterval?: number;\n}\n\nexport interface FileData {\n    url: string;\n    basename: string;\n    header: string;\n}\n\nexport interface DownloadObject {\n    uri: string;\n    path: string;\n    header: string;\n    sampleId: string;\n    projectId: string;\n    userId: string;\n    fileId: string;\n    inputKey?: string;\n    token: string;\n    downloaded: boolean;\n    taskId: string;\n    fileName: string;\n    gid?: string;\n}\n\nexport interface AriaDownloadObject extends DownloadObject {\n    gid: string;\n}\n\nexport interface DownloadResults {\n    status: string;\n    fileId?: string;\n    taskId?: string;\n    progress?: string;\n    error?: boolean;\n    path?: string;\n    size?: number;\n    message?: string;\n    sampleId?: string;\n}\n\nexport interface Aria2cProgressReport {\n    status: string;\n    completedLength: number;\n    totalLength: number;\n    files: AriaFileInfo[];\n}\n\nexport interface MergedDownloadObject {\n    aria2: Aria2cProgressReport;\n    data: AriaDownloadObject;\n}\n\nexport interface AriaFileInfo {\n    path: string;\n    uris: {\n        uri: string;\n    }[];\n}\nexport interface AirflowReportToAPI {\n    state: string;\n    dagId: string;\n    runId: string;\n    progress: number;\n    error: string;\n}\n\nexport interface AirflowSuccessToAPI {\n    dagId: string;\n    runId: string;\n    progress: number;\n    results: any;\n}\n\nexport interface SatelliteJWT {\n    userId: string;\n    iat: number; //in seconds\n    exp: number; //in seconds\n    aud: string; //satellite id\n    sub: string; //satellite\n}\n\nexport interface DownloadFailed {\n    message: string;\n    sampleId: string;\n    taskId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAppService \n\nAppService \n\nAppService  -->\n\nAppModule->AppService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCommandService\n\nCommandService\n\nAppModule -->\n\nCommandService->AppModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nAppModule -->\n\nTaskService->AppModule\n\n\n\n\n\nTreeService\n\nTreeService\n\nAppModule -->\n\nTreeService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            CommandService\n                        \n                        \n                            TaskService\n                        \n                        \n                            TreeService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, HttpModule, Module } from '@nestjs/common';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ClientProxyFactory, ClientsModule, Transport } from '@nestjs/microservices';\nimport { JwtModule } from '@nestjs/jwt';\nimport { credentials } from 'grpc';\nimport { join } from 'path';\n\nimport { AuthModule } from './auth/auth.module';\nimport { AppService } from './app.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { StateMachineModules } from './stateMachines/stateMachines.module';\nimport configuration from '../configuration';\nimport { TreeService } from './tree.service';\nimport { TaskService } from './task.service';\nimport { Pm2Module } from './pm2/pm2.module';\nimport { CommandService } from './command.service';\n\n@Module({\n    imports: [\n        AuthModule,\n        forwardRef(() => StateMachineModules),\n        HttpModule,\n        JwtModule.register({}),\n        ScheduleModule.forRoot(),\n        ConfigModule.forRoot({\n            isGlobal: true,\n            load: [configuration],\n        }),\n        forwardRef(() => Pm2Module),\n    ],\n    // This is the real world configuration that we will need to swap back to when we finish development\n    providers: [\n        {\n            provide: 'API_SYNC_CONNECTION_SERVICE',\n            useFactory: (configService: ConfigService) => {\n                const sslConnection = configService.get('SSL_CONN') === 'true' ? true : false;\n                return ClientProxyFactory.create({\n                    transport: Transport.GRPC,\n                    options: {\n                        ...configService.get('gRPCOptions'),\n                        credentials: sslConnection ? credentials.createSsl() : credentials.createInsecure(),\n                        maxSendMessageLength: 15 * 1024 * 1024,\n                        maxReceiveMessageLength: 15 * 1024 * 1024,\n                    },\n                });\n            },\n            inject: [ConfigService],\n        },\n        ConfigService,\n        AppService,\n        TreeService,\n        TaskService,\n        CommandService,\n    ],\n    exports: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Aria2cProgressReport.html":{"url":"interfaces/Aria2cProgressReport.html","title":"interface - Aria2cProgressReport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Aria2cProgressReport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/satellite.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completedLength\n                                        \n                                \n                                \n                                        \n                                            files\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            totalLength\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completedLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completedLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        files:     AriaFileInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AriaFileInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UrlWithStringQuery } from 'url';\n\nexport interface ProcessedData {\n    cwlFile?: string;\n    sample?: any;\n    taskId: string;\n    dagId?: string;\n    downloads?: any[];\n}\n\nexport interface BaseModuleInterface {\n    getInfo(): {\n        moduleId: string;\n        caption: string;\n        type: string;\n    };\n\n    getFile(fileUrl: UrlWithStringQuery, userId?: string, sampleId?: string): FileData;\n}\n\nexport interface Info {\n    moduleId: string;\n    caption?: string;\n    type?: string;\n    mainUrl?: string;\n    loginUrl?: string;\n    viewListUrl?: string;\n    downloadUrl?: string;\n    private_key?: string;\n    private_iv?: string;\n    encryptKey?: string;\n    token?: string;\n    protocol?: string;\n    collection?: any;\n    publication?: string;\n    refreshSessionInterval?: number;\n}\n\nexport interface FileData {\n    url: string;\n    basename: string;\n    header: string;\n}\n\nexport interface DownloadObject {\n    uri: string;\n    path: string;\n    header: string;\n    sampleId: string;\n    projectId: string;\n    userId: string;\n    fileId: string;\n    inputKey?: string;\n    token: string;\n    downloaded: boolean;\n    taskId: string;\n    fileName: string;\n    gid?: string;\n}\n\nexport interface AriaDownloadObject extends DownloadObject {\n    gid: string;\n}\n\nexport interface DownloadResults {\n    status: string;\n    fileId?: string;\n    taskId?: string;\n    progress?: string;\n    error?: boolean;\n    path?: string;\n    size?: number;\n    message?: string;\n    sampleId?: string;\n}\n\nexport interface Aria2cProgressReport {\n    status: string;\n    completedLength: number;\n    totalLength: number;\n    files: AriaFileInfo[];\n}\n\nexport interface MergedDownloadObject {\n    aria2: Aria2cProgressReport;\n    data: AriaDownloadObject;\n}\n\nexport interface AriaFileInfo {\n    path: string;\n    uris: {\n        uri: string;\n    }[];\n}\nexport interface AirflowReportToAPI {\n    state: string;\n    dagId: string;\n    runId: string;\n    progress: number;\n    error: string;\n}\n\nexport interface AirflowSuccessToAPI {\n    dagId: string;\n    runId: string;\n    progress: number;\n    results: any;\n}\n\nexport interface SatelliteJWT {\n    userId: string;\n    iat: number; //in seconds\n    exp: number; //in seconds\n    aud: string; //satellite id\n    sub: string; //satellite\n}\n\nexport interface DownloadFailed {\n    message: string;\n    sampleId: string;\n    taskId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AriaDownloadObject.html":{"url":"interfaces/AriaDownloadObject.html","title":"interface - AriaDownloadObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AriaDownloadObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/satellite.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DownloadObject\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UrlWithStringQuery } from 'url';\n\nexport interface ProcessedData {\n    cwlFile?: string;\n    sample?: any;\n    taskId: string;\n    dagId?: string;\n    downloads?: any[];\n}\n\nexport interface BaseModuleInterface {\n    getInfo(): {\n        moduleId: string;\n        caption: string;\n        type: string;\n    };\n\n    getFile(fileUrl: UrlWithStringQuery, userId?: string, sampleId?: string): FileData;\n}\n\nexport interface Info {\n    moduleId: string;\n    caption?: string;\n    type?: string;\n    mainUrl?: string;\n    loginUrl?: string;\n    viewListUrl?: string;\n    downloadUrl?: string;\n    private_key?: string;\n    private_iv?: string;\n    encryptKey?: string;\n    token?: string;\n    protocol?: string;\n    collection?: any;\n    publication?: string;\n    refreshSessionInterval?: number;\n}\n\nexport interface FileData {\n    url: string;\n    basename: string;\n    header: string;\n}\n\nexport interface DownloadObject {\n    uri: string;\n    path: string;\n    header: string;\n    sampleId: string;\n    projectId: string;\n    userId: string;\n    fileId: string;\n    inputKey?: string;\n    token: string;\n    downloaded: boolean;\n    taskId: string;\n    fileName: string;\n    gid?: string;\n}\n\nexport interface AriaDownloadObject extends DownloadObject {\n    gid: string;\n}\n\nexport interface DownloadResults {\n    status: string;\n    fileId?: string;\n    taskId?: string;\n    progress?: string;\n    error?: boolean;\n    path?: string;\n    size?: number;\n    message?: string;\n    sampleId?: string;\n}\n\nexport interface Aria2cProgressReport {\n    status: string;\n    completedLength: number;\n    totalLength: number;\n    files: AriaFileInfo[];\n}\n\nexport interface MergedDownloadObject {\n    aria2: Aria2cProgressReport;\n    data: AriaDownloadObject;\n}\n\nexport interface AriaFileInfo {\n    path: string;\n    uris: {\n        uri: string;\n    }[];\n}\nexport interface AirflowReportToAPI {\n    state: string;\n    dagId: string;\n    runId: string;\n    progress: number;\n    error: string;\n}\n\nexport interface AirflowSuccessToAPI {\n    dagId: string;\n    runId: string;\n    progress: number;\n    results: any;\n}\n\nexport interface SatelliteJWT {\n    userId: string;\n    iat: number; //in seconds\n    exp: number; //in seconds\n    aud: string; //satellite id\n    sub: string; //satellite\n}\n\nexport interface DownloadFailed {\n    message: string;\n    sampleId: string;\n    taskId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AriaFileInfo.html":{"url":"interfaces/AriaFileInfo.html","title":"interface - AriaFileInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AriaFileInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/satellite.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            uris\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uris\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uris:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UrlWithStringQuery } from 'url';\n\nexport interface ProcessedData {\n    cwlFile?: string;\n    sample?: any;\n    taskId: string;\n    dagId?: string;\n    downloads?: any[];\n}\n\nexport interface BaseModuleInterface {\n    getInfo(): {\n        moduleId: string;\n        caption: string;\n        type: string;\n    };\n\n    getFile(fileUrl: UrlWithStringQuery, userId?: string, sampleId?: string): FileData;\n}\n\nexport interface Info {\n    moduleId: string;\n    caption?: string;\n    type?: string;\n    mainUrl?: string;\n    loginUrl?: string;\n    viewListUrl?: string;\n    downloadUrl?: string;\n    private_key?: string;\n    private_iv?: string;\n    encryptKey?: string;\n    token?: string;\n    protocol?: string;\n    collection?: any;\n    publication?: string;\n    refreshSessionInterval?: number;\n}\n\nexport interface FileData {\n    url: string;\n    basename: string;\n    header: string;\n}\n\nexport interface DownloadObject {\n    uri: string;\n    path: string;\n    header: string;\n    sampleId: string;\n    projectId: string;\n    userId: string;\n    fileId: string;\n    inputKey?: string;\n    token: string;\n    downloaded: boolean;\n    taskId: string;\n    fileName: string;\n    gid?: string;\n}\n\nexport interface AriaDownloadObject extends DownloadObject {\n    gid: string;\n}\n\nexport interface DownloadResults {\n    status: string;\n    fileId?: string;\n    taskId?: string;\n    progress?: string;\n    error?: boolean;\n    path?: string;\n    size?: number;\n    message?: string;\n    sampleId?: string;\n}\n\nexport interface Aria2cProgressReport {\n    status: string;\n    completedLength: number;\n    totalLength: number;\n    files: AriaFileInfo[];\n}\n\nexport interface MergedDownloadObject {\n    aria2: Aria2cProgressReport;\n    data: AriaDownloadObject;\n}\n\nexport interface AriaFileInfo {\n    path: string;\n    uris: {\n        uri: string;\n    }[];\n}\nexport interface AirflowReportToAPI {\n    state: string;\n    dagId: string;\n    runId: string;\n    progress: number;\n    error: string;\n}\n\nexport interface AirflowSuccessToAPI {\n    dagId: string;\n    runId: string;\n    progress: number;\n    results: any;\n}\n\nexport interface SatelliteJWT {\n    userId: string;\n    iat: number; //in seconds\n    exp: number; //in seconds\n    aud: string; //satellite id\n    sub: string; //satellite\n}\n\nexport interface DownloadFailed {\n    message: string;\n    sampleId: string;\n    taskId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\n\nimport { AuthService } from './auth.service';\n\n@Module({\n    imports: [JwtModule.register({})],\n    providers: [AuthService],\n    exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _jwt\n                            \n                            \n                                    Public\n                                publicKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decode\n                            \n                            \n                                getJWT\n                            \n                            \n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    satelliteId\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decode\n                        \n                    \n                \n            \n            \n                \ndecode(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJWT\n                        \n                    \n                \n            \n            \n                \ngetJWT()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verify\n                        \n                    \n                \n            \n            \n                \nverify(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _jwt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        publicKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        satelliteId\n                    \n                \n\n                \n                    \n                        getsatelliteId()\n                    \n                \n                            \n                                \n                                    Defined in src/auth/auth.service.ts:14\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { SatelliteJWT } from '../interfaces';\n\n@Injectable()\nexport class AuthService {\n    private _jwt: string;\n    public publicKey: string;\n    constructor(private readonly jwtService: JwtService) {\n        this._jwt = process.env.SATELLITE_TOKEN;\n    }\n\n    public get satelliteId(): string {\n        const decoded = this.jwtService.decode(this._jwt) as SatelliteJWT;\n        return decoded.aud;\n    }\n\n    getJWT(): string {\n        return this._jwt;\n    }\n\n    verify(token: string): Promise {\n        return new Promise((resolve, reject) => {\n            this.jwtService\n                .verifyAsync(token, { publicKey: this.publicKey })\n                .then((response) => resolve(response))\n                .catch((err) => reject(err));\n        });\n    }\n\n    decode(token: string) {\n        return this.jwtService.decode(token);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseContext.html":{"url":"interfaces/BaseContext.html","title":"interface - BaseContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/stateMachine.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apimachine\n                                        \n                                \n                                \n                                        \n                                            busresponse\n                                        \n                                \n                                \n                                        \n                                            errorresponse\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            namespace\n                                        \n                                \n                                \n                                        \n                                            notChild\n                                        \n                                \n                                \n                                        \n                                            onlyMachine\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            outresponse\n                                        \n                                \n                                \n                                        \n                                            replaceScript\n                                        \n                                \n                                \n                                        \n                                            script\n                                        \n                                \n                                \n                                        \n                                            stdin\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apimachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apimachine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        busresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        busresponse:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notChild\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notChild:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onlyMachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onlyMachine:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         StartOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StartOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replaceScript\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replaceScript:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        script\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        script:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stdin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stdin:     WriteStream\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WriteStream\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { WriteStream } from 'fs';\nimport { StartOptions } from 'pm2';\nimport { Interpreter, MachineConfig, StateMachine } from 'xstate';\nimport { OnOptions, OptionTypes, StateOptions } from '.';\n\nexport type ServiceInterpreter = Interpreter;\nexport type ServiceMachine = StateMachine;\nexport type ServiceMachineConfig = MachineConfig;\n\nexport type ServiceContext = BaseContext & ContextChildren;\n\ninterface BaseContext {\n    name: string;\n    script: string;\n    notChild: boolean;\n    options: StartOptions;\n    namespace: 'scidap-satellite';\n    replaceScript: boolean;\n    onlyMachine: boolean;\n    apimachine: string;\n    outresponse: string;\n    errorresponse: string;\n    stdin: WriteStream;\n    busresponse: (args: any) => void;\n}\n\ninterface ContextChildren {\n    [key: string]: Interpreter;\n}\n\nexport type ServiceEvent =\n    | { type: 'ERROR' }\n    | { type: 'RESTART' }\n    | { type: 'STOPPED' }\n    | { type: 'STARTED' }\n    | { type: 'PARENT_ONLINE' }\n    | { type: string };\n\nexport type ServiceState =\n    | {\n          value: 'offline';\n          context: ServiceContext;\n      }\n    | {\n          value: 'ready';\n          context: ServiceContext;\n      }\n    | {\n          value: 'online';\n          context: ServiceContext;\n      }\n    | {\n          value: 'restarting';\n          context: ServiceContext;\n      }\n    | {\n          value: 'error';\n          context: ServiceContext;\n      };\n\nexport type ServiceStateValues = 'offline' | 'ready' | 'online' | 'restarting' | 'error';\n\nexport interface DefaultMachineConfig {\n    id: string;\n    initial: string;\n    states: {\n        [key: string]: StateOptions;\n    };\n    on: {\n        [key: string]: OnOptions;\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseModuleInterface.html":{"url":"interfaces/BaseModuleInterface.html","title":"interface - BaseModuleInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseModuleInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/satellite.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getFile\n                                    \n                                \n                                \n                                    \n                                        getInfo\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFile\n                        \n                    \n                \n            \n            \n                \ngetFile(fileUrl: UrlWithStringQuery, userId?: string, sampleId?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/satellite.interface.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileUrl\n                                    \n                                            UrlWithStringQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    sampleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FileData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInfo\n                        \n                    \n                \n            \n            \n                \ngetInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/satellite.interface.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UrlWithStringQuery } from 'url';\n\nexport interface ProcessedData {\n    cwlFile?: string;\n    sample?: any;\n    taskId: string;\n    dagId?: string;\n    downloads?: any[];\n}\n\nexport interface BaseModuleInterface {\n    getInfo(): {\n        moduleId: string;\n        caption: string;\n        type: string;\n    };\n\n    getFile(fileUrl: UrlWithStringQuery, userId?: string, sampleId?: string): FileData;\n}\n\nexport interface Info {\n    moduleId: string;\n    caption?: string;\n    type?: string;\n    mainUrl?: string;\n    loginUrl?: string;\n    viewListUrl?: string;\n    downloadUrl?: string;\n    private_key?: string;\n    private_iv?: string;\n    encryptKey?: string;\n    token?: string;\n    protocol?: string;\n    collection?: any;\n    publication?: string;\n    refreshSessionInterval?: number;\n}\n\nexport interface FileData {\n    url: string;\n    basename: string;\n    header: string;\n}\n\nexport interface DownloadObject {\n    uri: string;\n    path: string;\n    header: string;\n    sampleId: string;\n    projectId: string;\n    userId: string;\n    fileId: string;\n    inputKey?: string;\n    token: string;\n    downloaded: boolean;\n    taskId: string;\n    fileName: string;\n    gid?: string;\n}\n\nexport interface AriaDownloadObject extends DownloadObject {\n    gid: string;\n}\n\nexport interface DownloadResults {\n    status: string;\n    fileId?: string;\n    taskId?: string;\n    progress?: string;\n    error?: boolean;\n    path?: string;\n    size?: number;\n    message?: string;\n    sampleId?: string;\n}\n\nexport interface Aria2cProgressReport {\n    status: string;\n    completedLength: number;\n    totalLength: number;\n    files: AriaFileInfo[];\n}\n\nexport interface MergedDownloadObject {\n    aria2: Aria2cProgressReport;\n    data: AriaDownloadObject;\n}\n\nexport interface AriaFileInfo {\n    path: string;\n    uris: {\n        uri: string;\n    }[];\n}\nexport interface AirflowReportToAPI {\n    state: string;\n    dagId: string;\n    runId: string;\n    progress: number;\n    error: string;\n}\n\nexport interface AirflowSuccessToAPI {\n    dagId: string;\n    runId: string;\n    progress: number;\n    results: any;\n}\n\nexport interface SatelliteJWT {\n    userId: string;\n    iat: number; //in seconds\n    exp: number; //in seconds\n    aud: string; //satellite id\n    sub: string; //satellite\n}\n\nexport interface DownloadFailed {\n    message: string;\n    sampleId: string;\n    taskId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommandService.html":{"url":"injectables/CommandService.html","title":"injectable - CommandService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommandService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/command.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                forMachine\n                            \n                            \n                                    Public\n                                    Async\n                                forTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_pm2Service: Pm2Service)\n                    \n                \n                        \n                            \n                                Defined in src/command.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _pm2Service\n                                                  \n                                                        \n                                                                        Pm2Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        forMachine\n                        \n                    \n                \n            \n            \n                \n                    \n                    forMachine(id: number, machine: ServiceInterpreter, command: ServiceCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/command.service.ts:21\n                \n            \n\n\n            \n                \n                    Send a command to a Machine\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Process Id\n\n                                    \n                                \n                                \n                                    machine\n                                    \n                                                ServiceInterpreter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Machine to send task to\n\n                                    \n                                \n                                \n                                    command\n                                    \n                                                ServiceCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Command to be executed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise after the command has been sent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        forTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    forTask(id: string, command: ServiceCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/command.service.ts:72\n                \n            \n\n\n            \n                \n                    Send a command to a Task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Process Id\n\n                                    \n                                \n                                \n                                    command\n                                    \n                                                ServiceCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Command to be executed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise after the command has been sent\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { promises as fsPromises } from 'fs';\n\nimport { SatelliteTask, ServiceCommand, ServiceInterpreter } from './interfaces';\nimport Log from './lib/logger';\nimport { randomName } from './lib/utilities';\nimport { Pm2Service } from './pm2/pm2.service';\n\n@Injectable()\nexport class CommandService {\n    constructor(private _pm2Service: Pm2Service) {}\n    /**\n     * Send a command to a Machine\n     * @param id Process Id\n     * @param machine Machine to send task to\n     * @param command Command to be executed\n     * @returns A Promise after the command has been sent\n     */\n    public async forMachine(id: number, machine: ServiceInterpreter, command: ServiceCommand): Promise {\n        if (command.bus) {\n            try {\n                await this._pm2Service.sendPm2Bus(id, command.bus);\n            } catch (err) {\n                Log.error(`Failed to send command to ${command.target} through bus: ${err}`);\n            }\n        }\n        if (command.stdin) {\n            for (const line of command.stdin) {\n                try {\n                    await this._pm2Service.sendStdin(id, line);\n                } catch (err) {\n                    Log.error(`Failed to send command to ${command.target} through stdin: ${err}`);\n                    Log.error(line);\n                }\n            }\n        }\n        // If there is a command to send to a machine\n        if (command.command) {\n            // Get a list of all of the possible on events for the target state machine\n            //  This isn't strictly nessecary but without it, if you send an event that\n            //  does not match one of these, it will just fail silently\n            const onList = new Set();\n            const currConfig = machine.machine.config;\n            // Find all the global on events for this machine\n            Object.keys(currConfig.on).forEach((k) => onList.add(k));\n            // Find all on events for every state\n            //  We don't want to find just the active state on events because the state machine\n            //  remembers events that don't apply and applies them when in the correct state\n            Object.keys(currConfig.states).forEach((k) => {\n                const s = currConfig.states[k];\n                if (s.on) {\n                    Object.keys(s.on).forEach((k) => onList.add(k));\n                }\n            });\n            if (!onList.has(command.command)) {\n                Log.error(`${command.target} does not have a command ${command.command}`);\n                Log.debug('Command List:', [...onList].join(', '));\n            }\n            await machine.send({ type: command.command });\n        }\n        return true;\n    }\n\n    /**\n     * Send a command to a Task\n     * @param id Process Id\n     * @param command Command to be executed\n     * @returns A Promise after the command has been sent\n     */\n    public async forTask(id: string, command: ServiceCommand): Promise {\n        Log.info(`Sending command to ${command.target}`);\n        if (command.bus) {\n            try {\n                await this._pm2Service.sendPm2Bus(id, command.bus);\n            } catch (err) {\n                Log.error(`Failed to send command to ${command.target} through bus: ${err}`);\n            }\n        }\n        if (command.stdin) {\n            try {\n                await this._pm2Service.sendStdin(id, command.stdin);\n            } catch (err) {\n                Log.error(`Failed to send command to ${command.target} through stdin: ${err}`);\n            }\n        }\n        return true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContextChildren.html":{"url":"interfaces/ContextChildren.html","title":"interface - ContextChildren","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContextChildren\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/stateMachine.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    Interpreter\n\n                    \n                \n                        \n                            \n                                Defined in src/interfaces/stateMachine.interface.ts:27\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { WriteStream } from 'fs';\nimport { StartOptions } from 'pm2';\nimport { Interpreter, MachineConfig, StateMachine } from 'xstate';\nimport { OnOptions, OptionTypes, StateOptions } from '.';\n\nexport type ServiceInterpreter = Interpreter;\nexport type ServiceMachine = StateMachine;\nexport type ServiceMachineConfig = MachineConfig;\n\nexport type ServiceContext = BaseContext & ContextChildren;\n\ninterface BaseContext {\n    name: string;\n    script: string;\n    notChild: boolean;\n    options: StartOptions;\n    namespace: 'scidap-satellite';\n    replaceScript: boolean;\n    onlyMachine: boolean;\n    apimachine: string;\n    outresponse: string;\n    errorresponse: string;\n    stdin: WriteStream;\n    busresponse: (args: any) => void;\n}\n\ninterface ContextChildren {\n    [key: string]: Interpreter;\n}\n\nexport type ServiceEvent =\n    | { type: 'ERROR' }\n    | { type: 'RESTART' }\n    | { type: 'STOPPED' }\n    | { type: 'STARTED' }\n    | { type: 'PARENT_ONLINE' }\n    | { type: string };\n\nexport type ServiceState =\n    | {\n          value: 'offline';\n          context: ServiceContext;\n      }\n    | {\n          value: 'ready';\n          context: ServiceContext;\n      }\n    | {\n          value: 'online';\n          context: ServiceContext;\n      }\n    | {\n          value: 'restarting';\n          context: ServiceContext;\n      }\n    | {\n          value: 'error';\n          context: ServiceContext;\n      };\n\nexport type ServiceStateValues = 'offline' | 'ready' | 'online' | 'restarting' | 'error';\n\nexport interface DefaultMachineConfig {\n    id: string;\n    initial: string;\n    states: {\n        [key: string]: StateOptions;\n    };\n    on: {\n        [key: string]: OnOptions;\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomPm2StartOptions.html":{"url":"interfaces/CustomPm2StartOptions.html","title":"interface - CustomPm2StartOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomPm2StartOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        StartOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            args\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cron\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disable_source_map_support\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            execute_command\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            interpreter_args\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            keepscript\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max_memory_restart\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source_map_support\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            watch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            watch_array\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            write\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        args\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        args:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cron\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cron:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disable_source_map_support\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disable_source_map_support:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        execute_command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        execute_command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interpreter_args\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interpreter_args:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepscript\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepscript:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_memory_restart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_memory_restart:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source_map_support\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source_map_support:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch_array\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watch_array:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        write\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        write:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultMachineConfig.html":{"url":"interfaces/DefaultMachineConfig.html","title":"interface - DefaultMachineConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultMachineConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/stateMachine.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            initial\n                                        \n                                \n                                \n                                        \n                                            on\n                                        \n                                \n                                \n                                        \n                                            states\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        on\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        on:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        states\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        states:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { WriteStream } from 'fs';\nimport { StartOptions } from 'pm2';\nimport { Interpreter, MachineConfig, StateMachine } from 'xstate';\nimport { OnOptions, OptionTypes, StateOptions } from '.';\n\nexport type ServiceInterpreter = Interpreter;\nexport type ServiceMachine = StateMachine;\nexport type ServiceMachineConfig = MachineConfig;\n\nexport type ServiceContext = BaseContext & ContextChildren;\n\ninterface BaseContext {\n    name: string;\n    script: string;\n    notChild: boolean;\n    options: StartOptions;\n    namespace: 'scidap-satellite';\n    replaceScript: boolean;\n    onlyMachine: boolean;\n    apimachine: string;\n    outresponse: string;\n    errorresponse: string;\n    stdin: WriteStream;\n    busresponse: (args: any) => void;\n}\n\ninterface ContextChildren {\n    [key: string]: Interpreter;\n}\n\nexport type ServiceEvent =\n    | { type: 'ERROR' }\n    | { type: 'RESTART' }\n    | { type: 'STOPPED' }\n    | { type: 'STARTED' }\n    | { type: 'PARENT_ONLINE' }\n    | { type: string };\n\nexport type ServiceState =\n    | {\n          value: 'offline';\n          context: ServiceContext;\n      }\n    | {\n          value: 'ready';\n          context: ServiceContext;\n      }\n    | {\n          value: 'online';\n          context: ServiceContext;\n      }\n    | {\n          value: 'restarting';\n          context: ServiceContext;\n      }\n    | {\n          value: 'error';\n          context: ServiceContext;\n      };\n\nexport type ServiceStateValues = 'offline' | 'ready' | 'online' | 'restarting' | 'error';\n\nexport interface DefaultMachineConfig {\n    id: string;\n    initial: string;\n    states: {\n        [key: string]: StateOptions;\n    };\n    on: {\n        [key: string]: OnOptions;\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DependencyTree.html":{"url":"interfaces/DependencyTree.html","title":"interface - DependencyTree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DependencyTree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apimachine\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            busresponse\n                                        \n                                \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorresponse\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onlymachine\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            outresponse\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statemachine\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apimachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apimachine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        busresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        busresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         DependencyTree[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DependencyTree[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onlymachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onlymachine:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         CustomPm2StartOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CustomPm2StartOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statemachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statemachine:         UnProcessedStateMachineOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UnProcessedStateMachineOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DownloadFailed.html":{"url":"interfaces/DownloadFailed.html","title":"interface - DownloadFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DownloadFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/satellite.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            sampleId\n                                        \n                                \n                                \n                                        \n                                            taskId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taskId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taskId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UrlWithStringQuery } from 'url';\n\nexport interface ProcessedData {\n    cwlFile?: string;\n    sample?: any;\n    taskId: string;\n    dagId?: string;\n    downloads?: any[];\n}\n\nexport interface BaseModuleInterface {\n    getInfo(): {\n        moduleId: string;\n        caption: string;\n        type: string;\n    };\n\n    getFile(fileUrl: UrlWithStringQuery, userId?: string, sampleId?: string): FileData;\n}\n\nexport interface Info {\n    moduleId: string;\n    caption?: string;\n    type?: string;\n    mainUrl?: string;\n    loginUrl?: string;\n    viewListUrl?: string;\n    downloadUrl?: string;\n    private_key?: string;\n    private_iv?: string;\n    encryptKey?: string;\n    token?: string;\n    protocol?: string;\n    collection?: any;\n    publication?: string;\n    refreshSessionInterval?: number;\n}\n\nexport interface FileData {\n    url: string;\n    basename: string;\n    header: string;\n}\n\nexport interface DownloadObject {\n    uri: string;\n    path: string;\n    header: string;\n    sampleId: string;\n    projectId: string;\n    userId: string;\n    fileId: string;\n    inputKey?: string;\n    token: string;\n    downloaded: boolean;\n    taskId: string;\n    fileName: string;\n    gid?: string;\n}\n\nexport interface AriaDownloadObject extends DownloadObject {\n    gid: string;\n}\n\nexport interface DownloadResults {\n    status: string;\n    fileId?: string;\n    taskId?: string;\n    progress?: string;\n    error?: boolean;\n    path?: string;\n    size?: number;\n    message?: string;\n    sampleId?: string;\n}\n\nexport interface Aria2cProgressReport {\n    status: string;\n    completedLength: number;\n    totalLength: number;\n    files: AriaFileInfo[];\n}\n\nexport interface MergedDownloadObject {\n    aria2: Aria2cProgressReport;\n    data: AriaDownloadObject;\n}\n\nexport interface AriaFileInfo {\n    path: string;\n    uris: {\n        uri: string;\n    }[];\n}\nexport interface AirflowReportToAPI {\n    state: string;\n    dagId: string;\n    runId: string;\n    progress: number;\n    error: string;\n}\n\nexport interface AirflowSuccessToAPI {\n    dagId: string;\n    runId: string;\n    progress: number;\n    results: any;\n}\n\nexport interface SatelliteJWT {\n    userId: string;\n    iat: number; //in seconds\n    exp: number; //in seconds\n    aud: string; //satellite id\n    sub: string; //satellite\n}\n\nexport interface DownloadFailed {\n    message: string;\n    sampleId: string;\n    taskId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DownloadObject.html":{"url":"interfaces/DownloadObject.html","title":"interface - DownloadObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DownloadObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/satellite.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            downloaded\n                                        \n                                \n                                \n                                        \n                                            fileId\n                                        \n                                \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gid\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            inputKey\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            sampleId\n                                        \n                                \n                                \n                                        \n                                            taskId\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        downloaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        downloaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inputKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taskId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taskId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UrlWithStringQuery } from 'url';\n\nexport interface ProcessedData {\n    cwlFile?: string;\n    sample?: any;\n    taskId: string;\n    dagId?: string;\n    downloads?: any[];\n}\n\nexport interface BaseModuleInterface {\n    getInfo(): {\n        moduleId: string;\n        caption: string;\n        type: string;\n    };\n\n    getFile(fileUrl: UrlWithStringQuery, userId?: string, sampleId?: string): FileData;\n}\n\nexport interface Info {\n    moduleId: string;\n    caption?: string;\n    type?: string;\n    mainUrl?: string;\n    loginUrl?: string;\n    viewListUrl?: string;\n    downloadUrl?: string;\n    private_key?: string;\n    private_iv?: string;\n    encryptKey?: string;\n    token?: string;\n    protocol?: string;\n    collection?: any;\n    publication?: string;\n    refreshSessionInterval?: number;\n}\n\nexport interface FileData {\n    url: string;\n    basename: string;\n    header: string;\n}\n\nexport interface DownloadObject {\n    uri: string;\n    path: string;\n    header: string;\n    sampleId: string;\n    projectId: string;\n    userId: string;\n    fileId: string;\n    inputKey?: string;\n    token: string;\n    downloaded: boolean;\n    taskId: string;\n    fileName: string;\n    gid?: string;\n}\n\nexport interface AriaDownloadObject extends DownloadObject {\n    gid: string;\n}\n\nexport interface DownloadResults {\n    status: string;\n    fileId?: string;\n    taskId?: string;\n    progress?: string;\n    error?: boolean;\n    path?: string;\n    size?: number;\n    message?: string;\n    sampleId?: string;\n}\n\nexport interface Aria2cProgressReport {\n    status: string;\n    completedLength: number;\n    totalLength: number;\n    files: AriaFileInfo[];\n}\n\nexport interface MergedDownloadObject {\n    aria2: Aria2cProgressReport;\n    data: AriaDownloadObject;\n}\n\nexport interface AriaFileInfo {\n    path: string;\n    uris: {\n        uri: string;\n    }[];\n}\nexport interface AirflowReportToAPI {\n    state: string;\n    dagId: string;\n    runId: string;\n    progress: number;\n    error: string;\n}\n\nexport interface AirflowSuccessToAPI {\n    dagId: string;\n    runId: string;\n    progress: number;\n    results: any;\n}\n\nexport interface SatelliteJWT {\n    userId: string;\n    iat: number; //in seconds\n    exp: number; //in seconds\n    aud: string; //satellite id\n    sub: string; //satellite\n}\n\nexport interface DownloadFailed {\n    message: string;\n    sampleId: string;\n    taskId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DownloadResults.html":{"url":"interfaces/DownloadResults.html","title":"interface - DownloadResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DownloadResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/satellite.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            progress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sampleId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            taskId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        progress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taskId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taskId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UrlWithStringQuery } from 'url';\n\nexport interface ProcessedData {\n    cwlFile?: string;\n    sample?: any;\n    taskId: string;\n    dagId?: string;\n    downloads?: any[];\n}\n\nexport interface BaseModuleInterface {\n    getInfo(): {\n        moduleId: string;\n        caption: string;\n        type: string;\n    };\n\n    getFile(fileUrl: UrlWithStringQuery, userId?: string, sampleId?: string): FileData;\n}\n\nexport interface Info {\n    moduleId: string;\n    caption?: string;\n    type?: string;\n    mainUrl?: string;\n    loginUrl?: string;\n    viewListUrl?: string;\n    downloadUrl?: string;\n    private_key?: string;\n    private_iv?: string;\n    encryptKey?: string;\n    token?: string;\n    protocol?: string;\n    collection?: any;\n    publication?: string;\n    refreshSessionInterval?: number;\n}\n\nexport interface FileData {\n    url: string;\n    basename: string;\n    header: string;\n}\n\nexport interface DownloadObject {\n    uri: string;\n    path: string;\n    header: string;\n    sampleId: string;\n    projectId: string;\n    userId: string;\n    fileId: string;\n    inputKey?: string;\n    token: string;\n    downloaded: boolean;\n    taskId: string;\n    fileName: string;\n    gid?: string;\n}\n\nexport interface AriaDownloadObject extends DownloadObject {\n    gid: string;\n}\n\nexport interface DownloadResults {\n    status: string;\n    fileId?: string;\n    taskId?: string;\n    progress?: string;\n    error?: boolean;\n    path?: string;\n    size?: number;\n    message?: string;\n    sampleId?: string;\n}\n\nexport interface Aria2cProgressReport {\n    status: string;\n    completedLength: number;\n    totalLength: number;\n    files: AriaFileInfo[];\n}\n\nexport interface MergedDownloadObject {\n    aria2: Aria2cProgressReport;\n    data: AriaDownloadObject;\n}\n\nexport interface AriaFileInfo {\n    path: string;\n    uris: {\n        uri: string;\n    }[];\n}\nexport interface AirflowReportToAPI {\n    state: string;\n    dagId: string;\n    runId: string;\n    progress: number;\n    error: string;\n}\n\nexport interface AirflowSuccessToAPI {\n    dagId: string;\n    runId: string;\n    progress: number;\n    results: any;\n}\n\nexport interface SatelliteJWT {\n    userId: string;\n    iat: number; //in seconds\n    exp: number; //in seconds\n    aud: string; //satellite id\n    sub: string; //satellite\n}\n\nexport interface DownloadFailed {\n    message: string;\n    sampleId: string;\n    taskId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileData.html":{"url":"interfaces/FileData.html","title":"interface - FileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/satellite.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            basename\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        basename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        basename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UrlWithStringQuery } from 'url';\n\nexport interface ProcessedData {\n    cwlFile?: string;\n    sample?: any;\n    taskId: string;\n    dagId?: string;\n    downloads?: any[];\n}\n\nexport interface BaseModuleInterface {\n    getInfo(): {\n        moduleId: string;\n        caption: string;\n        type: string;\n    };\n\n    getFile(fileUrl: UrlWithStringQuery, userId?: string, sampleId?: string): FileData;\n}\n\nexport interface Info {\n    moduleId: string;\n    caption?: string;\n    type?: string;\n    mainUrl?: string;\n    loginUrl?: string;\n    viewListUrl?: string;\n    downloadUrl?: string;\n    private_key?: string;\n    private_iv?: string;\n    encryptKey?: string;\n    token?: string;\n    protocol?: string;\n    collection?: any;\n    publication?: string;\n    refreshSessionInterval?: number;\n}\n\nexport interface FileData {\n    url: string;\n    basename: string;\n    header: string;\n}\n\nexport interface DownloadObject {\n    uri: string;\n    path: string;\n    header: string;\n    sampleId: string;\n    projectId: string;\n    userId: string;\n    fileId: string;\n    inputKey?: string;\n    token: string;\n    downloaded: boolean;\n    taskId: string;\n    fileName: string;\n    gid?: string;\n}\n\nexport interface AriaDownloadObject extends DownloadObject {\n    gid: string;\n}\n\nexport interface DownloadResults {\n    status: string;\n    fileId?: string;\n    taskId?: string;\n    progress?: string;\n    error?: boolean;\n    path?: string;\n    size?: number;\n    message?: string;\n    sampleId?: string;\n}\n\nexport interface Aria2cProgressReport {\n    status: string;\n    completedLength: number;\n    totalLength: number;\n    files: AriaFileInfo[];\n}\n\nexport interface MergedDownloadObject {\n    aria2: Aria2cProgressReport;\n    data: AriaDownloadObject;\n}\n\nexport interface AriaFileInfo {\n    path: string;\n    uris: {\n        uri: string;\n    }[];\n}\nexport interface AirflowReportToAPI {\n    state: string;\n    dagId: string;\n    runId: string;\n    progress: number;\n    error: string;\n}\n\nexport interface AirflowSuccessToAPI {\n    dagId: string;\n    runId: string;\n    progress: number;\n    results: any;\n}\n\nexport interface SatelliteJWT {\n    userId: string;\n    iat: number; //in seconds\n    exp: number; //in seconds\n    aud: string; //satellite id\n    sub: string; //satellite\n}\n\nexport interface DownloadFailed {\n    message: string;\n    sampleId: string;\n    taskId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileFromClient.html":{"url":"interfaces/FileFromClient.html","title":"interface - FileFromClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileFromClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/interfaces/apiSync.interface.ts:138\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Info.html":{"url":"interfaces/Info.html","title":"interface - Info","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Info\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/satellite.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            caption\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            collection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            downloadUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            encryptKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loginUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mainUrl\n                                        \n                                \n                                \n                                        \n                                            moduleId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            private_iv\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            private_key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            protocol\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            publication\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            refreshSessionInterval\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            viewListUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collection:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        downloadUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encryptKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        encryptKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loginUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loginUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private_iv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private_iv:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private_key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protocol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        protocol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publication\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        publication:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshSessionInterval\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshSessionInterval:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewListUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewListUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UrlWithStringQuery } from 'url';\n\nexport interface ProcessedData {\n    cwlFile?: string;\n    sample?: any;\n    taskId: string;\n    dagId?: string;\n    downloads?: any[];\n}\n\nexport interface BaseModuleInterface {\n    getInfo(): {\n        moduleId: string;\n        caption: string;\n        type: string;\n    };\n\n    getFile(fileUrl: UrlWithStringQuery, userId?: string, sampleId?: string): FileData;\n}\n\nexport interface Info {\n    moduleId: string;\n    caption?: string;\n    type?: string;\n    mainUrl?: string;\n    loginUrl?: string;\n    viewListUrl?: string;\n    downloadUrl?: string;\n    private_key?: string;\n    private_iv?: string;\n    encryptKey?: string;\n    token?: string;\n    protocol?: string;\n    collection?: any;\n    publication?: string;\n    refreshSessionInterval?: number;\n}\n\nexport interface FileData {\n    url: string;\n    basename: string;\n    header: string;\n}\n\nexport interface DownloadObject {\n    uri: string;\n    path: string;\n    header: string;\n    sampleId: string;\n    projectId: string;\n    userId: string;\n    fileId: string;\n    inputKey?: string;\n    token: string;\n    downloaded: boolean;\n    taskId: string;\n    fileName: string;\n    gid?: string;\n}\n\nexport interface AriaDownloadObject extends DownloadObject {\n    gid: string;\n}\n\nexport interface DownloadResults {\n    status: string;\n    fileId?: string;\n    taskId?: string;\n    progress?: string;\n    error?: boolean;\n    path?: string;\n    size?: number;\n    message?: string;\n    sampleId?: string;\n}\n\nexport interface Aria2cProgressReport {\n    status: string;\n    completedLength: number;\n    totalLength: number;\n    files: AriaFileInfo[];\n}\n\nexport interface MergedDownloadObject {\n    aria2: Aria2cProgressReport;\n    data: AriaDownloadObject;\n}\n\nexport interface AriaFileInfo {\n    path: string;\n    uris: {\n        uri: string;\n    }[];\n}\nexport interface AirflowReportToAPI {\n    state: string;\n    dagId: string;\n    runId: string;\n    progress: number;\n    error: string;\n}\n\nexport interface AirflowSuccessToAPI {\n    dagId: string;\n    runId: string;\n    progress: number;\n    results: any;\n}\n\nexport interface SatelliteJWT {\n    userId: string;\n    iat: number; //in seconds\n    exp: number; //in seconds\n    aud: string; //satellite id\n    sub: string; //satellite\n}\n\nexport interface DownloadFailed {\n    message: string;\n    sampleId: string;\n    taskId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MergedDownloadObject.html":{"url":"interfaces/MergedDownloadObject.html","title":"interface - MergedDownloadObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MergedDownloadObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/satellite.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aria2\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aria2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aria2:         Aria2cProgressReport\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Aria2cProgressReport\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         AriaDownloadObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AriaDownloadObject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UrlWithStringQuery } from 'url';\n\nexport interface ProcessedData {\n    cwlFile?: string;\n    sample?: any;\n    taskId: string;\n    dagId?: string;\n    downloads?: any[];\n}\n\nexport interface BaseModuleInterface {\n    getInfo(): {\n        moduleId: string;\n        caption: string;\n        type: string;\n    };\n\n    getFile(fileUrl: UrlWithStringQuery, userId?: string, sampleId?: string): FileData;\n}\n\nexport interface Info {\n    moduleId: string;\n    caption?: string;\n    type?: string;\n    mainUrl?: string;\n    loginUrl?: string;\n    viewListUrl?: string;\n    downloadUrl?: string;\n    private_key?: string;\n    private_iv?: string;\n    encryptKey?: string;\n    token?: string;\n    protocol?: string;\n    collection?: any;\n    publication?: string;\n    refreshSessionInterval?: number;\n}\n\nexport interface FileData {\n    url: string;\n    basename: string;\n    header: string;\n}\n\nexport interface DownloadObject {\n    uri: string;\n    path: string;\n    header: string;\n    sampleId: string;\n    projectId: string;\n    userId: string;\n    fileId: string;\n    inputKey?: string;\n    token: string;\n    downloaded: boolean;\n    taskId: string;\n    fileName: string;\n    gid?: string;\n}\n\nexport interface AriaDownloadObject extends DownloadObject {\n    gid: string;\n}\n\nexport interface DownloadResults {\n    status: string;\n    fileId?: string;\n    taskId?: string;\n    progress?: string;\n    error?: boolean;\n    path?: string;\n    size?: number;\n    message?: string;\n    sampleId?: string;\n}\n\nexport interface Aria2cProgressReport {\n    status: string;\n    completedLength: number;\n    totalLength: number;\n    files: AriaFileInfo[];\n}\n\nexport interface MergedDownloadObject {\n    aria2: Aria2cProgressReport;\n    data: AriaDownloadObject;\n}\n\nexport interface AriaFileInfo {\n    path: string;\n    uris: {\n        uri: string;\n    }[];\n}\nexport interface AirflowReportToAPI {\n    state: string;\n    dagId: string;\n    runId: string;\n    progress: number;\n    error: string;\n}\n\nexport interface AirflowSuccessToAPI {\n    dagId: string;\n    runId: string;\n    progress: number;\n    results: any;\n}\n\nexport interface SatelliteJWT {\n    userId: string;\n    iat: number; //in seconds\n    exp: number; //in seconds\n    aud: string; //satellite id\n    sub: string; //satellite\n}\n\nexport interface DownloadFailed {\n    message: string;\n    sampleId: string;\n    taskId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OnOptions.html":{"url":"interfaces/OnOptions.html","title":"interface - OnOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OnOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cond\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cond\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cond:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OptionTypes.html":{"url":"interfaces/OptionTypes.html","title":"interface - OptionTypes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OptionTypes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        StateOptions\n\n                    \n                \n                        \n                            \n                                Defined in src/interfaces/apiSync.interface.ts:57\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PM2BusPacket.html":{"url":"interfaces/PM2BusPacket.html","title":"interface - PM2BusPacket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PM2BusPacket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/pm2.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            at\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            process\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        process\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        process:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReadStream, WriteStream } from 'fs';\nimport pm2Types from 'pm2';\n\nexport interface PM2_Service {\n    pm2_env: pm2Types.Proc;\n    // stdout: ReadStream;\n    // stderr: ReadStream;\n    // stdin: WriteStream;\n}\n\nexport interface PM2BusPacket {\n    data: string;\n    at: number;\n    process: {\n        namespace: string;\n        name: string;\n        pm_id: number;\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PM2_Service.html":{"url":"interfaces/PM2_Service.html","title":"interface - PM2_Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PM2_Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/pm2.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            pm2_env\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pm2_env\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pm2_env:     pm2Types.Proc\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     pm2Types.Proc\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReadStream, WriteStream } from 'fs';\nimport pm2Types from 'pm2';\n\nexport interface PM2_Service {\n    pm2_env: pm2Types.Proc;\n    // stdout: ReadStream;\n    // stderr: ReadStream;\n    // stdin: WriteStream;\n}\n\nexport interface PM2BusPacket {\n    data: string;\n    at: number;\n    process: {\n        namespace: string;\n        name: string;\n        pm_id: number;\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Pm2Module.html":{"url":"modules/Pm2Module.html","title":"module - Pm2Module","body":"\n                   \n\n\n\n\n    Modules\n    Pm2Module\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_Pm2Module\n\n\n\ncluster_Pm2Module_providers\n\n\n\ncluster_Pm2Module_exports\n\n\n\n\nPm2Service \n\nPm2Service \n\n\n\nPm2Module\n\nPm2Module\n\nPm2Service  -->\n\nPm2Module->Pm2Service \n\n\n\n\n\nPm2Service\n\nPm2Service\n\nPm2Module -->\n\nPm2Service->Pm2Module\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pm2/pm2.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Pm2Service\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Pm2Service\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\n\nimport { AppModule } from '../app.module';\nimport { Pm2Service } from './pm2.service';\n\n@Module({\n    imports: [forwardRef(() => AppModule)],\n    providers: [Pm2Service],\n    exports: [Pm2Service],\n})\nexport class Pm2Module {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Pm2Service.html":{"url":"injectables/Pm2Service.html","title":"injectable - Pm2Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Pm2Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pm2/pm2.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _restartService\n                            \n                            \n                                    Private\n                                    Async\n                                _startService\n                            \n                            \n                                    Private\n                                    Async\n                                _stopService\n                            \n                            \n                                    Private\n                                _testOptions\n                            \n                            \n                                    Public\n                                    Async\n                                killOneInstance\n                            \n                            \n                                    Public\n                                    Async\n                                killPm2Instances\n                            \n                            \n                                    Public\n                                parseOptions\n                            \n                            \n                                    Public\n                                    Async\n                                runCommand\n                            \n                            \n                                    Public\n                                    Async\n                                sendPm2Bus\n                            \n                            \n                                    Public\n                                    Async\n                                sendStdin\n                            \n                            \n                                    Public\n                                setupProcessListener\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_appService: AppService, _configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/pm2/pm2.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        _restartService\n                        \n                    \n                \n            \n            \n                \n                    \n                    _restartService(options: StartOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/pm2/pm2.service.ts:269\n                \n            \n\n\n            \n                \n                    Restarts a service by Name and then sends message to state machine\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                StartOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pm2 Start Options (only the name is relevant here)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Success or Error\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        _startService\n                        \n                    \n                \n            \n            \n                \n                    \n                    _startService(options: StartOptions, machine: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/pm2/pm2.service.ts:151\n                \n            \n\n\n            \n                \n                    Start a task with pm2\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                StartOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        pm2 Start Options\n\n                                    \n                                \n                                \n                                    machine\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        If True we are running a FSM otherwise it is a task\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        pm_id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        _stopService\n                        \n                    \n                \n            \n            \n                \n                    \n                    _stopService(options: StartOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/pm2/pm2.service.ts:229\n                \n            \n\n\n            \n                \n                    Stops a service by Name and then sends message to state machine\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                StartOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pm2 Start Options (only the name is relevant here)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Success or Error\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _testOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    _testOptions(options: StartOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/pm2/pm2.service.ts:361\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                StartOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         StartOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        killOneInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    killOneInstance(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/pm2/pm2.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        killPm2Instances\n                        \n                    \n                \n            \n            \n                \n                    \n                    killPm2Instances()\n                \n            \n\n\n            \n                \n                    Defined in src/pm2/pm2.service.ts:24\n                \n            \n\n\n            \n                \n                    Kills all of the pm2 instances that match the namespace\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        a promise that resolves true or throws an error\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        parseOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseOptions(options: CustomPm2StartOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/pm2/pm2.service.ts:71\n                \n            \n\n\n            \n                \n                    Change the options from what they have to be to go through gRPC protocol\n to the correct PM2 Start options\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CustomPm2StartOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GRPC Start Options that need to be parsed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         StartOptions\n\n                    \n                    \n                        PM2 Start Options\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        runCommand\n                        \n                    \n                \n            \n            \n                \n                    \n                    runCommand(command: string, options: CustomPm2StartOptions, machine?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/pm2/pm2.service.ts:110\n                \n            \n\n\n            \n                \n                    Run a command through pm2\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        pm2 command to run\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                CustomPm2StartOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pm2 Configs\n\n                                    \n                                \n                                \n                                    machine\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        true if we have a machine for this instance of pm2\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        sendPm2Bus\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPm2Bus(pId: number | string, data)\n                \n            \n\n\n            \n                \n                    Defined in src/pm2/pm2.service.ts:322\n                \n            \n\n\n            \n                \n                    Promise wrapper around pm2 method to communicate to through pm2 bus\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pId\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        pm2_id to send the packet to\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information to send to the Process\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise to indicate success\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        sendStdin\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendStdin(pId: number | string, line: any)\n                \n            \n\n\n            \n                \n                    Defined in src/pm2/pm2.service.ts:345\n                \n            \n\n\n            \n                \n                    Promise wrapper around pm2 method to communicate to through stdin\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pId\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        pm2_id to send the packet to\n\n                                    \n                                \n                                \n                                    line\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise to indicate success\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setupProcessListener\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupProcessListener(packet: PM2BusPacket, sr: StreamResponse, error)\n                \n            \n\n\n            \n                \n                    Defined in src/pm2/pm2.service.ts:299\n                \n            \n\n\n            \n                \n                    Sets up how to parse PM2 Bus packets\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    packet\n                                    \n                                                PM2BusPacket\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Packet from PM2 Bus\n\n                                    \n                                \n                                \n                                    sr\n                                    \n                                                StreamResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Stream Response object that contains where Response should go\n\n                                    \n                                \n                                \n                                    error\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        If error route to error method\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { resolve } from 'path';\nimport pm2Types from 'pm2';\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst pm2: typeof pm2Types = require('pm2');\n\nimport { AppService } from '../app.service';\nimport { CustomPm2StartOptions, PM2BusPacket, PM2_Service, ServiceContext, ServiceInterpreter, StartOptions, StreamResponse } from '../interfaces';\nimport Log from '../lib/logger';\n\n@Injectable()\nexport class Pm2Service {\n    constructor(\n        @Inject(forwardRef(() => AppService))\n        private _appService: AppService,\n        private _configService: ConfigService,\n    ) {}\n    /**\n     * Kills all of the pm2 instances that match the namespace\n     * @param namespace namespace of pm2 instances to kill\n     * @returns a promise that resolves true or throws an error\n     */\n    public async killPm2Instances(): Promise {\n        const namespace = this._configService.get('namespace');\n        return await new Promise((resolve, reject) => {\n            pm2.connect((err) => {\n                if (err) reject(`Not able to connect to PM2: ${err}`);\n                pm2.list(async (err, list: any[]) => {\n                    if (err) reject(`Not able to get List: ${err}`);\n                    for (const i of list) {\n                        if (i.pm2_env.namespace.includes(namespace)) continue;\n                        await new Promise((res) => {\n                            pm2.delete(i.pm_id, (err) => {\n                                if (err) reject(`Error deleting ${i.pm2_env.name}: ${err}`);\n                                res(true);\n                            });\n                        });\n                    }\n                    Log.info(`Killed all pm2 with ${namespace} namespace`);\n                    resolve(true);\n                });\n            });\n        });\n    }\n\n    public async killOneInstance(id: number): Promise {\n        return await new Promise((resolve, reject) => {\n            pm2.connect((err) => {\n                if (err) {\n                    reject(`Not able to connect to PM2: ${err}`);\n                    return;\n                }\n                pm2.delete(id, (err) => {\n                    if (err) {\n                        reject(`Error deleting ${id}: ${err}`);\n                        return;\n                    }\n                    resolve(true);\n                });\n            });\n        });\n    }\n\n    /**\n     * Change the options from what they have to be to go through gRPC protocol\n     *  to the correct PM2 Start options\n     * @param options GRPC Start Options that need to be parsed\n     * @returns PM2 Start Options\n     */\n    public parseOptions(options: CustomPm2StartOptions): StartOptions {\n        const helper = (toParse: any) => {\n            if (Array.isArray(toParse)) {\n                return toParse.map((i) => helper(i));\n            } else if (typeof toParse === 'object') {\n                const parsedObject = {};\n                Object.keys(toParse).forEach((k) => {\n                    parsedObject[k] = helper(toParse[k]);\n                });\n                return parsedObject;\n            } else {\n                try {\n                    const parsed = JSON.parse(toParse);\n                    return parsed;\n                } catch {\n                    return toParse;\n                }\n            }\n        };\n\n        // Any key that is able to be parsed should be\n        const parsedOptions: StartOptions & { watch_array?: string[] } = helper(options);\n        // If watch_array is set replace watch with it\n        if (parsedOptions.watch_array) {\n            parsedOptions.watch = parsedOptions.watch_array;\n            delete parsedOptions.watch_array;\n        }\n        if (options.args && Array.isArray(options.args)) {\n            parsedOptions.args = options.args.join(' ');\n        }\n        return parsedOptions;\n    }\n\n    /**\n     * Run a command through pm2\n     * @param command pm2 command to run\n     * @param options Pm2 Configs\n     * @param machine true if we have a machine for this instance of pm2\n     */\n    public async runCommand(command: string, options: CustomPm2StartOptions, machine?: boolean): Promise {\n        return await new Promise(async (resolve, reject) => {\n            try {\n                Log.debug(`Attempting to run ${command} on ${options.name}`);\n                let success = false;\n                let service: PM2_Service;\n                // These line up with PM2 commands, so we could add anything else here we want\n                switch (command) {\n                    case 'start':\n                        const { started, pm2Service } = await this._startService(options, machine);\n                        if (started) {\n                            service = pm2Service || { pm2_env: null };\n                            success = true;\n                        }\n                        break;\n                    case 'stop':\n                        success = await this._stopService(options);\n                        break;\n                    case 'restart':\n                        success = await this._restartService(options);\n                        break;\n                    default:\n                        Log.error(`Unrecognized Command: ${command}`);\n                }\n                if (success) {\n                    Log.debug(`Successfully ran ${command} on ${options.name}`);\n                }\n                resolve(service);\n            } catch (err) {\n                Log.error(`Failed to ${command} ${options.name}: ${err}`);\n                reject(err);\n            }\n        });\n    }\n\n    /**\n     * Start a task with pm2\n     * @param options pm2 Start Options\n     * @param machine If True we are running a FSM otherwise it is a task\n     * @returns pm_id\n     */\n    private async _startService(options: StartOptions, machine: boolean): Promise {\n        const namespace = this._configService.get('namespace');\n        // If Machine is true we need to find the State Machine\n        let fsm: ServiceInterpreter;\n        let context: ServiceContext;\n        let combinedOptions: StartOptions;\n        if (machine) {\n            fsm = this._appService.machines[options.name].fsm;\n            context = fsm.state.context;\n            if (context.onlyMachine) {\n                Log.info(`Successfully Started ${options.name} without pm2`);\n                fsm.send('STARTED');\n                return { started: true };\n            }\n            combinedOptions = {\n                ...context.options,\n                ...options,\n                // Get the script from the state machine\n                script: context.script,\n                namespace,\n            };\n        } else {\n            combinedOptions = { ...options, namespace: namespace + '_task' };\n        }\n\n        if (process.env.API_ENV === 'test' && !combinedOptions.keepscript) {\n            combinedOptions = this._testOptions(combinedOptions);\n        }\n\n        // If only machine is set then just communicate with the state machine\n        Log.info(`Starting ${combinedOptions.name} ${machine ? 'Service' : 'Task'} with pm2`);\n\n        return new Promise((resolve, reject) => {\n            try {\n                pm2.connect((err) => {\n                    if (err) {\n                        reject(err);\n                        return;\n                    }\n                    pm2.start(combinedOptions, (err, arr) => {\n                        const services = arr as any[];\n                        try {\n                            if (err) {\n                                throw err;\n                            }\n                            // Pm2 only throws an error if it fails to work, not if the service fails to start\n                            //  So we have to check if there is a started service\n                            //  We may want to store some information from this service or check some other keys\n                            //  Services are an array and there should just be a single element if it is working\n                            if (!services.length) {\n                                if (machine) {\n                                    fsm.send('ERROR');\n                                }\n                                throw new Error(`No service started: ${combinedOptions.name}`);\n                            }\n                            const service = arr[0] as PM2_Service;\n                            Log.info(`Successfully Started ${combinedOptions.name} with id ${service.pm2_env.pm_id}: ${service.pm2_env.status}`);\n                            if (machine) {\n                                fsm.send('STARTED');\n                            }\n                            resolve({ started: true, pm2Service: service });\n                            // resolve(services[0].pm2_env.pm_id);\n                        } catch (err) {\n                            reject(err);\n                        }\n                    });\n                });\n            } catch (err) {\n                reject(new Error(`Error Starting with PM2: ${err.message}`));\n            }\n        });\n    }\n\n    /**\n     * Stops a service by Name and then sends message to state machine\n     * @param options Pm2 Start Options (only the name is relevant here)\n     * @returns Success or Error\n     */\n    private async _stopService(options: StartOptions): Promise {\n        const fsm = this._appService.machines[options.name].fsm;\n        // If only machine is set then just communicate with the state machine\n        if (fsm.state.context.onlyMachine) {\n            Log.info(`Successfully Stopped ${options.name} without pm2`);\n            fsm.send('STOPPED');\n            return;\n        }\n        Log.info(`Stopping ${options.name} Service with pm2`);\n\n        return new Promise((resolve, reject) => {\n            try {\n                pm2.connect((err) => {\n                    if (err) {\n                        reject(err);\n                        return;\n                    }\n                    pm2.stop(options.name, (err) => {\n                        if (err) {\n                            reject(err);\n                            return;\n                        }\n                        Log.info(`Successfully Stopped ${options.name}`);\n                        if (fsm.state.value !== 'error') {\n                            fsm.send('STOPPED');\n                        }\n                        resolve(true);\n                    });\n                });\n            } catch (err) {\n                reject(new Error(`Error Stopping with PM2: ${err.message}`));\n            }\n        });\n    }\n\n    /**\n     * Restarts a service by Name and then sends message to state machine\n     * @param options Pm2 Start Options (only the name is relevant here)\n     * @returns Success or Error\n     */\n    private async _restartService(options: StartOptions): Promise {\n        const fsm = this._appService.machines[options.name].fsm;\n        // If only machine is set then just communicate with the state machine\n        if (fsm.state.context.onlyMachine) {\n            Log.info(`Successfully Restarted ${options.name} without pm2`);\n            fsm.send('STARTED');\n            return;\n        }\n        Log.info(`Restarting ${options.name} Service`);\n        return new Promise((resolve, reject) => {\n            try {\n                fsm.send('RESTART');\n                pm2.restart(options.name, (err) => {\n                    if (err) reject(err);\n                    Log.info(`Successfully Restarted ${options.name}`);\n                    fsm.send('STARTED');\n                    resolve(true);\n                });\n            } catch (err) {\n                reject(new Error(`Error Restarting with PM2: ${err.message}`));\n            }\n        });\n    }\n\n    /**\n     * Sets up how to parse PM2 Bus packets\n     * @param packet Packet from PM2 Bus\n     * @param sr Stream Response object that contains where Response should go\n     * @param error If error route to error method\n     */\n    public setupProcessListener(packet: PM2BusPacket, sr: StreamResponse, error = false) {\n        if (!sr) {\n            Log.error(`No Response found for ${packet.process.name}`);\n            return;\n        }\n        if (!sr.respond) {\n            Log.debug(`No Response setup for ${packet.process.name}`);\n            return;\n        }\n        sr.satMessage.next({\n            targetmachine: sr.targetmachine,\n            method: error ? sr.err : sr.out,\n            output: packet.data,\n            satellite: this._appService.satelliteId,\n        });\n    }\n\n    /**\n     * Promise wrapper around pm2 method to communicate to through pm2 bus\n     * @param pId pm2_id to send the packet to\n     * @param data Information to send to the Process\n     * @returns Promise to indicate success\n     */\n    public async sendPm2Bus(pId: number | string, data): Promise {\n        const id = typeof pId === 'string' ? parseInt(pId) : pId;\n        const packet = {\n            id,\n            type: 'process:msg', // Must remain as this\n            topic: true, // Must be true\n            data,\n        };\n        return new Promise((resolve, reject) => {\n            pm2.sendDataToProcessId(id, packet, (err) => {\n                if (err) {\n                    reject(err);\n                } else resolve(true);\n            });\n        });\n    }\n\n    /**\n     * Promise wrapper around pm2 method to communicate to through stdin\n     * @param pId pm2_id to send the packet to\n     * @param data Information to send to the Process\n     * @returns Promise to indicate success\n     */\n    public async sendStdin(pId: number | string, line: any): Promise {\n        const id = typeof pId === 'string' ? parseInt(pId) : pId;\n        const packet = {\n            id,\n            line,\n        };\n        const pm2WOtypes = pm2 as any;\n        return new Promise((resolve, reject) => {\n            pm2WOtypes.sendLineToStdin(id, line, (err) => {\n                if (err) {\n                    reject(err);\n                } else resolve(true);\n            });\n        });\n    }\n\n    private _testOptions(options: StartOptions): StartOptions {\n        const uo = { ...options };\n        const testScript = this._configService.get('test_script');\n        uo.script = resolve(__dirname, testScript);\n        delete uo.cwd;\n        delete uo.interpreter;\n        delete uo.exec_mode;\n        delete uo.watch;\n        const updatedEnv = { ...uo.env };\n        delete updatedEnv.PATH;\n        uo.env = updatedEnv;\n        return uo;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedData.html":{"url":"interfaces/ProcessedData.html","title":"interface - ProcessedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/satellite.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cwlFile\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dagId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            downloads\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sample\n                                        \n                                \n                                \n                                        \n                                            taskId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cwlFile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cwlFile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dagId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dagId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloads\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        downloads:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sample\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sample:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taskId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taskId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UrlWithStringQuery } from 'url';\n\nexport interface ProcessedData {\n    cwlFile?: string;\n    sample?: any;\n    taskId: string;\n    dagId?: string;\n    downloads?: any[];\n}\n\nexport interface BaseModuleInterface {\n    getInfo(): {\n        moduleId: string;\n        caption: string;\n        type: string;\n    };\n\n    getFile(fileUrl: UrlWithStringQuery, userId?: string, sampleId?: string): FileData;\n}\n\nexport interface Info {\n    moduleId: string;\n    caption?: string;\n    type?: string;\n    mainUrl?: string;\n    loginUrl?: string;\n    viewListUrl?: string;\n    downloadUrl?: string;\n    private_key?: string;\n    private_iv?: string;\n    encryptKey?: string;\n    token?: string;\n    protocol?: string;\n    collection?: any;\n    publication?: string;\n    refreshSessionInterval?: number;\n}\n\nexport interface FileData {\n    url: string;\n    basename: string;\n    header: string;\n}\n\nexport interface DownloadObject {\n    uri: string;\n    path: string;\n    header: string;\n    sampleId: string;\n    projectId: string;\n    userId: string;\n    fileId: string;\n    inputKey?: string;\n    token: string;\n    downloaded: boolean;\n    taskId: string;\n    fileName: string;\n    gid?: string;\n}\n\nexport interface AriaDownloadObject extends DownloadObject {\n    gid: string;\n}\n\nexport interface DownloadResults {\n    status: string;\n    fileId?: string;\n    taskId?: string;\n    progress?: string;\n    error?: boolean;\n    path?: string;\n    size?: number;\n    message?: string;\n    sampleId?: string;\n}\n\nexport interface Aria2cProgressReport {\n    status: string;\n    completedLength: number;\n    totalLength: number;\n    files: AriaFileInfo[];\n}\n\nexport interface MergedDownloadObject {\n    aria2: Aria2cProgressReport;\n    data: AriaDownloadObject;\n}\n\nexport interface AriaFileInfo {\n    path: string;\n    uris: {\n        uri: string;\n    }[];\n}\nexport interface AirflowReportToAPI {\n    state: string;\n    dagId: string;\n    runId: string;\n    progress: number;\n    error: string;\n}\n\nexport interface AirflowSuccessToAPI {\n    dagId: string;\n    runId: string;\n    progress: number;\n    results: any;\n}\n\nexport interface SatelliteJWT {\n    userId: string;\n    iat: number; //in seconds\n    exp: number; //in seconds\n    aud: string; //satellite id\n    sub: string; //satellite\n}\n\nexport interface DownloadFailed {\n    message: string;\n    sampleId: string;\n    taskId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedTree.html":{"url":"interfaces/ProcessedTree.html","title":"interface - ProcessedTree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessedTree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apimachine\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            busresponse\n                                        \n                                \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorresponse\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            onlyMachine\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            outresponse\n                                        \n                                \n                                \n                                        \n                                            stateMachine\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apimachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apimachine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        busresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        busresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         ProcessedTree[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProcessedTree[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onlyMachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onlyMachine:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         StartOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StartOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stateMachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stateMachine:         StateMachineOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateMachineOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SatelliteJWT.html":{"url":"interfaces/SatelliteJWT.html","title":"interface - SatelliteJWT","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SatelliteJWT\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/satellite.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UrlWithStringQuery } from 'url';\n\nexport interface ProcessedData {\n    cwlFile?: string;\n    sample?: any;\n    taskId: string;\n    dagId?: string;\n    downloads?: any[];\n}\n\nexport interface BaseModuleInterface {\n    getInfo(): {\n        moduleId: string;\n        caption: string;\n        type: string;\n    };\n\n    getFile(fileUrl: UrlWithStringQuery, userId?: string, sampleId?: string): FileData;\n}\n\nexport interface Info {\n    moduleId: string;\n    caption?: string;\n    type?: string;\n    mainUrl?: string;\n    loginUrl?: string;\n    viewListUrl?: string;\n    downloadUrl?: string;\n    private_key?: string;\n    private_iv?: string;\n    encryptKey?: string;\n    token?: string;\n    protocol?: string;\n    collection?: any;\n    publication?: string;\n    refreshSessionInterval?: number;\n}\n\nexport interface FileData {\n    url: string;\n    basename: string;\n    header: string;\n}\n\nexport interface DownloadObject {\n    uri: string;\n    path: string;\n    header: string;\n    sampleId: string;\n    projectId: string;\n    userId: string;\n    fileId: string;\n    inputKey?: string;\n    token: string;\n    downloaded: boolean;\n    taskId: string;\n    fileName: string;\n    gid?: string;\n}\n\nexport interface AriaDownloadObject extends DownloadObject {\n    gid: string;\n}\n\nexport interface DownloadResults {\n    status: string;\n    fileId?: string;\n    taskId?: string;\n    progress?: string;\n    error?: boolean;\n    path?: string;\n    size?: number;\n    message?: string;\n    sampleId?: string;\n}\n\nexport interface Aria2cProgressReport {\n    status: string;\n    completedLength: number;\n    totalLength: number;\n    files: AriaFileInfo[];\n}\n\nexport interface MergedDownloadObject {\n    aria2: Aria2cProgressReport;\n    data: AriaDownloadObject;\n}\n\nexport interface AriaFileInfo {\n    path: string;\n    uris: {\n        uri: string;\n    }[];\n}\nexport interface AirflowReportToAPI {\n    state: string;\n    dagId: string;\n    runId: string;\n    progress: number;\n    error: string;\n}\n\nexport interface AirflowSuccessToAPI {\n    dagId: string;\n    runId: string;\n    progress: number;\n    results: any;\n}\n\nexport interface SatelliteJWT {\n    userId: string;\n    iat: number; //in seconds\n    exp: number; //in seconds\n    aud: string; //satellite id\n    sub: string; //satellite\n}\n\nexport interface DownloadFailed {\n    message: string;\n    sampleId: string;\n    taskId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SatelliteMessage.html":{"url":"interfaces/SatelliteMessage.html","title":"interface - SatelliteMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SatelliteMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            keepalive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            messages\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sender\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            taskid\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        keepalive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepalive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taskid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taskid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SatelliteOutput.html":{"url":"interfaces/SatelliteOutput.html","title":"interface - SatelliteOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SatelliteOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            satellite\n                                        \n                                \n                                \n                                        \n                                            targetmachine\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satellite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satellite:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetmachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetmachine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SatelliteTask.html":{"url":"interfaces/SatelliteTask.html","title":"interface - SatelliteTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SatelliteTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apimachine\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            command\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorresponse\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            outresponse\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            savelogs\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scriptstring\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            streamresponse\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apimachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apimachine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         CustomPm2StartOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CustomPm2StartOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outresponse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        savelogs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        savelogs:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scriptstring\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scriptstring:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streamresponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        streamresponse:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceCommand.html":{"url":"interfaces/ServiceCommand.html","title":"interface - ServiceCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bus\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            command\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stdin\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stdin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stdin:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StartOptions.html":{"url":"interfaces/StartOptions.html","title":"interface - StartOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StartOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PM2StartOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autorestart\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            keepscript\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autorestart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autorestart:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepscript\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keepscript:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StateMachineModules.html":{"url":"modules/StateMachineModules.html","title":"module - StateMachineModules","body":"\n                   \n\n\n\n\n    Modules\n    StateMachineModules\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StateMachineModules\n\n\n\ncluster_StateMachineModules_exports\n\n\n\ncluster_StateMachineModules_providers\n\n\n\n\nStateMachinesService \n\nStateMachinesService \n\n\n\nStateMachineModules\n\nStateMachineModules\n\nStateMachinesService  -->\n\nStateMachineModules->StateMachinesService \n\n\n\n\n\nStateMachinesService\n\nStateMachinesService\n\nStateMachineModules -->\n\nStateMachinesService->StateMachineModules\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stateMachines/stateMachines.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StateMachinesService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StateMachinesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\n\nimport { AppModule } from '../app.module';\nimport { StateMachinesService } from './stateMachines.service';\n\n@Module({\n    imports: [forwardRef(() => AppModule)],\n    providers: [StateMachinesService],\n    exports: [StateMachinesService],\n})\nexport class StateMachineModules {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateMachineOptions.html":{"url":"interfaces/StateMachineOptions.html","title":"interface - StateMachineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StateMachineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            guards\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            on\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            states\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guards\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        guards:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        on\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        on:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        states\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        states:         OptionTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OptionTypes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateMachinesService.html":{"url":"injectables/StateMachinesService.html","title":"injectable - StateMachinesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StateMachinesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stateMachines/stateMachines.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _network\n                            \n                            \n                                    Private\n                                _pm2\n                            \n                            \n                                    Private\n                                apisync$\n                            \n                            \n                                    Public\n                                sendEvent$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createStateMachine\n                            \n                            \n                                    Public\n                                interpretStateMachine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_appService: AppService)\n                    \n                \n                        \n                            \n                                Defined in src/stateMachines/stateMachines.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createStateMachine\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStateMachine(tree: ProcessedTree, script: string, child: boolean, children: ServiceMachine[])\n                \n            \n\n\n            \n                \n                    Defined in src/stateMachines/stateMachines.service.ts:45\n                \n            \n\n\n            \n                \n                    Assemble the Finite State Machine for a Service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                                ProcessedTree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A tree node from API-Sync\n\n                                    \n                                \n                                \n                                    script\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The updated Script Location\n\n                                    \n                                \n                                \n                                    child\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        False if Root Node\n\n                                    \n                                \n                                \n                                    children\n                                    \n                                                ServiceMachine[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array of Child Machines to insert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ServiceMachine\n\n                    \n                    \n                        A Finite State Machine representing a Service\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        interpretStateMachine\n                        \n                    \n                \n            \n            \n                \n                    \n                    interpretStateMachine(machine: ServiceMachine)\n                \n            \n\n\n            \n                \n                    Defined in src/stateMachines/stateMachines.service.ts:196\n                \n            \n\n\n            \n                \n                    Pass a FSM through the interpreter so that we can use it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    machine\n                                    \n                                                ServiceMachine\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An assembled Finite State Machine\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ServiceInterpreter\n\n                    \n                    \n                        An Interpreted Machine\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _network\n                        \n                    \n                \n            \n                \n                    \n                        Default value : network\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _pm2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : pm2\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apisync$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendEvent$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/stateMachines/stateMachines.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { createMachine, interpret, spawn } from 'xstate';\nimport { Subject } from 'rxjs';\nimport pm2Types from 'pm2';\nimport network = require('network');\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst pm2: typeof pm2Types = require('pm2');\n\nimport { stateLogger } from '../lib/logger';\nimport defaultMachineConfig from '../lib/stateMachine';\nimport { OptionTypes, ProcessedTree, SatelliteMessage, ServiceContext, ServiceEvent, ServiceInterpreter, ServiceMachine, ServiceState } from '../interfaces';\nimport { AppService } from '../app.service';\n\n@Injectable()\nexport class StateMachinesService {\n    // Subject that sends Event to other State Machines\n    //  type is the Event\n    //  to is the name of the State Machine\n    public sendEvent$ = new Subject();\n\n    // Subject that sends a message to API-Sync\n    private apisync$ = new Subject();\n    // Allows custom scripts to access pm2\n    private _pm2 = pm2;\n    // Needed to get ips\n    private _network = network;\n\n    constructor(\n        @Inject(forwardRef(() => AppService))\n        private _appService: AppService,\n    ) {\n        this.apisync$.subscribe((msg) => {\n            this._appService.sendToAPISync(msg);\n        });\n    }\n\n    /**\n     * Assemble the Finite State Machine for a Service\n     * @param tree A tree node from API-Sync\n     * @param script The updated Script Location\n     * @param child False if Root Node\n     * @param children Array of Child Machines to insert\n     * @returns A Finite State Machine representing a Service\n     */\n    public createStateMachine(tree: ProcessedTree, script: string, child: boolean, children: ServiceMachine[]): ServiceMachine {\n        const { name, options, errorresponse, outresponse, apimachine } = tree;\n        // Create a custom logger for each state machine so that they are easier to distinguish\n        const logger = stateLogger(name);\n        const updatedDefaultConfig = { ...defaultMachineConfig };\n        // If any global on Events have been declared add them to the state machine\n        if (tree.stateMachine.on) {\n            updatedDefaultConfig.on = { ...updatedDefaultConfig.on, ...tree.stateMachine.on };\n        }\n\n        let busresponse = (args: any) => null;\n        if (tree.busresponse) {\n            busresponse = (args: any) => {\n                try {\n                    // Call the function body with all of the helper arguments and bind it to this context\n                    new Function('args', 'children', 'logger', tree.busresponse).call(this, args, children, logger);\n                } catch (err) {\n                    logger.error(`Failed to run action ${tree.busresponse}: ${err}`);\n                }\n            };\n        }\n\n        const updatedActions = {};\n        // If any actions have been declared parse them correctly\n        if (tree.stateMachine.actions) {\n            const actions = tree.stateMachine.actions;\n            Object.keys(actions).forEach(\n                (k) =>\n                    (updatedActions[k] = (ctx: ServiceContext) => {\n                        try {\n                            // Call the function body with all of the helper arguments and bind it to this context\n                            new Function('ctx', 'children', 'logger', actions[k]).call(this, ctx, children, logger);\n                        } catch (err) {\n                            logger.error(`Failed to run action ${k}: ${err}`);\n                        }\n                    }),\n            );\n        }\n\n        const updatedGuards = {};\n        // If any guards have been declared parse them correctly\n        if (tree.stateMachine.guards) {\n            const guards = tree.stateMachine.guards;\n            Object.keys(guards).forEach(\n                (k) =>\n                    (updatedGuards[k] = (ctx: ServiceContext) => {\n                        try {\n                            // Call the function body with all of the helper arguments and bind it to this context\n                            return new Function('ctx', 'children', 'logger', guards[k]).call(this, ctx, children, logger);\n                        } catch (err) {\n                            logger.error(`Failed to run guard ${k}: ${err}`);\n                        }\n                    }),\n            );\n        }\n        // If any states have been declared add them to the state machine\n        if (tree.stateMachine.states) {\n            const updatedStates = updatedDefaultConfig.states;\n            Object.keys(tree.stateMachine.states).forEach((key) => {\n                const state = tree.stateMachine.states[key];\n                if (state.overwrite) {\n                    updatedStates[key] = state;\n                    return;\n                }\n                const finalState = updatedDefaultConfig.states[key] || {};\n                const finalEntry = finalState.entry || [];\n                const stateEntry = state.entry || [];\n                const finalExit = finalState.exit || [];\n                const stateExit = state.exit || [];\n                finalState.entry = [...new Set([...finalEntry, ...stateEntry])];\n                finalState.exit = [...new Set([...finalExit, ...stateExit])];\n                const finalOn = finalState.on || {};\n                if (state.on) {\n                    Object.keys(state.on).forEach((k) => {\n                        const onState = state.on[k];\n                        const onFinal = finalOn[k] || { actions: [] };\n                        const onFinalActions = onFinal.actions || [];\n                        const onStateActions = onState.actions || [];\n                        onFinal.actions = [...new Set([...onFinalActions, ...onStateActions])];\n                        if (onState.target) onFinal.target = onState.target;\n                        if (onState.cond) onFinal.cond = onState.cond;\n                        finalOn[k] = onFinal;\n                    });\n                }\n                finalState.on = finalOn;\n                updatedStates[key] = finalState;\n            });\n            updatedDefaultConfig.states = updatedStates;\n        }\n        const machine = createMachine(\n            {\n                // Start with the default config\n                ...updatedDefaultConfig,\n                id: name,\n                context: () => {\n                    const childrenSpawn: any = {};\n                    // Spawn all of the children within the machine itself, so that they have the correct relationship\n                    children.forEach((i) => {\n                        childrenSpawn[i.machine.id] = spawn(i, i.machine.id);\n                    });\n                    return {\n                        name,\n                        script,\n                        namespace: 'scidap-satellite',\n                        notChild: !child,\n                        options: { ...options, script },\n                        onlyMachine: tree.onlyMachine,\n                        errorresponse,\n                        outresponse,\n                        stdin: null,\n                        apimachine,\n                        busresponse,\n                        ...childrenSpawn,\n                    };\n                },\n            },\n            {\n                guards: {\n                    // Guard the Offline to Started route so that a child must pass through Ready\n                    notChild: (ctx: ServiceContext) => ctx.notChild,\n                    ...updatedGuards,\n                },\n                actions: {\n                    // Send the STOPPED event to any child when the parent stops\n                    sendStopToChild: (ctx) => {\n                        if (!children.length) return;\n                        logger.info('Sending Stop to children: ', children.map((i) => i.machine.id).join(', '));\n                        children.forEach((child) => {\n                            ctx[child.machine.id].send('STOPPED');\n                        });\n                    },\n                    // Send the PARENT_ONLINE event to any child when the parent is online\n                    sendReadyToChild: (ctx) => {\n                        if (!children.length) return;\n                        logger.info('Sending Ready to children: ', children.map((i) => i.machine.id).join(', '));\n                        children.forEach((child) => {\n                            ctx[child.machine.id].send('PARENT_ONLINE');\n                        });\n                    },\n                    ...updatedActions,\n                },\n            },\n        );\n        return machine;\n    }\n\n    /**\n     * Pass a FSM through the interpreter so that we can use it\n     * @param machine An assembled Finite State Machine\n     * @returns An Interpreted Machine\n     */\n    public interpretStateMachine(machine: ServiceMachine): ServiceInterpreter {\n        const interpreted = interpret(machine);\n        return interpreted;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateOptions.html":{"url":"interfaces/StateOptions.html","title":"interface - StateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StateOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            entry\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            on\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overwrite\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entry:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exit:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        on\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        on:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overwrite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overwrite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StreamInformation.html":{"url":"interfaces/StreamInformation.html","title":"interface - StreamInformation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StreamInformation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            targetmachine\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetmachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetmachine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StreamResponse.html":{"url":"interfaces/StreamResponse.html","title":"interface - StreamResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StreamResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            err\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            out\n                                        \n                                \n                                \n                                        \n                                            respond\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            satMessage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sub\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            targetmachine\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        err\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        err:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        out:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        respond\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        respond:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        satMessage:         Subject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Subject\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetmachine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetmachine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _tempFolder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                processTaskForPm2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService, _pm2Service: Pm2Service)\n                    \n                \n                        \n                            \n                                Defined in src/task.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _pm2Service\n                                                  \n                                                        \n                                                                        Pm2Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        processTaskForPm2\n                        \n                    \n                \n            \n            \n                \n                    \n                    processTaskForPm2(task: SatelliteTask)\n                \n            \n\n\n            \n                \n                    Defined in src/task.service.ts:26\n                \n            \n\n\n            \n                \n                    Parse the Options and Set up Temporary Folders\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                SatelliteTask\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task from API-Sync\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Locations and updated Options\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _tempFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/task.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { promises as fsPromises } from 'fs';\n\nimport { SatelliteTask, ServiceInterpreter } from './interfaces';\nimport Log from './lib/logger';\nimport { randomName } from './lib/utilities';\nimport { Pm2Service } from './pm2/pm2.service';\n\n@Injectable()\nexport class TaskService {\n    // The folder where we write scripts and temporary logs\n    //  In the settings.yml 'tmp' key\n    private _tempFolder: string;\n\n    constructor(private _configService: ConfigService, private _pm2Service: Pm2Service) {\n        this._tempFolder = !!this._configService.get('tmp') ? this._configService.get('tmp') : '/tmp/scidap_satellite';\n    }\n\n    /**\n     * Parse the Options and Set up Temporary Folders\n     * @param task Task from API-Sync\n     * @returns Locations and updated Options\n     */\n    public async processTaskForPm2(task: SatelliteTask): Promise {\n        const folderName = randomName(task.name);\n        const errorLoc = join(this._tempFolder, folderName, `${task.name}-error.log`);\n        const outLoc = join(this._tempFolder, folderName, `${task.name}-out.log`);\n        const options = task.options || {};\n        if (!options.name) options.name = task.name;\n        options.output = outLoc;\n        options.error = errorLoc;\n        if (task.scriptstring) {\n            const dirname = join(this._tempFolder, folderName);\n            try {\n                await fsPromises.mkdir(dirname);\n            } catch (err) {\n                Log.debug('Output Folder already exists');\n            }\n            try {\n                const fileName = join(this._tempFolder, folderName, 'script');\n                await fsPromises.writeFile(fileName, task.scriptstring);\n                await fsPromises.chmod(fileName, 0o777);\n                options.script = fileName;\n            } catch (err) {\n                const msg = `Error Creating Script ${task.name}: ${err}`;\n                return { created: false, msg };\n            }\n        }\n        const parsedOptions = this._pm2Service.parseOptions(options);\n        return {\n            created: true,\n            options: parsedOptions,\n            errorLoc,\n            outLoc,\n            folderName,\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TreeService.html":{"url":"injectables/TreeService.html","title":"injectable - TreeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TreeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tree.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                processTrees\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_pm2Service: Pm2Service)\n                    \n                \n                        \n                            \n                                Defined in src/tree.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _pm2Service\n                                                  \n                                                        \n                                                                        Pm2Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        processTrees\n                        \n                    \n                \n            \n            \n                \n                    \n                    processTrees(trees: DependencyTree[])\n                \n            \n\n\n            \n                \n                    Defined in src/tree.service.ts:14\n                \n            \n\n\n            \n                \n                    Takes a raw list of trees and creates the structure we need for our state machines\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    trees\n                                    \n                                                DependencyTree[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A list of trees from API-Sync\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProcessedTree[]\n\n                    \n                    \n                        A list of trees that we can use to create State Machines\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { DependencyTree, ProcessedTree, StateMachineOptions } from './interfaces';\nimport { Pm2Service } from './pm2/pm2.service';\n\n@Injectable()\nexport class TreeService {\n    constructor(private _pm2Service: Pm2Service) {}\n    /**\n     * Takes a raw list of trees and creates the structure we need for our state machines\n     * @param trees A list of trees from API-Sync\n     * @returns A list of trees that we can use to create State Machines\n     */\n    public processTrees(trees: DependencyTree[]): ProcessedTree[] {\n        return trees.map((tree): ProcessedTree => {\n            // Run every tree and child through the parser to make sure it is the shape of pm2StartOptions\n            //  instead of the slightly different gRPC protocol\n            const treeParser = (curr: DependencyTree): ProcessedTree => {\n                const options = !!curr.options ? this._pm2Service.parseOptions(curr.options) : {};\n                const stateMachine: StateMachineOptions = {};\n                if (curr.statemachine) {\n                    const sm = curr.statemachine;\n                    if (sm.guards) {\n                        stateMachine.guards = sm.guards;\n                    }\n                    if (sm.actions) {\n                        stateMachine.actions = sm.actions;\n                    }\n                    if (sm.states) {\n                        stateMachine.states = {};\n                        Object.keys(sm.states).forEach((k) => (stateMachine.states[k] = sm.states[k]));\n                    }\n                    if (sm.on) {\n                        stateMachine.on = sm.on;\n                    }\n                }\n\n                const children = !!curr.children ? curr.children.map((c) => treeParser(c)) : [];\n                return {\n                    name: curr.options.name,\n                    options,\n                    children,\n                    stateMachine,\n                    onlyMachine: !!curr.onlymachine,\n                    apimachine: tree.apimachine,\n                    outresponse: tree.outresponse,\n                    errorresponse: tree.errorresponse,\n                    busresponse: tree.busresponse,\n                };\n            };\n            return treeParser(tree);\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UnProcessedStateMachineOptions.html":{"url":"interfaces/UnProcessedStateMachineOptions.html","title":"interface - UnProcessedStateMachineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UnProcessedStateMachineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/apiSync.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            guards\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            on\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            states\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guards\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        guards:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        on\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        on:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        states\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        states:         OptionTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OptionTypes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Metadata } from 'grpc';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { StartOptions as PM2StartOptions } from 'pm2/types';\n\nexport interface APISyncService {\n    streamQueue(upstream: Observable, metadata: Metadata): Observable;\n    commandStream(upstream: Observable): Observable;\n    fileStream(upstream: Observable): Observable;\n}\n\nexport interface APISyncMessage {\n    taskId: string;\n    satelliteid?: string;\n    tasks: SatelliteTask[];\n    trees: DependencyTree[];\n    commands: ServiceCommand[];\n    keepalive?: boolean;\n}\n\nexport interface DependencyTree {\n    children: DependencyTree[];\n    options: CustomPm2StartOptions;\n    statemachine?: UnProcessedStateMachineOptions;\n    onlymachine?: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface UnProcessedStateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface ProcessedTree {\n    name: string;\n    children: ProcessedTree[];\n    options: StartOptions;\n    stateMachine: StateMachineOptions;\n    onlyMachine: boolean;\n    apimachine?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    busresponse?: string;\n}\n\nexport interface StateMachineOptions {\n    states?: OptionTypes;\n    on?: { [key: string]: OnOptions };\n    guards?: { [key: string]: string };\n    actions?: { [key: string]: string };\n}\n\nexport interface OptionTypes {\n    [key: string]: StateOptions;\n}\n\nexport interface StateOptions {\n    on?: {\n        [key: string]: OnOptions;\n    };\n    entry?: string[];\n    exit?: string[];\n    overwrite?: boolean;\n}\n\nexport interface OnOptions {\n    target?: string;\n    actions?: string[];\n    cond?: string;\n}\nexport interface CustomPm2StartOptions extends StartOptions {\n    // used for testing\n    keepscript?: boolean;\n    // Always use args as an array of strings instead of a string\n    args?: string[];\n    // Always use interpreter_args as an array of strings instead of a string\n    interpreter_args?: string[];\n    // Always use a number for max_memory_restart\n    max_memory_restart?: number;\n\n    // We can't set a variable field so if watch array is set we use it\n    //  instead of watch\n    watch?: boolean;\n    watch_array?: string[];\n\n    // We can't set a gRPC field to any so we need to stringify them on API sync\n    //  and parse them on the satellite\n    cron?: string;\n    execute_command?: string;\n    write?: string;\n    source_map_support?: string;\n    disable_source_map_support?: string;\n}\n\nexport interface StartOptions extends PM2StartOptions {\n    keepscript?: boolean;\n    namespace?: string;\n    autorestart?: boolean;\n}\n\nexport interface SatelliteTask {\n    name: string;\n    apimachine: string;\n    target: string;\n    command?: string;\n    options?: CustomPm2StartOptions;\n    streamresponse?: boolean;\n    scriptstring?: string;\n    outresponse?: string;\n    errorresponse?: string;\n    savelogs?: boolean;\n}\n\n/* Satellite's Response, Including which part of the Satellite the message\n * originated from, type will be how we process it */\nexport interface SatelliteMessage {\n    target?: string;\n    taskid?: string;\n    sender?: string;\n    type?: string;\n    messages?: { action: string; body: string }[];\n    keepalive?: boolean;\n}\n\n// TODO: Come back to these\nexport interface SatelliteOutput {\n    targetmachine: string;\n    method: string;\n    output: string;\n    error?: boolean;\n    satellite: string;\n}\n\ninterface FileFromClient {\n    [key: string]: any;\n}\ninterface APISyncComplete {\n    [key: string]: any;\n}\n\nexport interface StreamInformation {\n    // The Satellite Machine to send the response to\n    targetmachine: string;\n    // The method to call on the machine\n    method: string;\n}\n\nexport interface StreamResponse {\n    respond: boolean;\n    // The Satellite Machine to send the response to\n    targetmachine?: string;\n    // The method to call on the machine\n    out?: string;\n    err?: string;\n\n    sub?: Subscription;\n    satMessage?: Subject;\n}\n\nexport interface ServiceCommand {\n    target: string;\n    command?: string;\n    stdin?: string[];\n    bus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                25 %\n                (7/27)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            variable\n            pingKillTimer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            variable\n            pingTimer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            variable\n            pm2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            variable\n            pm2MonitorTimer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            variable\n            REMOVE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            variable\n            retryTimer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            variable\n            Tail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            variable\n            VERSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/command.service.ts\n            \n            injectable\n            CommandService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            APISyncComplete\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            APISyncMessage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            APISyncService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            CustomPm2StartOptions\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            DependencyTree\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            FileFromClient\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            OnOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            OptionTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            ProcessedTree\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            SatelliteMessage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            SatelliteOutput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            SatelliteTask\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            ServiceCommand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            StartOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            StateMachineOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            StateOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            StreamInformation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            StreamResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/interfaces/apiSync.interface.ts\n            \n            interface\n            UnProcessedStateMachineOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/pm2.interface.ts\n            \n            interface\n            PM2_Service\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interfaces/pm2.interface.ts\n            \n            interface\n            PM2BusPacket\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces/satellite.interface.ts\n            \n            interface\n            AirflowReportToAPI\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/interfaces/satellite.interface.ts\n            \n            interface\n            AirflowSuccessToAPI\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/satellite.interface.ts\n            \n            interface\n            Aria2cProgressReport\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/satellite.interface.ts\n            \n            interface\n            AriaDownloadObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interfaces/satellite.interface.ts\n            \n            interface\n            AriaFileInfo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/satellite.interface.ts\n            \n            interface\n            BaseModuleInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/satellite.interface.ts\n            \n            interface\n            DownloadFailed\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces/satellite.interface.ts\n            \n            interface\n            DownloadObject\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/interfaces/satellite.interface.ts\n            \n            interface\n            DownloadResults\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/interfaces/satellite.interface.ts\n            \n            interface\n            FileData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces/satellite.interface.ts\n            \n            interface\n            Info\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/interfaces/satellite.interface.ts\n            \n            interface\n            MergedDownloadObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/satellite.interface.ts\n            \n            interface\n            ProcessedData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/interfaces/satellite.interface.ts\n            \n            interface\n            SatelliteJWT\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/interfaces/stateMachine.interface.ts\n            \n            interface\n            BaseContext\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/interfaces/stateMachine.interface.ts\n            \n            interface\n            ContextChildren\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/stateMachine.interface.ts\n            \n            interface\n            DefaultMachineConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/actionType.ts\n            \n            variable\n            airflowProgress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/actionType.ts\n            \n            variable\n            airflowStatistics\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/actionType.ts\n            \n            variable\n            airflowSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/actionType.ts\n            \n            variable\n            dagCleared\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/actionType.ts\n            \n            variable\n            downloading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/actionType.ts\n            \n            variable\n            error\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/actionType.ts\n            \n            variable\n            finished\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/actionType.ts\n            \n            variable\n            getTask\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/actionType.ts\n            \n            variable\n            keepAlive\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/actionType.ts\n            \n            variable\n            processing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/actionType.ts\n            \n            variable\n            satVersion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/actionType.ts\n            \n            variable\n            visualPlugin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/logger.ts\n            \n            variable\n            stateLogger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/stateMachine.ts\n            \n            variable\n            defaultMachineConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/taskType.ts\n            \n            variable\n            downloading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/taskType.ts\n            \n            variable\n            finishedDownloading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/taskType.ts\n            \n            variable\n            newSample\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/taskType.ts\n            \n            variable\n            processing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/taskType.ts\n            \n            variable\n            rerunSample\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/taskType.ts\n            \n            variable\n            updatedSample\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/utilities.ts\n            \n            variable\n            locationHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/utilities.ts\n            \n            variable\n            randomName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/utilities.ts\n            \n            variable\n            wait\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/pm2/pm2.service.ts\n            \n            injectable\n            Pm2Service\n            \n                69 %\n                (9/13)\n            \n        \n        \n            \n                \n                src/pm2/pm2.service.ts\n            \n            variable\n            pm2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stateMachines/stateMachines.service.ts\n            \n            injectable\n            StateMachinesService\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/stateMachines/stateMachines.service.ts\n            \n            variable\n            pm2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task.service.ts\n            \n            injectable\n            TaskService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/tree.service.ts\n            \n            injectable\n            TreeService\n            \n                33 %\n                (1/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @grpc/proto-loader : ^0.5.5\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/microservices : ^7.5.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/schedule : ^0.4.1\n        \n            bunyan : ^1.8.14\n        \n            cron : ^1.8.2\n        \n            default-gateway : ^6.0.3\n        \n            grpc : ^1.24.4\n        \n            mime-types : ^2.1.29\n        \n            network : ^0.5.0\n        \n            pm2 : ^5.1.2\n        \n            proxy-chain : ^1.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            send-stream : ^2.2.0\n        \n            tail : ^2.2.4\n        \n            tail-file : ^1.4.15\n        \n            tsconfig.json : ^1.0.11\n        \n            xstate : ^4.26.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Starts up satellite, it needs to listen to ports for CWL Airflow API to report progress\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_Pm2Module\n\n\n\ncluster_Pm2Module_exports\n\n\n\ncluster_Pm2Module_providers\n\n\n\ncluster_StateMachineModules\n\n\n\ncluster_StateMachineModules_exports\n\n\n\ncluster_StateMachineModules_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAppService \n\nAppService \n\nAppService  -->\n\nAppModule->AppService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCommandService\n\nCommandService\n\nAppModule -->\n\nCommandService->AppModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nAppModule -->\n\nTaskService->AppModule\n\n\n\n\n\nTreeService\n\nTreeService\n\nAppModule -->\n\nTreeService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPm2Service \n\nPm2Service \n\n\n\nPm2Module\n\nPm2Module\n\nPm2Service  -->\n\nPm2Module->Pm2Service \n\n\n\n\n\nPm2Service\n\nPm2Service\n\nPm2Module -->\n\nPm2Service->Pm2Module\n\n\n\n\n\nStateMachinesService \n\nStateMachinesService \n\n\n\nStateMachineModules\n\nStateMachineModules\n\nStateMachinesService  -->\n\nStateMachineModules->StateMachinesService \n\n\n\n\n\nStateMachinesService\n\nStateMachinesService\n\nStateMachineModules -->\n\nStateMachinesService->StateMachineModules\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    38 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Pm2Module\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StateMachineModules\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ServiceContext   (src/.../stateMachine.interface.ts)\n                        \n                        \n                            ServiceEvent   (src/.../stateMachine.interface.ts)\n                        \n                        \n                            ServiceInterpreter   (src/.../stateMachine.interface.ts)\n                        \n                        \n                            ServiceMachine   (src/.../stateMachine.interface.ts)\n                        \n                        \n                            ServiceMachineConfig   (src/.../stateMachine.interface.ts)\n                        \n                        \n                            ServiceState   (src/.../stateMachine.interface.ts)\n                        \n                        \n                            ServiceStateValues   (src/.../stateMachine.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/interfaces/stateMachine.interface.ts\n    \n    \n        \n            \n                \n                    \n                    ServiceContext\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ServiceEvent\n                \n            \n            \n                \n                        literal type | literal type | literal type | literal type | literal type | literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ServiceInterpreter\n                \n            \n            \n                \n                        Interpreter\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ServiceMachine\n                \n            \n            \n                \n                        StateMachine\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ServiceMachineConfig\n                \n            \n            \n                \n                        MachineConfig\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ServiceState\n                \n            \n            \n                \n                        literal type | literal type | literal type | literal type | literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ServiceStateValues\n                \n            \n            \n                \n                            \"offline\" | \"ready\" | \"online\" | \"restarting\" | \"error\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            airflowProgress   (src/.../actionType.ts)\n                        \n                        \n                            airflowStatistics   (src/.../actionType.ts)\n                        \n                        \n                            airflowSuccess   (src/.../actionType.ts)\n                        \n                        \n                            dagCleared   (src/.../actionType.ts)\n                        \n                        \n                            defaultMachineConfig   (src/.../stateMachine.ts)\n                        \n                        \n                            downloading   (src/.../actionType.ts)\n                        \n                        \n                            downloading   (src/.../taskType.ts)\n                        \n                        \n                            error   (src/.../actionType.ts)\n                        \n                        \n                            finished   (src/.../actionType.ts)\n                        \n                        \n                            finishedDownloading   (src/.../taskType.ts)\n                        \n                        \n                            getTask   (src/.../actionType.ts)\n                        \n                        \n                            keepAlive   (src/.../actionType.ts)\n                        \n                        \n                            locationHandler   (src/.../utilities.ts)\n                        \n                        \n                            newSample   (src/.../taskType.ts)\n                        \n                        \n                            pingKillTimer   (src/.../app.service.ts)\n                        \n                        \n                            pingTimer   (src/.../app.service.ts)\n                        \n                        \n                            pm2   (src/.../app.service.ts)\n                        \n                        \n                            pm2   (src/.../stateMachines.service.ts)\n                        \n                        \n                            pm2   (src/.../pm2.service.ts)\n                        \n                        \n                            pm2MonitorTimer   (src/.../app.service.ts)\n                        \n                        \n                            processing   (src/.../actionType.ts)\n                        \n                        \n                            processing   (src/.../taskType.ts)\n                        \n                        \n                            randomName   (src/.../utilities.ts)\n                        \n                        \n                            REMOVE   (src/.../app.service.ts)\n                        \n                        \n                            rerunSample   (src/.../taskType.ts)\n                        \n                        \n                            retryTimer   (src/.../app.service.ts)\n                        \n                        \n                            satVersion   (src/.../actionType.ts)\n                        \n                        \n                            stateLogger   (src/.../logger.ts)\n                        \n                        \n                            Tail   (src/.../app.service.ts)\n                        \n                        \n                            updatedSample   (src/.../taskType.ts)\n                        \n                        \n                            VERSION   (src/.../app.service.ts)\n                        \n                        \n                            visualPlugin   (src/.../actionType.ts)\n                        \n                        \n                            wait   (src/.../utilities.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/actionType.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        airflowProgress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'airflow_progress'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        airflowStatistics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'airflow_statistics'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        airflowSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'airflow_success'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dagCleared\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dag_cleared'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'downloading'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'error'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'finished'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'get_task'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keepAlive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'keep_alive'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'processing'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        satVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'satellite_version'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualPlugin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'visual_plugin'\n                    \n                \n\n\n        \n    \n\n    src/lib/stateMachine.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultMachineConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DefaultMachineConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 'fakeName',\n    initial: 'offline',\n    states: {\n        offline: {\n            on: {\n                PARENT_ONLINE: { target: 'ready' },\n                STARTED: { target: 'online', cond: 'notChild' },\n            },\n        },\n        ready: {\n            on: {\n                STARTED: { target: 'online' },\n            },\n        },\n        online: {\n            entry: ['sendReadyToChild'],\n            exit: ['sendStopToChild'],\n        },\n        restarting: {\n            on: {\n                STARTED: { target: 'online' },\n            },\n        },\n        error: {\n            entry: ['sendStopToChild'],\n            on: {\n                PARENT_ONLINE: { target: 'ready' },\n                STARTED: { target: 'online', cond: 'notChild' },\n            },\n        },\n    },\n    on: {\n        ERROR: { target: 'error' },\n        RESTART: { target: 'restarting' },\n        STOPPED: { target: 'offline' },\n    },\n}\n                    \n                \n\n\n        \n    \n\n    src/lib/taskType.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        downloading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'downloading'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finishedDownloading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'finished_downloading'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newSample\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'new_sample'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'processing'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rerunSample\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'rerun_sample'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedSample\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'updated_sample'\n                    \n                \n\n\n        \n    \n\n    src/lib/utilities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        locationHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (home: string, location: string): string => {\n    if (!location) {\n        location = '';\n    }\n    // const resolved = resolve('/', location);\n    return resolve(home, location);\n}\n                    \n                \n\n            \n                \n                    Traps the script runner in the scidap home directory\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name?: string): string => {\n    return (!!name ? name + '_' : '') + Date.now() + '_' + Math.random().toString(36).substring(2, 9);\n}\n                    \n                \n\n            \n                \n                    Generate a random name of a file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wait\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms: number): Promise => {\n    return new Promise((resolve) => setTimeout(() => resolve(true), ms));\n}\n                    \n                \n\n            \n                \n                    A wait helper\n\n                \n            \n\n        \n    \n\n    src/app.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pingKillTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pingTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pm2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('pm2')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pm2MonitorTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REMOVE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'REMOVE'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        retryTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Tail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('tail').Tail\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '2.0'\n                    \n                \n\n\n        \n    \n\n    src/stateMachines/stateMachines.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pm2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('pm2')\n                    \n                \n\n\n        \n    \n\n    src/pm2/pm2.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pm2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('pm2')\n                    \n                \n\n\n        \n    \n\n    src/lib/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        stateLogger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => {\n    return bunyan.createLogger({\n        name: `State Machine ${name}`,\n        streams:\n            process.env.TEST && !process.env.LOGS\n                ? []\n                : [\n                      {\n                          level: 'info',\n                          path: '../statemachines.log',\n                      },\n                      {\n                          level: process.env.LOG_LEVEL ? process.env.LOG_LEVEL : 'info',\n                          stream: process.stdout,\n                      },\n                  ],\n    });\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
